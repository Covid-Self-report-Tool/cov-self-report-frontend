{"version":3,"sources":["config/index.ts","config/firebase.ts","config/map.ts","components/ticker-cards/LegendSymbol.tsx","components/ticker-cards/LegendSymbolBar.tsx","components/ticker-cards/SetCountriesSymb.tsx","utils/index.ts","components/ticker-cards/TickerCards.tsx","utils/dates.ts","components/ticker-cards/TickerInfoPopover.tsx","components/ticker-cards/ToggleLayer.tsx","utils/map.ts","components/map/Map.tsx","components/map/MapboxTileLayer.tsx","components/map/PolygonTooltip.tsx","components/map/Polygons.tsx","components/map/SubmittedCases.tsx","views/Home.tsx","views/About.tsx","views/Models.tsx","utils/firebase.ts","context/UserContext.tsx","context/GlobalContext.tsx","components/signup/AcctReqExplain.tsx","components/signup/AgreeToTerms.tsx","components/signup/EmailSignupFields.tsx","components/signup/SignInLink.tsx","components/signup/SignupForm.tsx","components/signup/SignupLoginBtns.tsx","components/LoginForm.tsx","views/LoginSignup.tsx","views/CountryList.tsx","views/SecretSnackground.tsx","utils/api.ts","utils/queries.ts","components/AboutSection.tsx","components/BackToTopBtn.tsx","components/CountryTable.tsx","components/top-bar/Burger.tsx","components/top-bar/LoginSignupBtn.tsx","components/top-bar/MySymptomsBtn.tsx","components/top-bar/TitleWrap.tsx","components/top-bar/TopBar.tsx","components/top-bar/UserPopoverMenu.tsx","components/dashboard.styles.ts","components/Dashboard.tsx","components/MobileOffCanvasNav.tsx","components/ShareButtons.tsx","components/SharingPopoutMenu.tsx","components/SimpleModal.tsx","components/SiteNavBtns.tsx","components/Snackbar.tsx","context/types.ts","components/SplashScreen.tsx","components/Disclaimer.tsx","components/SuccessConfModal.tsx","components/UnsupportedBrowserMsg.tsx","components/VerifyEmailForm.tsx","utils/strings.ts","components/submission/steps/SymptomStep.tsx","components/submission/steps/TestingStep.tsx","components/submission/steps/LocationDetailsStep.tsx","components/submission/steps/RegistrationStep.tsx","components/submission/Modal.tsx","theme.ts","Routes.tsx","index.tsx"],"names":["BACKEND_URL","process","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","REACT_APP_FIREBASE_STORAGE_PROJECT","messagingSenderId","appId","measurementId","firebase","SELF_REPORTED_STYLES","countriesSymbology","total_confirmed","palette","ranges","total_deaths","total_recovered","tickersConfig","selfReported","defText","heading","omitLastUpdated","symbol","alwaysShow","borderWidth","borderColor","fillColor","isCircular","colorStops","recovered","globalStateKey","confirmed","deaths","LegendSymbol","size","state","useContext","GlobalContext","Box","width","height","display","activeCountrySymbKey","marginRight","alignItems","border","borderRadius","bgcolor","useStyles","makeStyles","theme","barLabels","fontSize","justifyContent","color","background","default","lineHeight","marginTop","tickerFooterLink","info","main","LegendSymbolBar","classes","active","style","backgroundImage","join","className","SetCountriesSymb","dispatch","Link","href","onClick","event","preventDefault","type","payload","prettyPrint","value","undefined","toLocaleString","navigator","language","minimumFractionDigits","isValidUserAgent","USER_AGENT","userAgent","indexOf","root","textAlign","paper","backgroundColor","common","white","flexDirection","overflow","padding","spacing","position","breakpoints","up","marginBottom","tickerVal","black","tickerCardsWrap","zIndex","down","bottom","gridColumnGap","gridRowGap","gridTemplateColumns","right","top","CardTitle","renderLegendSymbol","Typography","component","variant","NotifierCard","props","number","renderTitle","renderPopover","renderSymbolBar","Grid","item","Paper","CircularProgress","minHeight","TickerCards","data","config","Object","keys","map","key","length","footerLinkClassName","visibilityKey","prettyDate","date","timezoneDate","Date","getTime","getTimezoneOffset","toLocaleDateString","toLocaleTimeString","popover","definitionText","whiteSpace","infoBtn","viewInfoLink","TickerInfoPopover","React","useState","anchorEl","setAnchorEl","useQuery","getCountryGeoJSONData","staleTime","lastUpdated","status","properties","handleClose","IconButton","aria-controls","aria-haspopup","currentTarget","Popover","id","open","Boolean","onClose","anchorOrigin","vertical","horizontal","subheader","ListSubheader","ListItem","divider","RouteLink","to","ToggleLayer","layerVisibility","indivMarkerDiameter","createClusterCustomIcon","cluster","diameter","getChildCount","L","divIcon","iconSize","point","indivMarkerIcon","setSymbology","srcFeats","features","legend","precision","field","arrValsForSymb","filter","serie","GeoStats","min","Math","max","setClassManually","setPrecision","setColors","feature","gray","valueToUse","classValue","getClass","chroma","require","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","theMapItself","left","Map","submittedFeats","styles","useTheme","smallToMid","useMediaQuery","midsizeAndUp","huge","polySymb","center","lat","lng","zoom","zoomControl","tilesetId","countries","FeatureGroup","ZoomControl","MapboxTileLayer","url","TileLayer","attribution","tileSize","zoomOffset","PolygonTooltip","Tooltip","opacity","country_name","margin","paddingLeft","listStyleType","new_confirmed","new_deaths","new_recovered","NAME_LONG","Polygons","i","geometry","levelsDeep","positions","NonReactGeoJSON","coordsToLatLngs","coordinates","fill","fillOpacity","stroke","weight","Polygon","SubmittedCases","getSubmittedCases","submittedData","submissions","showCoverageOnHover","iconCreateFunction","disableClusteringAtZoom","spiderfyOnMaxZoom","maxClusterRadius","selfReportedItem","Marker","icon","Popup","maxWidth","address","Home","initial","totalConfirmed","totalDeaths","totalRecovered","useSubmitted","useCountryTotals","countryTotals","countryTotalsStatus","useAuthState","auth","user","loading","reduce","sums","thisOne","useEffect","hasSeenSplash","mainAboutPages","htmlPages","About","text","page","filename","TermsOfService","PrivacyPolicy","Models","signUp","email","password","captcha","a","app","createUserWithEmailAndPassword","logOut","history","userDispatch","globalDispatch","signOut","push","message","severity","login","signInWithEmailAndPassword","googleLogin","googleAuthProvider","GoogleAuthProvider","signInWithPopup","facebookLogin","facebookAuthProvider","FacebookAuthProvider","initialUserState","symptoms","fever","isPresent","startDate","endDate","headache","shortnessOfBreath","reducedSmell","reducedTaste","runnyNose","wheezing","chestPain","bodyAche","lightHeadedness","confusion","fatigue","soreThroat","nausea","dryCough","wetCough","diarrhea","abdominalPain","location","birthMonth","birthYear","city","county","country","phoneNumber","tested","numTimesTested","testedPositive","seenPhysician","doctorDiagnosis","hasAgreedToTerms","reducer","action","newForm","symptom","UserContext","createContext","UserProvider","children","useReducer","dispatchGlobal","authFlag","setAuthFlag","callback","loggedIn","getIdToken","then","token","getUserData","resp","body","catch","onAuthStateChanged","Provider","initialState","uiAlert","showSplash","loginSignupModal","localStorage","getItem","lastCountriesUpdate","setItem","GlobalProvider","bootstrapApp","tinyText","AcctReqExplain","aria-label","transformOrigin","target","rel","AgreeToTerms","dispatchForm","showTermsModal","setShowTermsModal","FormControlLabel","control","Checkbox","name","data-cy","checked","onChange","label","e","title","EmailSignupFields","handleSignupError","handleSignupSuccess","captchaVerified","setCaptchaVerified","submitting","setSubmitting","formReducer","emailSignupFormInitialState","formState","setFormValue","handleChange","handleEmailSignup","password2","code","window","recaptchaVerifier","RecaptchaVerifier","response","clear","render","err","container","justify","xs","sm","TextField","error","emailError","helperText","fullWidth","required","InputProps","startAdornment","InputAdornment","AccountCircle","passwordError","Https","passwordError2","Button","disabled","startIcon","Email","SignInLink","SignupForm","isLegitBrowser","registrationFormDispatch","symptomsFormState","symptomsFormDispatch","duration","handleGoogleLogin","handleFacebookLogin","GoogleIcon","xmlns","viewBox","d","SignupLoginBtn","textOverride","btnText","cypressDataAttrib","Facebook","LoginForm","showForgotPasswd","setShowForgotPasswd","setEmail","emailErrorMessage","setEmailErrorMessage","setPassword","passwordErrorMessage","setPasswordErrorMessage","handleLoginError","handleLoginSuccess","handleEmailLogin","LoginSignup","modalView","List","ErrorTriggerBtns","handleBSurlClick","triggerBadRequest","handleBadHelpClick","fetchGithubHtml","SecretSnackground","Container","superagent","postFormData","formData","authorization","post","set","send","get","getGeoJSONCountries","getCountryData","geoJSON","countryData","JSON","parse","propertiesHash","forEach","geoJSONCountries","locations","prefetchAboutData","queryCache","prefetchQuery","Infinity","onError","paddingTop","paddingBottom","cursor","AboutFooter","AboutSection","useAbout","dangerouslySetInnerHTML","__html","AboutContainer","Breadcrumb","ScrollTop","trigger","useScrollTrigger","Zoom","in","anchor","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","BackToTopBtn","Fab","CountryTable","columns","options","sortDirection","selectableRows","Burger","toggleDrawerOpen","drawerOpen","edge","burger","LoginSignupBtnDesktop","signupLoginMobile","htmlColor","LoginSignupBtnMobile","appBarBtns","signupLoginBtn","snugBtnMobile","LoginSignupBtn","MySymptomsBtn","TitleWrap","noWrap","subTitle","TopBarBtns","UserPopoverMenu","TopBar","isHome","grey","boxShadow","paddingRight","drawer","toolbar","textDecoration","textShadow","titleAndBadge","flexWrap","flex","marginLeft","primary","minWidth","badge","topBarStyles","Slide","appear","direction","AppBar","Toolbar","disableGutters","noBgChangeOnHover","exitIcon","avatar","useHistory","keepMounted","disableAutoFocusItem","MenuItem","ListItemText","gutterBottom","borderStyle","toolbarIcon","mixins","appBarSpacer","content","values","md","fixedHeight","Dashboard","useLocation","pathname","MobileOffCanvasNav","Drawer","onKeyDown","summary","ShareButtonConfig","FacebookShareButton","quote","FacebookIcon","round","TwitterShareButton","TwitterIcon","WhatsappShareButton","WhatsappIcon","LinkedinShareButton","source","LinkedinIcon","PinterestShareButton","media","PinterestIcon","RedditShareButton","RedditIcon","EmailShareButton","subject","EmailIcon","ShareButtons","wrap","shareBtn","shareBtnMobile","SharingPopoutMenu","handleClick","aria-describedby","actionBtn","dialogContent","SimpleModal","leftSideElems","fullScreen","setOpen","Dialog","aria-labelledby","DialogTitle","DialogContent","dividers","DialogActions","shadow","list","listItem","navItemLink","WebkitFilter","SiteNavBtns","button","RouterLink","Alert","elevation","Symptoms","CustomSnackbar","handleCloseInternal","reason","Snackbar","autoHideDuration","dialogTitle","closeButton","symptomsBtn","exitToMapBtn","Title","other","disableTypography","SplashScreen","align","Disclaimer","Transition","forwardRef","ref","success","dialog","SuccessConfModal","smallAndUp","transitionDuration","enter","exit","TransitionComponent","Divider","browserMessage","VerifyEmailForm","afterVerification","setEmailError","sent","setSent","setLoading","handleFirebaseError","alert","handleVerifyEmail","sendPasswordResetEmail","setTimeout","textTransform","Fade","AlertTitle","camelCaseToLabel","original","result","replace","charAt","toUpperCase","slice","checkbox","firstPageBtnsWrap","datePicker","link","SymptomStep","setActiveStep","allSymptoms","halfwayThrough","floor","firstHalfSymptoms","splice","lastHalfSymptoms","showDates","setShowDates","getSymptoms","utils","DateFnsUtils","disableToolbar","format","maxDate","handleStartDateChange","KeyboardButtonProps","minDate","handleEndDateChange","idx","FormGroup","dropdown","selector","formLabel","TestingStep","FormControl","DatePicker","views","month","year","setFullYear","setMonth","getBirthMonthYear","getMonth","getFullYear","FormLabel","RadioGroup","row","String","Radio","InputLabel","Select","labelId","dialogText","LocationDetailsStep","onSelect","newAddress","geocodeByAddress","results","addressComponents","address_components","types","long_name","includes","getLatLng","latLng","searchOptions","debounce","shouldFetchSuggestions","getInputProps","suggestions","getSuggestionItemProps","placeholder","suggestion","description","RegistrationStep","fontWeight","stepper","Modal","setSuccessConfOpen","activeStep","dispatchSymptomsForm","signupFormState","signupFormDispatch","steps","submitSymptomsForm","firebaseUser","idToken","handleSubmit","currentUser","Stepper","labelProps","Step","StepLabel","step","displayStep","prevActiveStep","isNextDisabled","covidTheme","createMuiTheme","typography","fontFamily","dialogContentPadding","dialogHeadFootSpacing","overrides","MuiInput","MuiDialog","paperScrollPaper","maxHeight","paperFullWidth","MuiDialogTitle","MuiDialogActions","MuiDialogContent","GlobalCss","withStyles","responsiveFontSizes","Routes","successConfOpen","ThemeProvider","CssBaseline","basename","path","exact","ReactDOM","StrictMode","getElementById"],"mappings":"q/1yDAIaA,EAAcC,sC,0BCFdC,EAAiB,CAC5BC,OAAQF,0CACRG,WAAYH,8BACZI,YAAaJ,qCACbK,UAAWL,cACXM,cAAeN,87BAAYO,mCAC3BC,kBAAmBR,eACnBS,MAAOT,4CACPU,cAAeV,gBAGjBW,gBAAuBV,GACRU,QCbFC,EACE,qBADFA,EAEA,qBAFAA,EAGE,EAHFA,EAKL,GAIKC,EAAqB,CAChCC,gBAAiB,CACfC,QAAS,CACP,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEFC,OAAQ,CAAC,IAAK,IAAK,KAAM,MAAO,MAAO,SAEzCC,aAAc,CACZF,QAAS,CACP,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEFC,OAAQ,CAAC,IAAK,KAAM,KAAM,IAAM,IAAO,MAEzCE,gBAAiB,CACfH,QAAS,CACP,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEFC,OAAQ,CAAC,OAAQ,MAAO,KAAM,IAAM,IAAO,OAKlCG,EAAgB,CAC3BC,aAAc,CACZC,QAAS,kEACTC,QAAS,gBACTC,iBAAiB,EACjBC,OAAQ,CACNC,YAAY,EACZC,YAAad,EACbe,YAAaf,EACbgB,UAAWhB,EACXiB,YAAY,EACZC,WAAY,KAGhBC,UAAW,CACTV,QACE,iHACFC,QAAS,YACTE,OAAQ,CACNQ,eAAgB,kBAChBJ,UAAW,UACXE,WAAYjB,EAAmBK,gBAAgBH,UAGnDkB,UAAW,CACTZ,QACE,+EACFC,QAAS,YACTE,OAAQ,CACNQ,eAAgB,kBAChBJ,UAAW,UACXE,WAAYjB,EAAmBC,gBAAgBC,UAGnDmB,OAAQ,CACNb,QACE,uJACFC,QAAS,SACTE,OAAQ,CACNQ,eAAgB,eAChBJ,UAAW,UACXE,WAAYjB,EAAmBI,aAAaF,WCxFrCoB,EAAsC,SAAC,GAQ7C,IAPLP,EAOI,EAPJA,UAOI,IANJD,mBAMI,MANU,kBAMV,MALJE,kBAKI,aAJJO,YAII,MAJG,QAIH,MAHJV,mBAGI,MAHU,EAGV,EAFJD,EAEI,EAFJA,WACAO,EACI,EADJA,eAEQK,EAAUC,qBAAWC,IAArBF,MAER,OACE,kBAACG,EAAA,EAAD,CACEC,MAAOL,EACPM,OAAQN,EACRO,QACElB,GAAcY,EAAMO,uBAAyBZ,EACzC,OACA,OAENa,YAAY,MACZC,WAAW,UAEX,kBAACN,EAAA,EAAD,CACEO,OAAQrB,EACRsB,aAAcnB,EAAa,OAAS,EACpCa,OAAO,OACPD,MAAM,OACNQ,QAASrB,EACTD,YAAaA,MC3BfuB,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,UAAW,CACTC,SAAU,GACVX,QAAS,OACTY,eAAgB,gBAChBC,MAAOJ,EAAMrC,QAAQ0C,WAAWC,QAChC,QAAS,CACPC,WAAY,EACZC,UAAW,IAGfC,iBAAkB,CAChBP,SAAU,GACVE,MAAOJ,EAAMrC,QAAQ+C,KAAKC,KAC1BpB,QAAS,aAIAqB,EAA4C,SAAC,GAGnD,IAFLlC,EAEI,EAFJA,WACAE,EACI,EADJA,eAEMiC,EAAUf,IAEVgB,EADY5B,qBAAWC,IAArBF,MACaO,uBAAyBZ,EAE9C,OACE,oCACGkC,EACC,oCACE,kBAAC1B,EAAA,EAAD,CAAKG,QAAQ,OAAOY,eAAe,UACjC,kBAACf,EAAA,EAAD,CACEC,MAAM,OACNC,OAAQ,EACRM,aAAc,EACdmB,MAAO,CACLC,gBAAgB,6BAAD,OAA+BtC,EAAWuC,KACvD,MADa,SAMrB,kBAAC7B,EAAA,EAAD,CAAK8B,UAAWL,EAAQZ,WACtB,qCACA,wCAIJ,kBAAC,EAAD,CACEiB,UAAWL,EAAQJ,iBACnB7B,eAAgBA,MCpDbuC,EAA8C,SAAC,GAGrD,IAFLD,EAEI,EAFJA,UACAtC,EACI,EADJA,eAEQwC,EAAalC,qBAAWC,IAAxBiC,SAOR,OACE,kBAACC,EAAA,EAAD,CAAMC,KAAK,IAAIJ,UAAWA,EAAWK,QANnB,SAACC,GACnBA,EAAMC,iBACNL,EAAS,CAAEM,KAAM,wBAAyBC,QAAS/C,MAInD,S,kCChBSgD,EAAc,SAACC,GAC1B,YAAcC,IAAVD,EACK,MAGFA,EAAME,eAAeC,UAAUC,SAAU,CAC9CC,sBAAuB,KAkBdC,EAAmB,WAC9B,IAAMC,EAAaJ,UAAUK,UAE7B,OACoC,IAAlCD,EAAWE,QAAQ,YACc,IAAjCF,EAAWE,QAAQ,WACgB,IAAnCF,EAAWE,QAAQ,aACc,IAAjCF,EAAWE,QAAQ,WACe,IAAlCF,EAAWE,QAAQ,YACa,IAAhCF,EAAWE,QAAQ,UACgB,IAAnCF,EAAWE,QAAQ,YClBjBxC,EAAYC,aAAW,SAAAC,GAAK,YAAK,CACrCuC,KAAM,CACJC,UAAW,UAEbC,MAAM,aACJC,gBAAiB1C,EAAMrC,QAAQgF,OAAOC,MACtCrD,QAAS,OACTsD,cAAe,SACfC,SAAU,OACVxD,OAAQ,OACRa,eAAgB,SAEhB4C,QAAQ,GAAD,OAAK/C,EAAMgD,QAAQ,GAAnB,cAA2BhD,EAAMgD,QAAQ,GAAzC,UACPC,SAAU,YACTjD,EAAMkD,YAAYC,GAAG,MAAQ,CAC5BC,aAAcpD,EAAMgD,QAAQ,GAC5B3D,MAAO,MAGXnB,QAAS,CACPqC,WAAY,EACZL,SAAU,OACVX,QAAS,OACTY,eAAgB,UAElBkD,UAAU,aACRjD,MAAOJ,EAAMrC,QAAQgF,OAAOW,MAC5BpD,SAAU,SACVkD,aAAc,QACbpD,EAAMkD,YAAYC,GAAG,MAAQ,CAC5BjD,SAAU,WAGdqD,iBAAe,GACbN,SAAU,WACVO,OAAQ,KAFK,cAGZxD,EAAMkD,YAAYO,KAAK,MAAQ,CAC9BC,OAAQ,GACRnE,QAAS,OACToE,cAAe,EACfC,WAAY,EACZC,oBAAqB,iBACrBC,MAAO,EACPzE,MAAO,MAVI,cAYZW,EAAMkD,YAAYC,GAAG,MAAQ,CAC5BW,MAAO9D,EAAMgD,QAAQ,GACrBe,IAAK,MAdM,GAiBftD,iBAAkB,CAChBP,SAAU,SACVE,MAAOJ,EAAMrC,QAAQ+C,KAAKC,KAC1BpB,QAAS,aAIPyE,EAAkC,SAAC,GAAqC,IAAnC9F,EAAkC,EAAlCA,QAAS+F,EAAyB,EAAzBA,mBAC5CpD,EAAUf,IAEhB,OACE,kBAACoE,EAAA,EAAD,CACEC,UAAU,KACVC,QAAQ,YACRhE,MAAM,UACNc,UAAWL,EAAQ3C,SAElB+F,IACA/F,IAKDmG,EAA+B,SAAAC,GACnC,IAAMzD,EAAUf,IACRyE,EAAwDD,EAAxDC,OAAQC,EAAgDF,EAAhDE,YAAaC,EAAmCH,EAAnCG,cAAeC,EAAoBJ,EAApBI,gBAE5C,OACE,kBAACC,EAAA,EAAD,CAAMC,MAAI,EAAC1D,UAAWL,EAAQ0B,MAC5B,kBAACsC,EAAA,EAAD,CAAO3D,UAAWL,EAAQ4B,OACvB+B,IACD,kBAACN,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAKlD,UAAWL,EAAQwC,WACxDkB,EAAS3C,EAAY2C,GAAU,kBAACO,EAAA,EAAD,CAAkB9F,KAAM,MAE1D,yBAAK+B,MAAO,CAAEgE,UAAW,KAAOL,KAC/BD,OAMIO,EAAmC,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACjDrE,EAAUf,IAEhB,OACE,yBAAKoB,UAAWL,EAAQ0C,iBAErB4B,OAAOC,KAAKF,GAAQG,KAAI,SAACC,GAAiB,IAAD,EACcJ,EACpDI,GADMpH,EADgC,EAChCA,QAASD,EADuB,EACvBA,QAASG,EADc,EACdA,OAAQD,EADM,EACNA,gBAIlC,OACE,kBAAC,EAAD,CACEmH,IAAKA,EACLpH,QAASA,EACTqG,OAAQU,EAAKK,GACbd,YAAa,kBACX,kBAAC,EAAD,CACEtG,QAASA,EACT+F,mBAAoB,kBAAM,kBAAC,EAAiB7F,OAGhDqG,cAAe,kBACb,kBAAC,GAAD,CACEvG,QAASA,EACTD,QAASA,EACTE,gBAAiBA,KAGrBuG,gBAAiB,kBACftG,EAAOM,WAAW6G,QAAUnH,EAAOQ,eACjC,kBAAC,EAAD,CACE4G,oBAAqB3E,EAAQJ,iBAC7B7B,eAAgBR,EAAOQ,eACvBF,WAAYN,EAAOM,aAGrB,kBAAC,GAAD,CACE+G,cAAeH,EACfpE,UAAWL,EAAQJ,2B,gECpJxBiF,GAAa,SAACC,GACzB,IAAMC,EAAe,IAAIC,KACvBF,EAAKG,UAAuC,IAA3BH,EAAKI,qBAExB,MAAM,GAAN,OAAUH,EAAaI,qBAAvB,YAA+CJ,EAAaK,uBCcxDnG,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCkG,QAAS,CACP7G,MAAO,KAET8G,eAAgB,CACdC,WAAY,YAEdC,QAAS,CACPtD,QAAS,EACTE,SAAU,WACVc,IAAK,EACLD,MAAO,EACP5D,SAAU,QAEZoG,aAAc,CACZlG,MAAOJ,EAAMrC,QAAQ+C,KAAKC,KAC1B,aAAc,CACZP,MAAOJ,EAAMrC,QAAQ+C,KAAKC,WAQnB4F,GAAwC,SAAC,GAI/C,IAHLtI,EAGI,EAHJA,QACAC,EAEI,EAFJA,QACAC,EACI,EADJA,gBACI,EAC4BqI,IAAMC,SAA6B,MAD/D,mBACGC,EADH,KACaC,EADb,KAEE9F,EAAUf,KAFZ,EAGqB8G,YAAS,gBAAiBC,GAAuB,CACxEC,UAAW,MADL7B,EAHJ,EAGIA,KAIF8B,EACO,YART,EAGUC,QAMZ/B,GACAA,EAAK,GAAGgC,YACR,SAAUhC,EAAK,GAAGgC,WACd,IAAIpB,KAAKZ,EAAK,GAAGgC,WAAR,WACTnF,EAMAoF,EAAc,WAClBP,EAAY,OAGd,OACE,oCACE,kBAACQ,EAAA,EAAD,CACEC,gBAAc,mBACdC,gBAAc,OACd9F,QAbc,SAACC,GACnBmF,EAAYnF,EAAM8F,gBAadtI,KAAK,QACLkC,UAAWL,EAAQwF,SAEnB,kBAAC,KAAD,CAAUjG,MAAM,UAAUF,SAAS,aAErC,kBAACqH,EAAA,EAAD,CACEC,GAAG,mBACHC,KAAMC,QAAQhB,GACdiB,QAAST,EACTR,SAAUA,EACVkB,aAAc,CAAEC,SAAU,SAAUC,WAAY,SAChDjH,QAAS,CAAE4B,MAAO5B,EAAQqF,UAE1B,kBAAC,IAAD,CACE6B,UAAW,kBAACC,EAAA,EAAD,KAAgB9J,GAC3BiG,UAAU,KACVjD,UAAWL,EAAQqF,SAEnB,kBAAC+B,EAAA,EAAD,CAAU/G,UAAWL,EAAQsF,gBAAiBlI,GAC9C,kBAACgK,EAAA,EAAD,CAAUC,SAAO,IACb/J,GACA,kBAAC+F,EAAA,EAAD,CAAYE,QAAQ,UAAUhE,MAAM,iBAApC,iBACiB2G,EAAcrB,GAAWqB,GAAe,QAI7D,kBAACkB,EAAA,EAAD,CACE9D,UAAWgE,IACXC,GAAG,SACH7G,QAAS2F,EACThG,UAAWL,EAAQyF,cAJrB,iBChGG+B,GAAoC,SAAC,GAG3C,IAFLnH,EAEI,EAFJA,UACAuE,EACI,EADJA,cACI,EACwBvG,qBAAWC,IAA/BF,EADJ,EACIA,MAAOmC,EADX,EACWA,SAOf,OACE,kBAACC,EAAA,EAAD,CAAMC,KAAK,IAAIJ,UAAWA,EAAWK,QANnB,SAACC,GACnBA,EAAMC,iBACNL,EAAS,CAAEM,KAAM,0BAA2BC,QAAS8D,MAKlDxG,EAAMqJ,gBAAgB7C,GAAiB,OAAS,S,kICZjD8C,GAAsB/K,EAiBfgL,GAA0B,SACrCC,GAEA,IACIC,EAAwB,EADTD,EAAQE,gBAU3B,OANID,EAAW,GACbA,EAAW,GACFA,EAAWH,KACpBG,EAAWH,IAGNK,KAAEC,QAAQ,CACf3H,UAAW,uBACX4H,SAAUF,KAAEG,MAAML,EAAUA,GAAU,MAK7BM,GAAkBJ,KAAEC,QAAQ,CACvC3H,UAAW,uBACX4H,SAAUF,KAAEG,MAAMR,GAAqBA,IAAqB,KAGjDU,GAAe,SAC1BC,EACAhE,GAGA,IAAKgE,EAAS3D,OACZ,MAAO,CACL4D,SAAU,GACVC,OAAQ,IALT,MAU+ClE,EAA1CmE,iBAVL,MAUiB,EAVjB,EAUoBC,EAA2BpE,EAA3BoE,MAAO3L,EAAoBuH,EAApBvH,QAASC,EAAWsH,EAAXtH,OACjC2L,EAAiBL,EACpBM,QACC,wBAA6D1H,IAA7D,EAAGmF,WAA+CqC,MAEnDjE,KAAI,qBAAG4B,WAA+CqC,MAEnDG,EAAQ,IAAIC,KAASH,GACrBI,EAAMC,KAAKD,IAAL,MAAAC,KAAI,aAAQL,IAClBM,EAAMD,KAAKC,IAAL,MAAAD,KAAI,aAAQL,IA0CxB,OAxCAE,EAAMK,iBAAN,CAAwBH,GAAxB,oBAAgC/L,GAAhC,CAAwCiM,KACxCJ,EAAMM,aAAaV,GACnBI,EAAMO,UAAUrM,GAsCT,CAAEwL,SA1BQD,EAAS7D,KAAI,SAAC4E,GAE7B,IAAMC,EAAO,kBACT9J,EAAQ8J,EACR1L,EAAmC0L,EAC/BjD,EAAegD,EAAfhD,WACJkD,EAAalD,EAAWqC,GAE5B,QAAmBxH,IAAfqI,EAA0B,CAC5B,IAAMC,EAAaX,EAAMY,SAASF,GAClC/J,EAAQzC,EAAQyM,GAChB5L,EAAY8L,KAAOlK,GAGrB,OAAO,eACF6J,EADL,CAEEhD,WAAW,eACNA,EADK,CAERlG,MAAO,CACLX,MAAO,oBACP5B,sBC9FV+L,EAAQ,YAGD3B,KAAE4B,KAAKC,QAAQC,UAAUC,YAEhC/B,KAAE4B,KAAKC,QAAQG,aAAa,CAC1BC,cAAeN,EAAQ,KACvBO,QAASP,EAAQ,KACjBQ,UAAWR,EAAQ,OAGrB,IAAMzK,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCgL,aAAc,CACZ3L,MAAO,OACPC,OAAQ,OACR2D,SAAU,QACVc,IAAK,EACLL,OAAQ,EACRuH,KAAM,EACNnH,MAAO,EACP,qBAAsB,CACpBf,QAAS,aAGX,0BAA0B,eACvB/C,EAAMkD,YAAYO,KAAK,MAAQ,CAC9BlE,QAAS,cAMJ2L,GAAoB,SAAC,GAA8B,IAA5BjG,EAA2B,EAA3BA,KAAMkG,EAAqB,EAArBA,eAChClM,EAAUC,qBAAWC,IAArBF,MACFO,EACJP,EAAMO,qBACF4L,EAAStL,KACTE,EAAQqL,eACRC,EAAaC,aAAcvL,EAAMkD,YAAYC,GAAG,OAChDqI,EAAeD,aAAcvL,EAAMkD,YAAYC,GAAG,OAClDsI,EAAOF,aAAcvL,EAAMkD,YAAYC,GAAG,OAG1CuI,EAAWjO,EAAmB+B,GAEhCmM,EAAS,CAAEC,IAAK,EAAGC,KAAM,IACzBC,EAAO,EAiBX,OAfIR,IACFK,EAAS,CAAEC,IAAK,EAAGC,KAAM,IACzBC,EAAO,GAGLN,IACFG,EAAS,CAAEC,IAAK,GAAIC,IAAK,IACzBC,EAAO,GAGLL,IACFE,EAAS,CAAEC,IAAK,GAAIC,IAAK,GACzBC,EAAO,GAIP,kBAAC,KAAD,CACEH,OAAQA,EACRG,KAAMA,EACN5K,UAAWkK,EAAOJ,aAClBe,aAAa,GAEb,kBAAC,GAAD,CAAiBC,UAAU,YAC1B/M,EAAMqJ,gBAAgB2D,WACrB,kBAACC,GAAA,EAAD,KACE,kBAAC,GAAD,CAEE/C,SACEF,GAAahE,EAAD,eAAYyG,EAAZ,CAAsBpC,MAAO9J,KACtC2J,YAKVlK,EAAMqJ,gBAAgBtK,cACrB,kBAACkO,GAAA,EAAD,KACE,kBAAC,GAAD,CAAgBjH,KAAMkG,KAG1B,kBAACgB,GAAA,EAAD,CAAalJ,SAAS,kB,UC9FfmJ,GAAkC,SAAC,GAAmB,IAAjBJ,EAAgB,EAAhBA,UAG1CK,EAAG,UAFO,0CAEP,YAAiBL,EAAjB,2CbTiBpP,6FaY1B,OAAO,kBAAC0P,GAAA,EAAc,CAAED,MAAKE,YAJZ,sGAIyBC,SAAU,IAAKC,YAAa,K,oBCN3DC,GAAiC,SAAApI,GAAK,OACjD,kBAACqI,GAAA,EAAD,CAASC,QAAS,GACftI,EAAMuI,aACL,yBAAK9L,MAAO,CAAE1B,MAAO,MACnB,wBAAI0B,MAAO,CAAEqF,WAAY,WAAY0G,OAAQ,IAC1CxI,EAAMuI,cAET,yBACE9L,MAAO,CACLxB,QAAS,OACTsE,oBAAqB,UACrBF,cAAe,KAGjB,6BACE,wBAAI5C,MAAO,CAAEqC,aAAc,IAA3B,UACA,wBAAIrC,MAAO,CAAEgM,YAAa,EAAGD,OAAQ,EAAGE,cAAe,SACrD,4BACE,yCADF,IACqBpL,EAAY0C,EAAM5G,kBAEvC,4BACE,sCADF,IACkBkE,EAAY0C,EAAMzG,eAEpC,4BACE,yCADF,IACqB+D,EAAY0C,EAAMxG,oBAI3C,6BACE,wBAAIiD,MAAO,CAAEqC,aAAc,IAA3B,eACA,wBAAIrC,MAAO,CAAEgM,YAAa,EAAGD,OAAQ,EAAGE,cAAe,SACrD,4BACE,yCADF,IACqBpL,EAAY0C,EAAM2I,gBAEvC,4BACE,oCADF,IACgBrL,EAAY0C,EAAM4I,aAElC,4BACE,yCADF,IACqBtL,EAAY0C,EAAM6I,oBAO/C,oCACE,4BAAK7I,EAAM8I,WACX,mDCxBKC,GAA8B,SAAC,GAAD,IAAGlE,EAAH,EAAGA,SAAH,OACzC,oCACGA,EAAS9D,KAAI,WAA2CiI,GAAe,IAAvDC,EAAsD,EAAtDA,SAAUtG,EAA4C,EAA5CA,WAGnBuG,EAA+B,YAAlBD,EAAS7L,KAAqB,EAAI,EAC/C+L,EAAYC,WAAgBC,gBAChCJ,EAASK,YACTJ,GANmE,EAgBjEvG,EAAWlG,OAAS,GAPtBX,EATmE,EASnEA,MACA5B,EAVmE,EAUnEA,UAVmE,IAWnEqP,YAXmE,aAYnEC,mBAZmE,MAYrD,IAZqD,MAanElB,eAbmE,MAazD,EAbyD,MAcnEmB,cAdmE,aAenEC,cAfmE,MAe1D,EAf0D,EAkBrE,OACE,kBAACC,GAAA,EAAD,eACE3I,IAAKgI,EACLG,UAAWA,GACP,CACFrN,QACAyN,OACArP,YACAsP,cACAlB,UACAmB,SACAC,WAGF,kBAAC,GAAmB/G,S,yCCrDjBiH,GAAoC,SAAC,GAAa,EAAXjJ,KAAY,IAAD,EACrB2B,YACtC,YACAuH,GACA,CAAErH,UAAW,MAHPE,EADqD,EACrDA,OAAcoH,EADuC,EAC7CnJ,KAMhB,GAAe,YAAX+B,EACF,OAAO,qCAGT,IAAMqH,EAAcD,GAAgC,GAEpD,OACE,kBAAC,KAAD,CACEE,qBAAqB,EACrBC,mBAAoB/F,GACpBgG,wBAAyB,GACzBC,mBAAiB,EACjBC,iBAAkB,GAEjBL,EAAYhJ,KAAI,SAACsJ,EAAoCrB,GAArC,OACf,kBAACsB,GAAA,EAAD,CACEtJ,IAAKgI,EACLrK,SAAU,CAAC0L,EAAiB/C,IAAK+C,EAAiB9C,KAClDgD,KAAM7F,IAEN,kBAAC8F,GAAA,EAAD,CAAOC,SAAU,KACf,4BAAKJ,EAAiBK,SACtB,2BACE,+BACE,oDACyB,IACtBL,EAAiBhJ,KAAjB,oBACgBD,GAAW,IAAIG,KAAK8I,EAAiBhJ,QAClD,aChCTsJ,GAAW,WAAO,IX8B7BC,EW9B4B,EACAhQ,qBAAWC,IAA/BF,EADoB,EACpBA,MAAOmC,EADa,EACbA,SAEV+N,EAAgD,EAAhCC,EAAmC,EAAtBC,EAAyB,EAE7ChB,EAAgBiB,GAAalO,GAAnC6D,KALoB,EAMiCsK,GAC3DnO,GADYoO,EANc,EAMpBvK,KAA6BwK,EANT,EAMCzI,OAND,EAUJ0I,YAAanS,EAASoS,QAVlB,mBAUrBC,EAVqB,KAUfC,EAVe,KAY5B,GAA4B,YAAxBJ,GAAqCD,EAAe,CAAC,IAAD,GXkBxDN,EWbqC,CACjCxR,gBAAiB,EACjBG,aAAc,EACdC,gBAAiB,GAHC0R,EXmBVM,QAAO,SAACC,EAAMC,GAAkB,IAClC/I,EAAe+I,EAAf/I,WACAvJ,EAAmDuJ,EAAnDvJ,gBAAiBG,EAAkCoJ,EAAlCpJ,aAAcC,EAAoBmJ,EAApBnJ,gBAEvC,MAAO,CACLJ,gBAAiBqS,EAAKrS,iBAAmBA,GAAmB,GAC5DG,aAAckS,EAAKlS,cAAgBA,GAAgB,GACnDC,gBAAiBiS,EAAKjS,iBAAmBA,GAAmB,MAE7DoR,IW/BkBC,EAFmC,EAEpDzR,gBACc0R,EAHsC,EAGpDvR,aACiBwR,EAJmC,EAIpDvR,gBAmBJ,OAVAmS,qBAAU,WACHJ,GAAY5Q,EAAMiR,eAInB9O,EAHGwO,EAGM,CAAElO,KAAM,cAAeC,SAAS,GAFhC,CAAED,KAAM,cAAeC,SAAS,MAK5C,CAACkO,EAASD,EAAMxO,EAAUnC,EAAMiR,gBAGjC,oCACE,kBAAC,GAAD,MACA,kBAAC9Q,EAAA,EAAD,CAAK6D,SAAS,WAAWS,OAAQ,GAAIuH,KAAM,EAAGzH,OAAQ,GACpD,kBAAC,GAAD,OAEF,kBAACpE,EAAA,EAAD,CAAK6D,SAAS,WAAWS,OAAQ,EAAGuH,KAAM,EAAGzH,OAAQ,GACnD,kBAACnC,EAAA,EAAD,CAAMC,KAAK,qBAAqBlB,MAAM,iBAAtC,qBAIF,kBAAC,GAAD,CAAK6E,KAAMuK,GAAiB,GAAIrE,eAAgBkD,IAChD,kBAAC,EAAD,CACEnJ,OAAQnH,EACRkH,KAAM,CACJpG,UAAWsQ,EACXrQ,OAAQsQ,EACRzQ,UAAW0Q,EACXrR,aAAcqQ,GAAeA,EAAY9I,YCzD7C4K,GAAiB,CACrB,yBACA,aACA,sBACA,wBACA,oBACA,qBAKWC,GAAS,UACjBD,GADiB,CAHK,wBACD,wBASbE,GAAY,kBACvB,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAYjI,GAAG,IAAIkI,KAAK,WACvBH,GAAe9K,KAAI,SAAAkL,GAAI,OACtB,kBAAC,GAAD,CAAcC,SAAUD,OAE1B,kBAAC,GAAD,QAISE,GAAqB,kBAChC,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAYrI,GAAG,IAAIkI,KAAK,SACxB,kBAAC,GAAD,CAAYlI,GAAG,SAASkI,KAAK,UAC7B,kBAAC,GAAD,CAAcE,SAxBS,4BA4BdE,GAAoB,kBAC/B,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAYtI,GAAG,IAAIkI,KAAK,SACxB,kBAAC,GAAD,CAAYlI,GAAG,SAASkI,KAAK,UAC7B,kBAAC,GAAD,CAAcE,SA/BQ,0BCfbG,GAAa,WACxB,OACE,6BACE,kBAACzM,EAAA,EAAD,CAAYE,QAAQ,MAApB,qBACA,+C,gFCHOwM,GAAM,uCAAG,WACpBC,EACAC,EACAC,GAHoB,SAAAC,EAAA,sEAMdzT,KACH0T,MACAtB,OACAuB,+BAA+BL,EAAOC,GATrB,2CAAH,0DAYNK,GAAM,uCAAG,WACpBC,EACAC,EACAC,GAHoB,SAAAN,EAAA,sEAKdzT,KACH0T,MACAtB,OACA4B,UARiB,OAUpBF,EAAa,CAAE3P,KAAM,oBAGrB0P,EAAQI,KAAK,KAGbF,EAAe,CACb5P,KAAM,kBACNC,QAAS,CACP8F,MAAM,EACNgK,QAAS,yBACTC,SAAU,aArBM,2CAAH,0DA0BNC,GAAK,uCAAG,WAAOd,EAAeC,GAAtB,SAAAE,EAAA,sEACbzT,KACH0T,MACAtB,OACAiC,2BAA2Bf,EAAOC,GAJlB,2CAAH,wDAOLe,GAAW,uCAAG,4BAAAb,EAAA,6DACnBc,EAAqB,IAAIvU,KAASoS,KAAKoC,mBADpB,SAEnBxU,KAASoS,OAAOqC,gBAAgBF,GAFb,2CAAH,qDAKXG,GAAa,uCAAG,4BAAAjB,EAAA,6DACrBkB,EAAuB,IAAI3U,KAASoS,KAAKwC,qBADpB,SAErB5U,KAASoS,OAAOqC,gBAAgBE,GAFX,2CAAH,qDCrCbE,GAAgC,CAC3CC,SAAU,CACRC,MAAO,CAAEC,WAAW,EAAOC,UAAW,KAAMC,QAAS,MACrDC,SAAU,CAAEH,WAAW,EAAOC,UAAW,KAAMC,QAAS,MACxDE,kBAAmB,CAAEJ,WAAW,EAAOC,UAAW,KAAMC,QAAS,MACjEG,aAAc,CAAEL,WAAW,EAAOC,UAAW,KAAMC,QAAS,MAC5DI,aAAc,CAAEN,WAAW,EAAOC,UAAW,KAAMC,QAAS,MAC5DK,UAAW,CAAEP,WAAW,EAAOC,UAAW,KAAMC,QAAS,MACzDM,SAAU,CAAER,WAAW,EAAOC,UAAW,KAAMC,QAAS,MACxDO,UAAW,CAAET,WAAW,EAAOC,UAAW,KAAMC,QAAS,MACzDQ,SAAU,CAAEV,WAAW,EAAOC,UAAW,KAAMC,QAAS,MACxDS,gBAAiB,CAAEX,WAAW,EAAOC,UAAW,KAAMC,QAAS,MAC/DU,UAAW,CAAEZ,WAAW,EAAOC,UAAW,KAAMC,QAAS,MACzDW,QAAS,CAAEb,WAAW,EAAOC,UAAW,KAAMC,QAAS,MACvDY,WAAY,CAAEd,WAAW,EAAOC,UAAW,KAAMC,QAAS,MAC1Da,OAAQ,CAAEf,WAAW,EAAOC,UAAW,KAAMC,QAAS,MACtDc,SAAU,CAAEhB,WAAW,EAAOC,UAAW,KAAMC,QAAS,MACxDe,SAAU,CAAEjB,WAAW,EAAOC,UAAW,KAAMC,QAAS,MACxDgB,SAAU,CAAElB,WAAW,EAAOC,UAAW,KAAMC,QAAS,MACxDiB,cAAe,CAAEnB,WAAW,EAAOC,UAAW,KAAMC,QAAS,OAE/DkB,SAAU,KACV9C,MAAO,KACP+C,WAAY,KACZC,UAAW,KACX7E,aAASlN,EACTgS,KAAM,KACN7U,MAAO,KACP8U,OAAQ,KACRC,QAAS,KACTC,YAAa,KACbC,YAAQpS,EACRqS,eAAgB,KAChBC,oBAAgBtS,EAChBuS,mBAAevS,EACfwS,qBAAiBxS,EACjByS,kBAAkB,GAIdC,GAAU,SACdvV,EACAwV,GAEA,IAAMC,EAAO,eAAQzV,GACrB,OAAQwV,EAAO/S,MACb,IAAK,iBAIH,OAHAgT,EAAQrC,SAASoC,EAAO9S,SAAS4Q,WAAatT,EAAMoT,SAClDoC,EAAO9S,SACP4Q,UACKmC,EACT,IAAK,yBAGH,OAFAA,EAAQrC,SAASoC,EAAO9S,QAAQgT,SAASnC,UACvCiC,EAAO9S,QAAQ6Q,UACVkC,EACT,IAAK,uBAEH,OADAA,EAAQrC,SAASoC,EAAO9S,QAAQgT,SAASlC,QAAUgC,EAAO9S,QAAQ8Q,QAC3DiC,EACT,IAAK,uBACH,OAAO,eAAKzV,EAAZ,CAAmBkV,eAAgBM,EAAO9S,UAC5C,IAAK,eACH,OAAO,eAAK1C,EAAZ,CAAmB0U,SAAUc,EAAO9S,UACtC,IAAK,cACH,OAAO,eAAK1C,EAAZ,CAAmB+P,QAASyF,EAAO9S,UACrC,IAAK,iBACH,OAAO,eACF1C,EADL,CAEE2U,WAAYa,EAAO9S,QAAQiS,WAC3BC,UAAWY,EAAO9S,QAAQkS,YAE9B,IAAK,aACH,OAAuB,IAAnBY,EAAO9S,QACF,eAAK1C,EAAZ,CAAmBmV,oBAAgBtS,EAAWoS,OAAQO,EAAO9S,UAExD,eACF1C,EADL,CAEEiV,OAAQO,EAAO9S,QACfwS,eAAgB,KAChBE,mBAAevS,EACfwS,qBAAiBxS,IAErB,IAAK,sBACH,OAAO,eAAK7C,EAAZ,CAAmBmV,eAAgBK,EAAO9S,UAC5C,IAAK,qBACH,OAAO,eAAK1C,EAAZ,CAAmBoV,cAAeI,EAAO9S,UAC3C,IAAK,uBACH,MACqB,cAAnB8S,EAAO9S,SACY,iBAAnB8S,EAAO9S,SACY,aAAnB8S,EAAO9S,QAEA,eAAK1C,EAAZ,CAAmBqV,gBAAiBG,EAAO9S,UAEtC+S,EACT,IAAK,gBACH,OAAO,eAAKzV,EAAZ,CAAmBsV,kBAAmBtV,EAAMsV,mBAC9C,IAAK,gBACH,OAAO,eACFE,EAAO9S,SAEd,IAAK,yBACH,OAAO,eACF1C,EADL,GAEKwV,EAAO9S,SAEd,IAAK,iBACH,OAAO,eACF1C,EADL,CAEEoT,SAAUD,GAAiBC,WAE/B,IAAK,kBACH,OAAO,eACFD,IAEP,QACE,OAAOnT,IAIA2V,GAAcC,wBAA6C,CACtE5V,MAAO,KACPmC,SAAU,OAOC0T,GAAqC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACxCC,qBAAWR,GAASpC,IADoB,mBAC3DnT,EAD2D,KACpDmC,EADoD,KAEhD6T,EAAmB/V,qBAAWC,IAAxCiC,SAF0D,EAKlCqF,oBAAkB,GALgB,mBAK3DyO,EAL2D,KAKjDC,EALiD,OAOnDzF,YAAanS,EAASoS,QAA9BC,EAP2D,oBAuClE,OA9BAK,qBAAU,WD/FqB,IAACmF,ICgGZ,YAAyC,EAAtCC,UACHzF,GAAQsF,IACtBC,GAAY,GACZvF,EAAK0F,aAAaC,MAAK,SAAAC,GACrBC,GAAYD,GACTD,MAAK,SAACG,GACe,MAAhBA,EAAK1O,QAAkB0O,EAAKC,MAE1BD,EAAKC,KAAK1Q,MACZ7D,EAAS,CAAEM,KAAM,gBAAiBC,QAAS+T,EAAKC,KAAK1Q,UAI1D2Q,OAAM,WACLX,EAAe,CACbvT,KAAM,kBACNC,QAAS,CACP8F,MAAM,EACNgK,QACE,wDACFC,SAAU,mBDnHnBnU,KAASoS,OAAOkG,oBAAmB,SAAAjG,GAEtCwF,EADExF,EACO,CAAEyF,UAAU,GAEZ,CAAEA,UAAU,SCsHtB,CAACzF,EAAMsF,EAAUD,IAGlB,kBAACL,GAAYkB,SAAb,CAAsBjU,MAAO,CAAE5C,QAAOmC,aACnC2T,ICpLMgB,GAAe,CAC1BvW,qBAAsB,kBACtBwW,QAAS,CACPvO,MAAM,EACNgK,QAAS,GACTC,SAAU,WAEZpJ,gBAAiB,CACftK,cAAc,EACdiO,WAAW,GAEbgK,YAAY,EACZC,iBAAkB,KAClBhG,gBAAiBiG,aAAaC,QAAQ,mBAAoB,EAC1DC,oBAAqB,MAGjB7B,GAAU,SACdvV,EACAwV,GAEA,OAAQA,EAAO/S,MACb,IAAK,wBACH,OAAO,eACFzC,EADL,CAEEO,qBAAsBiV,EAAO9S,UAEjC,IAAK,4BACH,OAAO,eACF1C,EADL,CAEEiX,iBAAkBzB,EAAO9S,UAE7B,IAAK,kBACH,OAAO,eACF1C,EADL,CAEE+W,QAAQ,eACH/W,EAAM+W,QADJ,GAEFvB,EAAO9S,WAGhB,IAAK,0BACH,OAAO,eACF1C,EADL,CAEEqJ,gBAAgB,eACXrJ,EAAMqJ,gBADI,eAEZmM,EAAO9S,SAAW1C,EAAMqJ,gBAAgBmM,EAAO9S,aAGtD,IAAK,cACH,OAAuB,IAAnB8S,EAAO9S,SACTwU,aAAaG,QAAQ,gBAAiB,QAC/B,eACFrX,EADL,CAEEgX,WAAYxB,EAAO9S,QACnBuO,eAAe,KAGZ,eACFjR,EADL,CAEEgX,WAAYxB,EAAO9S,UAEvB,QACE,OAAO1C,IAMAE,GAAgB0V,wBAA6C,CACxE5V,MAAO,KACPmC,SAAU,OAOCmV,GAAyC,SAAC,GAAkB,IAAhBxB,EAAe,EAAfA,SAAe,EAE5CC,qBAAWR,GAASuB,IAFwB,mBAE/D9W,EAF+D,KAExDmC,EAFwD,KAQtE,OAJA6O,qBAAU,WACRuG,OACC,IAGD,kBAACrX,GAAc2W,SAAf,CAAwBjU,MAAO,CAAE5C,QAAOmC,aACrC2T,ICzFDjV,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CyW,SAAU,CACRvW,SAAU,WAEZgG,QAAS,CACP6I,SAAU,SAID2H,GAAqB,WAChC,IAAM7V,EAAUf,KADsB,EAEN0G,IAAMC,SAA6B,MAF7B,mBAE/BC,EAF+B,KAErBC,EAFqB,KAGhCc,EAAOC,QAAQhB,GAOfQ,EAAc,WAClBP,EAAY,OAGd,OACE,kBAACvH,EAAA,EAAD,CAAKgE,aAAc,GACjB,kBAAC/B,EAAA,EAAD,CACEsV,aAAW,6BACXtP,gBAAc,OACd/F,KAAK,IACLC,QAfc,SAACC,GACnBA,EAAMC,iBACNkF,EAAYnF,EAAM8F,gBAcdpG,UAAS,UAAKL,EAAQ4V,SAAb,kBALX,6BAQQ,IACR,kBAAClP,EAAA,EAAD,CACEC,GAAG,YACHd,SAAUA,EACVe,KAAMA,EACNE,QAAST,EACTrG,QAAS,CAAE4B,MAAO5B,EAAQqF,SAC1B0Q,gBAAiB,CACf/O,SAAU,SACVC,WAAY,SAGd,kBAAC1I,EAAA,EAAD,CAAKmC,QAAS2F,EAAanE,QAAS,GAClC,kBAACmB,EAAA,EAAD,CAAYE,QAAQ,MAApB,6BACA,2BACE,2BAAOlD,UAAU,gBAAjB,2EAKF,kBAACgD,EAAA,EAAD,CAAYE,QAAQ,MAApB,oBACA,2BACE,2BAAOlD,UAAU,gBAAjB,kPAI2D,IACzD,kBAACG,EAAA,EAAD,CACEC,KAAK,mBACLuV,OAAO,SACPC,IAAI,sBACJ5V,UAAU,gBAJZ,kBAOQ,IAZV,mBAgBF,kBAAC9B,EAAA,EAAD,CAAKoD,UAAU,SACb,kBAACnB,EAAA,EAAD,CAAMC,KAAK,IAAIC,QAAS2F,GAAxB,c,oBCjEC6P,GAAsC,SAAC,GAG7C,IAFLxC,EAEI,EAFJA,iBACAyC,EACI,EADJA,aACI,EACwCvQ,oBAAS,GADjD,mBACGwQ,EADH,KACmBC,EADnB,KAGJ,OACE,oCACE,kBAACC,GAAA,EAAD,CACEC,QACE,kBAACC,GAAA,EAAD,CACEC,KAAK,WACLlX,MAAM,UACNmX,UAAQ,sBACRC,UAAWjD,EACXkD,SAAU,WACRT,EAAa,CAAEtV,KAAM,qBAI3BgW,MACE,+CACiB,IACf,kBAACrW,EAAA,EAAD,CACEH,UAAU,eACVI,KAAK,IACLC,QAAS,SAACoW,GACRA,EAAElW,iBACFyV,GAAkB,KALtB,oBAFF,OAgBHD,GACC,kBAAC,GAAD,CACEW,MAAM,mBACNjQ,QAAS,WAEP,OADAuP,GAAkB,GACX,OAGT,kBAAC,GAAD,CAAc7X,MAAM,OAAOmR,SAAS,6BClCxC1Q,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CQ,UAAW,CACTA,UAAWR,EAAMgD,QAAQ,QAShB6U,GAA+C,SAAC,GAGtD,IAFLC,EAEI,EAFJA,kBACAC,EACI,EADJA,oBAEMlX,EAAUf,KADZ,EAE0C2G,oBAAS,GAFnD,mBAEGuR,EAFH,KAEoBC,EAFpB,OAGgCxR,oBAAkB,GAHlD,mBAGGyR,EAHH,KAGeC,EAHf,KAIclD,EAAmB/V,qBAAWC,IAAxCiC,SAJJ,EAK8B4T,qBAChCoD,GACAC,IAPE,mBAKGC,EALH,KAKctB,EALd,KAUEuB,EAAe,SAACjP,EAAezH,GACnCmV,EAAa,CAAEtV,KAAM,YAAaC,QAAS,CAAE2H,QAAOzH,YAGhD2W,EAAe,SAACb,GACpBY,EAAaZ,EAAErQ,cAAcgQ,KAAMK,EAAErQ,cAAczF,QAI/C4W,EAAiB,uCAAG,sBAAAzH,EAAA,yDACxBgG,EAAa,CAAEtV,KAAM,wBAEjB4W,EAAUxH,SAASvL,OAAS,GAHR,gBAItBgT,EACE,gBACA,+CANoB,4BAQbD,EAAUI,UAAUnT,OAAS,GARhB,gBAStBgT,EACE,iBACA,+CAXoB,0BAabD,EAAUxH,WAAawH,EAAUI,UAbpB,iBActBH,EAAa,iBAAkB,0BAdT,yCAiBpBJ,GAAc,GAjBM,UAkBdvH,GAAO0H,EAAUzH,MAAOyH,EAAUxH,SAAUwH,EAAUvH,SAlBxC,QAmBpBgH,IAnBoB,mDAqBpBI,GAAc,GACdL,EAAkB,KAAIa,KAAM,KAAIlH,SAtBZ,2DAAH,qDAuDvB,OA5BAxB,qBAAU,WACR,IACE2I,OAAOC,kBAAoB,IAAItb,EAASoS,KAAKmJ,kBAC3C,YACA,CACE1D,SAAU,SAAC2D,GACTR,EAAa,UAAWQ,GACxBd,GAAmB,IAErB,mBAAoB,WAClBW,OAAOC,kBAAkBG,WAK/BJ,OAAOC,kBAAkBI,SACzB,MAAOC,GACPjE,EAAe,CACbvT,KAAM,kBACNC,QAAS,CACP8F,MAAM,EACNgK,QAAS,gDACTC,SAAU,cAIf,CAACuD,IAGF,oCACE,yBACEzN,GAAG,YACHzG,MAAO,CAAExB,QAAUyY,EAAmC,OAAjB,kBAEvC,yBAAKjX,MAAO,CAAExB,QAAUyY,EAA2B,QAAT,SACxC,kBAACrT,EAAA,EAAD,CACEwU,WAAS,EACTnW,QAAS,EACT9B,UAAWL,EAAQL,UACnB4Y,QAAQ,UAER,kBAACzU,EAAA,EAAD,CAAMC,MAAI,EAACyU,GAAI,GAAIC,GAAI,GACrB,kBAACC,GAAA,EAAD,CACE/R,GAAG,QACHkQ,MAAM,QACNhW,KAAK,QACL4V,KAAK,QACLC,UAAQ,uBACR1V,MAAOyW,EAAUzH,MACjB4G,SAAUe,EACVgB,QAASlB,EAAUmB,WACnBC,WAAYpB,EAAUmB,WACtBE,WAAS,EACTC,UAAQ,EACRxV,QAAQ,WACRyV,WAAY,CACVC,eACE,kBAACC,GAAA,EAAD,CAAgB9W,SAAS,SACvB,kBAAC+W,GAAA,EAAD,YAOZ,kBAACrV,EAAA,EAAD,CACEwU,WAAS,EACTnW,QAAS,EACT9B,UAAWL,EAAQL,UACnB4Y,QAAQ,UAER,kBAACzU,EAAA,EAAD,CAAMC,MAAI,EAACyU,GAAI,EAAGC,GAAI,GACpB,kBAACC,GAAA,EAAD,CACE/R,GAAG,WACHkQ,MAAM,WACNhW,KAAK,WACL4V,KAAK,WACLC,UAAQ,0BACR1V,MAAOyW,EAAUxH,SACjB2G,SAAUe,EACVmB,WAAS,EACTC,UAAQ,EACRJ,QAASlB,EAAU2B,cACnBP,WAAYpB,EAAU2B,cACtB7V,QAAQ,WACRyV,WAAY,CACVC,eACE,kBAACC,GAAA,EAAD,CAAgB9W,SAAS,SACvB,kBAACiX,GAAA,EAAD,WAMV,kBAACvV,EAAA,EAAD,CAAMC,MAAI,EAACyU,GAAI,EAAGC,GAAI,GACpB,kBAACC,GAAA,EAAD,CACE/R,GAAG,YACHkQ,MAAM,mBACNhW,KAAK,WACL4V,KAAK,YACLC,UAAQ,2BACR1V,MAAOyW,EAAUI,UACjBjB,SAAUe,EACVmB,WAAS,EACTC,UAAQ,EACRJ,QAASlB,EAAU6B,eACnBT,WAAYpB,EAAU6B,eACtB/V,QAAQ,WACRyV,WAAY,CACVC,eACE,kBAACC,GAAA,EAAD,CAAgB9W,SAAS,SACvB,kBAACiX,GAAA,EAAD,WAMV,kBAACvV,EAAA,EAAD,CAAMC,MAAI,EAACyU,GAAI,GAAIC,GAAI,GACrB,kBAACc,GAAA,EAAD,CACEhW,QAAQ,YACRmT,UAAS,iBACTnX,MAAM,YACNia,UAAWrC,GAAmBE,EAC9BoC,UAAW,kBAACC,GAAA,EAAD,MACXhZ,QAASkX,GAEPP,EAGA,kBAACpT,EAAA,EAAD,CAAkB9F,KAAM,KAFxB,2BC5MHwb,GAAiB,WAAO,IAC3BpZ,EAAalC,qBAAWC,IAAxBiC,SAER,OACE,kBAACC,EAAA,EAAD,CACEC,KAAK,IACLJ,UAAU,eACVK,QAAS,SAACoW,GACRA,EAAElW,iBAEFL,EAAS,CACPM,KAAM,4BACNC,QAAS,YARf,YCcS0W,GAA8B,CACzCxH,MAAO,GACPC,SAAU,GACV4H,UAAW,GACXe,WAAY,GACZQ,cAAe,GACfE,eAAgB,GAChBpJ,QAAS,IAGEqH,GAAc,SACzBnZ,EACAwV,GAEA,OAAQA,EAAO/S,MACb,IAAK,YACH,OAAI+S,EAAO9S,QACF,eACF1C,EADL,eAEGwV,EAAO9S,QAAQ2H,MAAQmL,EAAO9S,QAAQE,QAGpC,eACF5C,GAEP,IAAK,oBACH,OAAO,eACFA,EADL,CAEEwa,WAAY,GACZQ,cAAe,GACfE,eAAgB,KAEpB,QACE,OAAO,eAAKlb,KAIlB2Z,OAAOC,kBAAoBD,OAAOC,mBAAqB,GAEhD,IAAM4B,GAAiB,WAAO,IAC3BrZ,EAAalC,qBAAWC,IAAxBiC,SACFsZ,EAAiBvY,IAFW,EAGG6S,qBACnCoD,GACAC,IAFOsC,EAHyB,sBAU9Bzb,qBAAW0V,IAFNgG,EARyB,EAQhC3b,MACU4b,EATsB,EAShCzZ,SAGImX,EAAe,SAACjP,EAAezH,GACnC8Y,EAAyB,CAAEjZ,KAAM,YAAaC,QAAS,CAAE2H,QAAOzH,YAG5DiW,EAAoB,SAACa,EAAclH,GACvC,OAAQA,GACN,IAAK,4BACH8G,EAAa,aAAc,gCAC3B,MACF,IAAK,qBACHA,EAAa,aAAc,iBAC3B,MACF,QACEnX,EAAS,CACPM,KAAM,kBACNC,QAAS,CACP8F,MAAM,EACNgK,UACAC,SAAU,QACVoJ,SAAU,UAQd/C,EAAsB,WAC1B3W,EAAS,CACPM,KAAM,4BACNC,QAAS,OAGXP,EAAS,CACPM,KAAM,kBACNC,QAAS,CACP8F,MAAM,EACNgK,QAAS,qBACTC,SAAU,cAMVqJ,EAAiB,uCAAG,WAAOvZ,GAAP,SAAAwP,EAAA,6DACxBxP,EAAMC,iBADkB,kBAIhBoQ,KAJgB,OAKtBkG,IALsB,gDAOtBD,EAAkB,KAAIa,KAAM,KAAIlH,SAPV,yDAAH,sDAYjBuJ,EAAmB,uCAAG,WAAOxZ,GAAP,SAAAwP,EAAA,6DAC1BxP,EAAMC,iBADoB,kBAIlBwQ,KAJkB,OAKxB8F,IALwB,gDAOxBD,EAAkB,KAAIa,KAAM,KAAIlH,SAPR,yDAAH,sDAWzB,OACE,yBAAK1Q,MAAO,CAAEyB,UAAW,WACvB,kBAAC,IAAD,MACG,kBACC,oCACE,kBAAC0B,EAAA,EAAD,CAAYE,QAAQ,MAApB,0BACA,kBAAC,GAAD,OACEwW,EAAkBrG,kBAClB,kBAAC5P,EAAA,EAAD,CAAMwU,WAAS,GACb,kBAACxU,EAAA,EAAD,CAAMC,MAAI,EAACyU,GAAI,IACb,kBAAC,GAAD,CACE9E,iBAAkBqG,EAAkBrG,iBACpCyC,aAAc6D,MAKrBD,EAAkBrG,kBACjB,oCACE,kBAAC5P,EAAA,EAAD,CACEwU,WAAS,EACTC,QAAQ,SACRrY,MAAO,CAAEP,UAAW,IACpBwC,QAAS,GAET,kBAAC2B,EAAA,EAAD,CAAMC,MAAI,GACR,kBAAC,GAAD,CACElD,KAAK,SACLH,QAASwZ,EACTV,UAAWK,KAGf,kBAAC/V,EAAA,EAAD,CAAMC,MAAI,GACR,kBAAC,GAAD,CACElD,KAAK,WACLH,QAASyZ,EACTX,UAAWK,MAGbA,GACA,kBAAC/V,EAAA,EAAD,CACEC,MAAI,EACJyU,GAAI,GACJnY,UAAU,eACVH,MAAO,CAAEb,SAAU,WAJrB,0GAWJ,kBAACgE,EAAA,EAAD,CAAYC,UAAU,OACpB,uDAEF,kBAAC,GAAD,CACE2T,kBAAmBA,EACnBC,oBAAqBA,KAI3B,uBAAGhX,MAAO,CAAEyB,UAAW,WAAvB,4BAC2B,kBAAC,GAAD,MAD3B,Y,UCvLNyY,GAAiB,kBACrB,yBACEC,MAAM,6BACNC,QAAQ,cACRja,UAAU,mBAEV,0BAAMka,EAAE,2GAICC,GAA2C,SAAC,GAKlD,IAJL3Z,EAII,EAJJA,KACA2Y,EAGI,EAHJA,SACA9Y,EAEI,EAFJA,QACA+Z,EACI,EADJA,aAEIC,EAAU,GACVjB,EAAY,KACZkB,EAAoB,GAExB,OAAQ9Z,GACN,IAAK,SACH6Z,EAAU,SACVjB,EAAY,kBAAC,GAAD,MACZ,MACF,IAAK,WACHiB,EAAU,WACVjB,EAAY,kBAACmB,GAAA,EAAD,MACZ,MACF,QACEF,EAAU,QACVjB,EAAY,kBAACC,GAAA,EAAD,MACZiB,EAAoB,iBAIxB,OACE,kBAACpB,GAAA,EAAD,CACEhW,QAAQ,YACRmT,UAASiE,EACTpb,MAAM,YACNia,SAAUA,EACVC,UAAWA,EACX/Y,QAASA,GAER+Z,GAAgBC,IC5CjBzb,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCQ,UAAW,CACTA,UAAWR,EAAMgD,QAAQ,QAIhB0Y,GAAgB,WAC3B,IAAM7a,EAAUf,KACRsB,EAAalC,qBAAWC,IAAxBiC,SACFsZ,EAAiBvY,IAHU,EAKesE,oBAAkB,GALjC,mBAK1BkV,EAL0B,KAKRC,EALQ,OAMPnV,mBAAiB,IANV,mBAM1BoK,EAN0B,KAMnBgL,EANmB,OAOiBpV,mBAAiB,IAPlC,mBAO1BqV,EAP0B,KAOPC,EAPO,OAQDtV,mBAAiB,IARhB,mBAQ1BqK,EAR0B,KAQhBkL,EARgB,OASuBvV,mBAAiB,IATxC,mBAS1BwV,EAT0B,KASJC,EATI,OAUGzV,oBAAkB,GAVrB,mBAU1ByR,EAV0B,KAUdC,EAVc,KAY3BgE,EAAmB,SAACxD,EAAclH,GACtC,OAAQkH,GACN,IAAK,sBACHuD,EAAwB,oBACxB,MACF,IAAK,sBACHH,EAAqB,gCACrB,MACF,IAAK,qBACHA,EAAqB,iBACrB,MACF,QACE3a,EAAS,CACPM,KAAM,kBACNC,QAAS,CACP8F,MAAM,EACNgK,UACAC,SAAU,QAGVoJ,SAAU,UAQdsB,EAAqB,WACzBhb,EAAS,CACPM,KAAM,4BACNC,QAAS,OAGXP,EAAS,CACPM,KAAM,kBACNC,QAAS,CACP8F,MAAM,EACNgK,QAAS,oBACTC,SAAU,cAUV2K,EAAgB,uCAAG,WAAO7a,GAAP,SAAAwP,EAAA,6DACvBxP,EAAMC,iBALNsa,EAAqB,IACrBG,EAAwB,IAGD,SAKrB/D,GAAc,GALO,SAMfxG,GAAMd,EAAOC,GANE,OAOrBsL,IAPqB,gDASrBjE,GAAc,GACdgE,EAAiB,KAAIxD,KAAM,KAAIlH,SAVV,yDAAH,sDAchBsJ,EAAiB,uCAAG,WAAOvZ,GAAP,SAAAwP,EAAA,6DACxBxP,EAAMC,iBADkB,kBAIhBoQ,KAJgB,OAKtBuK,IALsB,gDAOtBD,EAAiB,KAAIxD,KAAM,KAAIlH,SAPT,yDAAH,sDAWjBuJ,EAAmB,uCAAG,WAAOxZ,GAAP,SAAAwP,EAAA,6DAC1BxP,EAAMC,iBADoB,kBAIlBwQ,KAJkB,OAKxBmK,IALwB,gDAOxBD,EAAiB,KAAIxD,KAAM,KAAIlH,SAPP,yDAAH,sDAmBzB,OACE,yBAAK1Q,MAAO,CAAEyB,UAAW,WACvB,kBAAC0B,EAAA,EAAD,CAAYE,QAAQ,MAApB,yBACA,kBAACO,EAAA,EAAD,CACEwU,WAAS,EACTnW,QAAS,EACToW,QAAQ,SACRlY,UAAWL,EAAQL,WAEnB,kBAACmE,EAAA,EAAD,CAAMC,MAAI,GACR,kBAAC,GAAD,CACEyV,UAAWK,EACXhZ,KAAK,SACLH,QAASwZ,KAGb,kBAACpW,EAAA,EAAD,CAAMC,MAAI,GACR,kBAAC,GAAD,CACEyV,UAAWK,EACXhZ,KAAK,WACLH,QAASyZ,MAGXN,GACA,kBAAC/V,EAAA,EAAD,CACEC,MAAI,EACJyU,GAAI,GACJnY,UAAU,eACVH,MAAO,CAAEb,SAAU,WAJrB,yGAWJ,kBAACgE,EAAA,EAAD,CAAYC,UAAU,MAAMjD,UAAWL,EAAQL,WAC7C,uBAAGU,UAAWL,EAAQL,WAAtB,2BAEF,kBAACmE,EAAA,EAAD,CAAMwU,WAAS,EAACC,QAAQ,UACtB,kBAACzU,EAAA,EAAD,CAAMC,MAAI,EAACyU,GAAI,GAAIC,GAAI,IACrB,kBAACC,GAAA,EAAD,CACE/R,GAAG,WACHkQ,MAAM,WACNhW,KAAK,QACLG,MAAOgP,EACP4G,SArDgB,SAACjW,GACzBqa,EAASra,EAAM8F,cAAczF,QAqDrB2X,QAASsC,EACTpC,WAAYoC,EACZnC,WAAS,EACTC,UAAQ,EACRC,WAAY,CACVC,eACE,kBAACC,GAAA,EAAD,CAAgB9W,SAAS,SACvB,kBAAC+W,GAAA,EAAD,YAOZ,kBAACrV,EAAA,EAAD,CAAMwU,WAAS,EAACC,QAAQ,UACtB,kBAACzU,EAAA,EAAD,CAAMC,MAAI,EAACyU,GAAI,GAAIC,GAAI,GAAIpY,UAAWL,EAAQL,WAC5C,kBAAC+Y,GAAA,EAAD,CACE/R,GAAG,WACHkQ,MAAM,WACNhW,KAAK,WACLG,MAAOiP,EACP2G,SAvEmB,SAACjW,GAC5Bwa,EAAYxa,EAAM8F,cAAczF,QAuExB2X,QAASyC,EACTvC,WAAYuC,EACZtC,WAAS,EACTC,UAAQ,EACRC,WAAY,CACVC,eACE,kBAACC,GAAA,EAAD,CAAgB9W,SAAS,SACvB,kBAACiX,GAAA,EAAD,YAOZ,kBAACvV,EAAA,EAAD,CAAMwU,WAAS,EAACnW,QAAS,EAAGoW,QAAQ,UAClC,kBAACzU,EAAA,EAAD,CAAMC,MAAI,EAACyU,GAAI,GAAIC,GAAI,IACrB,kBAACjY,EAAA,EAAD,CACEC,KAAK,IACLJ,UAAU,eACVK,QAAS,SAACoW,GAGR,OAFAA,EAAElW,iBACFma,GAAoB,GACb,OANX,sBAaJ,kBAACjX,EAAA,EAAD,CACEwU,WAAS,EACTC,QAAQ,SACRlY,UAAWL,EAAQL,UACnBwC,QAAS,EACTjC,MAAO,CAAEyB,UAAW,WAEpB,kBAACmC,EAAA,EAAD,CAAMC,MAAI,EAACyU,GAAI,GAAIC,GAAG,QACpB,kBAACc,GAAA,EAAD,CACEhW,QAAQ,YACRhE,MAAM,YACNpB,KAAK,QACLuC,QAAS8a,EACT/B,UAAW,kBAACC,GAAA,EAAD,MACXF,UAAWxJ,IAAUC,GAAYoH,GAE/BA,EAAmC,kBAACpT,EAAA,EAAD,CAAkB9F,KAAM,KAA9C,uBAIrB,oDACyB,IACvB,kBAACqC,EAAA,EAAD,CACEC,KAAK,IACLJ,UAAU,eACVK,QAAS,SAACoW,GACRA,EAAElW,iBAEFL,EAAS,CACPM,KAAM,4BACNC,QAAS,aARf,WAFF,KAkBCga,GACC,kBAAC,GAAD,CACE/D,MAAM,kBACNjQ,QAAS,WAEP,OADAiU,GAAoB,GACb,OAGT,kBAAC,GAAD,SC3QGU,GAAkB,WAAO,IAAD,EACPpd,qBAAWC,IAA/BF,EAD2B,EAC3BA,MAAOmC,EADoB,EACpBA,SACTmb,EAAYtd,EAAMiX,iBAElBvO,EAAU,WACdvG,EAAS,CACPM,KAAM,4BACNC,QAAS,QAIb,OAAK4a,EAIa,UAAdA,EAEA,kBAAC,GAAD,CAAa5U,QAASA,EAASiQ,MAAM,SACnC,kBAAC,GAAD,OAMJ,kBAAC,GAAD,CAAajQ,QAASA,EAASiQ,MAAM,UACnC,kBAAC,GAAD,OAbK,MCbE4E,GAAW,WACtB,OACE,6BACE,kBAACtY,EAAA,EAAD,CAAYE,QAAQ,MAApB,sBACA,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAcoM,SAAS,wBCJvBiM,GAAuB,WAAO,IAC1Brb,EAAalC,qBAAWC,IAAxBiC,SAEFsb,EAAgB,uCAAG,sBAAA1L,EAAA,+EAEf2L,KAFe,sDAIrBvb,EAAS,CACPM,KAAM,kBACNC,QAAS,CACP8F,MAAM,EACNgK,QAAS,6BACTC,SAAU,WATO,wDAAH,qDAehBkL,EAAkB,uCAAG,sBAAA5L,EAAA,+EAEjB6L,GAAgB,iBAFC,sDAIvBzb,EAAS,CACPM,KAAM,kBACNC,QAAS,CACP8F,MAAM,EACNgK,QAAS,+CACTC,SAAU,WATS,wDAAH,qDAexB,OACE,yBAAK3Q,MAAO,CAAExB,QAAS,OAAQY,eAAgB,iBAC7C,kBAACia,GAAA,EAAD,CACEhW,QAAQ,YACRhE,MAAM,YACNmB,QAASqb,GAHX,qBAOA,kBAACxC,GAAA,EAAD,CAAQha,MAAM,YAAYgE,QAAQ,YAAY7C,QAASmb,GAAvD,oBAOOI,GAAwB,kBACnC,kBAACC,EAAA,EAAD,CAAW7b,UAAU,gBACnB,kBAAC,GAAD,CAAYkH,GAAG,IAAIkI,KAAK,WACxB,wDACA,wHAIA,kBAAC,GAAD,QCvDE0M,GAAazS,EAAQ,KAEd0S,GAAY,uCAAG,WAC1BC,EACAC,GAF0B,SAAAnM,EAAA,sEAIpBgM,GACHI,KADG,UACKzgB,EADL,iBAEH0gB,IAAI,gBAAiBF,GACrBG,KAAKJ,GAPkB,2CAAH,wDAUZzH,GAAc,SAAC0H,GAC1B,OAAOH,GACJO,IADI,UACG5gB,EADH,UAEJ0gB,IAAI,gBAAiBF,GACrBE,IAAI,SAAU,qBAING,GAAmB,uCAAG,sBAAAxM,EAAA,sEAC3BzG,EAAQ,KADmB,mFAAH,qDAGnBkT,GAAc,uCAAG,sBAAAzM,EAAA,+EACrBgM,GACJO,IADI,UACG5gB,EADH,eAEJ0gB,IAAI,SAAU,qBAHW,2CAAH,qDAMdxW,GAAqB,uCAAG,oCAAAmK,EAAA,sEACbwM,KADa,cAC7BE,EAD6B,gBAETD,KAFS,cAE7BE,EAF6B,OAI7B1R,EAAY2R,KAAKC,MAAMF,EAAW,MAAtB,KACZG,EAA4C,GAGlD7R,EAAS,UAAc8R,SAAQ,SAAC/J,GAC9B8J,EAAe9J,EAAO,cAAtB,eAA+CA,MAG3CgK,EAAmBN,EAAO,SAAarY,KAAI,SAAC4E,GAChD,YACsCnI,IAApCmI,EAAO,WAAP,QACAA,EAAO,WAAP,UAAmC6T,EAE5B,eACF7T,EADL,CAEEhD,WAAY6W,EAAe7T,EAAO,WAAP,UAGxB,eAAKA,MAtBqB,kBAyB5B+T,GAzB4B,4CAAH,qDA4BrB7P,GAAiB,uCAAG,sBAAA6C,EAAA,sEAClBgM,GACVO,IADU,UACH5gB,EADG,iBAEV0gB,IAAI,SAAU,oBACd9H,MAAK,SAACwD,GAAD,OAAmBA,EAASpD,KAAK1Q,KAAKgZ,aAJf,mFAAH,qDAWjBpB,GAAe,uCAAG,WAAOrM,GAAP,SAAAQ,EAAA,sEACvBgM,GACHO,IADG,UjC3EN,8EiC2EM,YAC2B/M,IAC9B6M,IAAI,SAAU,2BAHY,mFAAH,sDAKfV,GAAiB,uCAAG,sBAAA3L,EAAA,sEACzBgM,GAAWO,IAAI,4BADU,mFAAH,qDAGjB/G,GAAY,uCAAG,sBAAAxF,EAAA,sEACpBkN,KADoB,2CAAH,qDAInBA,GAAiB,uCAAG,sBAAAlN,EAAA,sDACxBZ,GAAU2N,QAAV,uCAAkB,WAAMxN,GAAN,SAAAS,EAAA,sEACVmN,IAAWC,cAAc7N,EAAMsM,GAAiB,CACpD/V,UAAWuX,MAFG,2CAAlB,uDADwB,2CAAH,qDC9EV9O,GAAmB,SAACnO,GAAD,OAC9BwF,YAAS,gBAAiBC,GAAuB,CAC/CC,UAJiB,IAKjBwX,QAAS,SAAA9E,GACPpY,EAAS,CACPM,KAAM,kBACNC,QAAS,CACP8F,MAAM,EACNgK,QAAS,+BACTC,SAAU,eAMPpC,GAAe,SAAClO,GAAD,OAC1BwF,YAAS,YAAauH,GAAmB,CACvCrH,UAnBiB,IAoBjBwX,QAAS,SAAA9E,GACPpY,EAAS,CACPM,KAAM,kBACNC,QAAS,CACP8F,MAAM,EACNgK,QAAS,sCACTC,SAAU,eC1Bd5R,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CuC,KAAM,CACJgc,WAAYve,EAAMgD,QAAQ,GAC1Bwb,cAAexe,EAAMgD,QAAQ,GAC7BN,gBAAiB1C,EAAMrC,QAAQgF,OAAOC,MACtCxC,MAAOJ,EAAMrC,QAAQgF,OAAOW,MAC5B,MAAO,CACLlD,MAAOJ,EAAMrC,QAAQ+C,KAAKC,MAE5B,YAAa,CACX8d,OAAQ,gBAoBDC,GAAkB,kBAC7B,iCACE,wBAAIlX,GAAG,YAAP,YACA,8DAEE,uBACEqP,OAAO,SACPC,IAAI,sBACJxV,KAAK,mHAHP,mBAFF,KAWA,wBAAIkG,GAAG,oBAAP,oBACA,4CACiB,IACf,kBAAC,IAAD,CAAWY,GAAG,qBAAd,oBAFF,KAIA,wBAAIZ,GAAG,kBAAP,kBACA,6CACkB,IAChB,kBAAC,IAAD,CAAWY,GAAG,mBAAd,wBAFF,OAOSuW,GAA8B,SAAC,GAAkC,IAAhCnO,EAA+B,EAA/BA,SAA+B,IAArBnR,aAAqB,MAAb,OAAa,EAEnE4F,ED3Bc,SAACuL,EAAkBpP,GAAnB,OACtBwF,YAAS4J,EAAUqM,GAAiB,CAClC/V,UAAWuX,IACXC,QAAS,SAAA9E,GACPpY,EAAS,CACPM,KAAM,kBACNC,QAAS,CACP8F,MAAM,EACNgK,QAAS,+CACTC,SAAU,cCkBDkN,CAASpO,EADLtR,qBAAWC,IAAxBiC,UACA6D,KAER,OACE,yBAAKlE,MAAO,CAAE1B,UACX4F,GAAQ,yBAAK4Z,wBAAyB,CAAEC,OAAQ7Z,EAAKqL,UAK/CyO,GAAqC,SAAC,GAAkB,IAAhBhK,EAAe,EAAfA,SAC7ClU,EAAUf,KAEhB,OACE,kBAACid,EAAA,EAAD,CAAW7b,UAAS,uBAAkBL,EAAQ0B,OAASwS,IAI9CiK,GAAiC,SAAC,GAAD,IAAG1O,EAAH,EAAGA,KAAMlI,EAAT,EAASA,GAAT,OAC5C,oCACU,MAAPA,GACC,kBAAClE,EAAA,EAAD,CAAYC,UAAU,OAAO/D,MAAM,WACjC,uCAGJ,kBAACiB,EAAA,EAAD,CAAM8C,UAAWgE,IAAWC,GAAIA,GAC7BkI,K,mDCjFDxQ,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CuC,KAAM,CACJU,SAAU,QACVS,OAAQ1D,EAAMgD,QAAQ,GACtBc,MAAO9D,EAAMgD,QAAQ,QAIzB,SAASic,GAAU3a,GAAe,IACxByQ,EAAazQ,EAAbyQ,SACFlU,EAAUf,KACVof,EAAUC,eAYhB,OACE,kBAACC,GAAA,EAAD,CAAMC,GAAIH,GACR,yBAAK3d,QAZW,SAACC,GACnB,IAAM8d,GACH9d,EAAMqV,OAA0B0I,eAAiBC,UAClDC,cAAc,uBAEZH,GACFA,EAAOI,eAAe,CAAEC,SAAU,SAAUC,MAAO,YAMxBC,KAAK,eAAe3e,UAAWL,EAAQ0B,MAC/DwS,IAOF,IAAM+K,GAAe,kBAC1B,kBAACb,GAAD,KACE,kBAACc,GAAA,EAAD,CAAK3f,MAAM,YAAYpB,KAAK,QAAQ2X,aAAW,sBAC7C,kBAAC,KAAD,S,qBCzCOqJ,GAAmB,WAAO,IAC7B5e,EAAalC,qBAAWC,IAAxBiC,SAD4B,EAEAmO,GAAiBnO,GAA7C4F,EAF4B,EAE5BA,OAAciF,EAFc,EAEpBhH,KAEhB,GAAe,YAAX+B,IAAyBiF,EAC3B,OAAO,qCAGT,IAAMhH,EAAOgH,EACV5G,KAAI,SAAC2O,GAAkB,IAAD,EASjBA,EAAQ/M,WAPV4F,EAFmB,EAEnBA,aACAhP,EAHmB,EAGnBA,aACAH,EAJmB,EAInBA,gBACAI,EALmB,EAKnBA,gBACAoP,EANmB,EAMnBA,WAKF,MAAO,CACLL,EACAnP,EAbmB,EAOnBuP,cAQApP,EACAqP,EACApP,EAjBmB,EAQnBqP,kBAcH3D,QAAO,SAACwK,GAAD,QAA2BA,EAAQ,MAiB7C,OACE,kBAAC,KAAD,CACE4D,MAAM,eACN3S,KAAMA,EACNgb,QAnBY,CACd,CAAE3I,KAAM,YACR,CACEA,KAAM,YACN4I,QAAS,CACPC,cAAe,SAGnB,CAAE7I,KAAM,0BACR,CAAEA,KAAM,WACR,CAAEA,KAAM,wBACR,CAAEA,KAAM,cACR,CAAEA,KAAM,4BAQN4I,QAAS,CACPE,eAAgB,W,qBCpDXC,GAA0B,SAAC,GAAD,IACrCC,EADqC,EACrCA,iBACAC,EAFqC,EAErCA,WAFqC,IAGrC1f,eAHqC,MAG3B,GAH2B,SAKrC,kBAACsG,EAAA,EAAD,CACEqZ,KAAK,QACLtf,UAAWL,EAAQ4f,OACnB9J,aAAW,OACXpV,QAAS,kBAAM+e,GAAkBC,KAEjC,kBAAC,KAAD,Q,qBCZEG,GAA0C,SAAC,GAAiB,IAAf7f,EAAc,EAAdA,QACzCO,EAAalC,qBAAWC,IAAxBiC,SAER,OACE,kBAAC+F,EAAA,EAAD,CACEwP,aAAW,kBACXzV,UAAWL,EAAQ8f,kBACnBvgB,MAAM,UACNpB,KAAK,QACLuC,QAAS,WACPH,EAAS,CACPM,KAAM,4BACNC,QAAS,YAIb,kBAAC,KAAD,CAAmBzB,SAAS,UAAU0gB,UAAU,YAKhDC,GAAyC,SAAC,GAAiB,IAAfhgB,EAAc,EAAdA,QACxCO,EAAalC,qBAAWC,IAAxBiC,SAER,OACE,kBAACgZ,GAAA,EAAD,CACEhW,QAAQ,YACRhE,MAAM,UACNc,UAAS,UAAKL,EAAQigB,WAAb,YAA2BjgB,EAAQkgB,eAAnC,YAAqDlgB,EAAQmgB,eACtEzf,QAAS,WACPH,EAAS,CACPM,KAAM,4BACNC,QAAS,YAPf,mBAgBSsf,GAAmC,SAAC,GAAD,IAAGpgB,EAAH,EAAGA,QAAH,OAC9C,oCACE,kBAAC,GAAD,CAAuBA,QAASA,IAChC,kBAAC,GAAD,CAAsBA,QAASA,MC7CtBqgB,GAAkC,SAAC,GAAD,IAAGrgB,EAAH,EAAGA,QAAH,OAC7C,kBAACuZ,GAAA,EAAD,CACEhW,QAAQ,YACRhE,MAAM,YACNgI,GAAG,eACHlH,UAAS,UAAKL,EAAQigB,WAAb,YAA2BjgB,EAAQmgB,eAC5C7c,UAAWgE,KALb,YCDWgZ,GAA8B,SAAC,GAAD,IAAGtgB,EAAH,EAAGA,QAAH,OACzC,kBAACqD,EAAA,EAAD,CACEkE,GAAG,IACHjE,UAAWgE,IACXjH,UAAS,UAAKL,EAAQ+W,MAAb,0BAET,0BAAM1W,UAAU,uBAAuBH,MAAO,CAAER,WAAY,IAA5D,gCAGA,kBAAC2D,EAAA,EAAD,CACEC,UAAU,IACVC,QAAQ,YACRgd,QAAM,EACNlgB,UAAWL,EAAQwgB,UAJrB,0E,8BCOEC,GAA+B,SAAC,GAAD,IAAGzgB,EAAH,EAAGA,QAAH,OACnC,oCACE,kBAAC,GAAD,CAAeA,QAASA,IACxB,kBAAC,IAAD,MACG,kBAAM,kBAAC,GAAD,CAAgBA,QAASA,OAElC,kBAAC,IAAD,MAAmB,kBAAM,kBAAC0gB,GAAD,WAiIhBC,GAA0B,SAAC,GAIjC,IAHLC,EAGI,EAHJA,OACAnB,EAEI,EAFJA,iBACAC,EACI,EADJA,WAEM1f,EAlIU,SAAC4gB,GA0HjB,OAzHqB1hB,aAAW,SAAAC,GAAK,gBAAK,CACxCuC,KAAK,aACHG,gBAAiB+e,EAAS,cAAgBzhB,EAAMrC,QAAQ+jB,KAAK,KAE7DC,UAAW,OACXvhB,MAAOJ,EAAMrC,QAAQgF,OAAOC,MAC5B2b,WAAYve,EAAMgD,QAAQ,GAC1Bwb,cAAexe,EAAMgD,QAAQ,GAC7B+J,YAAa,EACb6U,aAAc,EACdpe,OAAQxD,EAAMwD,OAAOqe,OAAS,GAC7B7hB,EAAMkD,YAAYC,GAAG,MAAQ,CAC5B4J,YAAa/M,EAAMgD,QAAQ,GAC3B4e,aAAc5hB,EAAMgD,QAAQ,GAC5Bub,WAAYve,EAAMgD,QAAQ,GAC1Bwb,cAAexe,EAAMgD,QAAQ,KAGjC8e,QAAS,CACP3hB,eAAgB,iBAElByX,OAAK,GACHxX,MAAO,UACPD,eAAgB,SAChBV,YAAa,OACbmiB,aAAc,EACdrD,WAAY,EACZtb,SAAU,WACVT,UAAW,OACXuf,eAAgB,OAChBC,WAAY,uCACZ9hB,SAAU,SACVK,WAAY,GAXT,cAaFP,EAAMkD,YAAYO,KAAK,KAAO,CAC7BvD,SAAU,SACV6O,SAAU,MAfT,cAiBF/O,EAAMkD,YAAYC,GAAG,MAAQ,CAC5BjD,SAAU,SAlBT,cAoBFF,EAAMkD,YAAYC,GAAG,MAAQ,CAC5BjD,SAAU,WArBT,GAwBL+hB,eAAa,GACXhf,SAAU,WACV1D,QAAS,OACT2iB,SAAU,SACVC,KAAM,GAJK,cAKVniB,EAAMkD,YAAYC,GAAG,MAAQ,CAC5Bif,WAAY,MANH,cAQVpiB,EAAMkD,YAAYC,GAAG,MAAQ,CAC5Bif,WAAY,MATH,GAab3B,QAAM,GACJrgB,MAAO,UACP2C,QAAS,EACTqf,WAAY,EACZ3iB,YAAa,GAJT,cAKHO,EAAMkD,YAAYC,GAAG,KAAO,CAC3B1D,YAAa,IANX,cASHO,EAAMkD,YAAYC,GAAG,MAAQ,CAC5B5D,QAAS,SAVP,GAaN8hB,SAAS,aACPnhB,SAAU,UACTF,EAAMkD,YAAYO,KAAK,KAAO,CAC7BvD,SAAU,WAGd4gB,WAAW,aACT1gB,MAAO,WACNJ,EAAMkD,YAAYC,GAAG,MAAQ,CAC5Bif,WAAYpiB,EAAMgD,QAAQ,KAG9B+d,eAAe,aACbqB,WAAYpiB,EAAMgD,QAAQ,IAEzBhD,EAAMkD,YAAYO,KAAK,KAAO,CAC7BlE,QAAS,SAGbohB,kBAAkB,aAChByB,WAAY,EACZxiB,aAAc,OACdS,WAAYL,EAAMrC,QAAQ0kB,QAAQ1hB,KAClCoC,QAAS,GAER/C,EAAMkD,YAAYC,GAAG,KAAO,CAC3B5D,QAAS,SAGbyhB,cAAc,eACXhhB,EAAMkD,YAAYO,KAAK,KAAO,CAC7BlD,WAAY,EACZiC,UAAW,SACX8f,SAAU,OACVvf,QAAS,IAGbwf,MAAO,CACL7f,gBAAiB,4BACjB9C,aAAc,EACdM,SAAU,OACV+K,MAAO,GACP1K,WAAY,EACZwC,QAAS,UACTE,SAAU,WACVc,KAAM,EACNP,OAAQ,MAILgf,GAQS1iB,CAAU2hB,GACpBvC,EAAUC,eAFZ,EAGgBzP,YAAanS,EAASoS,QAAjCE,EAHL,oBAKJ,OACE,kBAAC4S,GAAA,EAAD,CAAOC,QAAQ,EAAOC,UAAU,OAAOtD,IAAKH,GAC1C,kBAAC0D,GAAA,EAAD,CAAQ3f,SAAS,QAAQ/B,UAAWL,EAAQ0B,MAC1C,kBAACsgB,GAAA,EAAD,CAASC,gBAAc,EAAC5hB,UAAWL,EAAQihB,SACzC,kBAAC,GAAD,CACEjhB,QAASA,EACTyf,iBAAkBA,EAClBC,WAAYA,IAEd,kBAACnhB,EAAA,EAAD,CAAK8B,UAAWL,EAAQohB,eACtB,yBAAK/gB,UAAWL,EAAQ0hB,OAAxB,QACA,kBAAC,GAAD,CAAW1hB,QAASA,MAEpBgP,GAAW,kBAAC,GAAD,CAAYhP,QAASA,Q,wEClKtCf,GAAYC,aAAW,SAAAC,GAAK,MAAK,CAErC+iB,kBAAmB,CACjB,YAAa,CACXtE,OAAQ,UACR/b,gBAAiB1C,EAAMrC,QAAQ0C,WAAWoC,QAG9CugB,SAAU,CACRvjB,YAAaO,EAAMgD,QAAQ,IAE7BigB,OAAQ,CAGNlgB,QAAS,EACTqf,WAAY,OAIT,SAASb,KAAmB,IAAD,EACA/a,IAAMC,SAA6B,MADnC,mBACzBC,EADyB,KACfC,EADe,KAE1ByK,EAAU8R,cACE5R,EAAmBpS,qBAAWC,IAAxCiC,SACUiQ,EAAiBnS,qBAAW0V,IAAtCxT,SACFP,EAAUf,KAKVoH,EAAc,WAClBP,EAAY,OAGd,OACE,6BACE,kBAACQ,EAAA,EAAD,CACEwP,aAAW,0BACXvP,gBAAc,cACdC,gBAAc,OACd9F,QAdc,SAACC,GACnBmF,EAAYnF,EAAM8F,gBAcdpG,UAAWL,EAAQoiB,QAEnB,kBAAC,KAAD,OAEF,kBAAC,KAAD,CACEzb,GAAG,kBACHd,SAAUA,EACVyc,aAAW,EACXC,sBAAoB,EACpB3b,KAAMC,QAAQhB,GACdiB,QAAST,GAOT,kBAACmc,GAAA,EAAD,CAAUniB,UAAWL,EAAQkiB,kBAAmB7a,SAAO,GACrD,kBAACob,GAAA,EAAD,CACEpiB,UAAWL,EAAQkiB,kBACnBV,QACE,oCACE,kBAACne,EAAA,EAAD,CACEE,QAAQ,YACRhE,MAAM,gBACNmjB,cAAY,GAHd,gBAOA,kBAAC,IAAD,MACG,qBAAG3T,KAAgBiB,aAM9B,kBAACwS,GAAA,EAAD,CACE9hB,QAAS,WACP2F,IACAiK,GAAOC,EAASC,EAAcC,KAGhC,kBAAC,KAAD,CAAepR,SAAS,QAAQgB,UAAWL,EAAQmiB,WACnD,kBAACM,GAAA,EAAD,CAAcjB,QAAQ,cChGzB,IAAMviB,GAAYC,aAAW,SAAAC,GAAK,YAAK,CAC5CuC,KAAM,CAGJ,0BAA2B,CACzBG,gBAAiBlF,EACjBc,YAAad,EACbgmB,YAAa,QACbjlB,YAAaf,EACboC,aAAc,OACdP,MAAO,OACPC,OAAQ,SAGZmkB,YAAY,aACVlkB,QAAS,OACTG,WAAY,SACZS,eAAgB,WAChB4C,QAAS,SACN/C,EAAM0jB,OAAO5B,SAElB6B,aAAc3jB,EAAM0jB,OAAO5B,QAC3B8B,SAAO,GACLrkB,QAAS,OACTuD,SAAU,OACVtC,UAAW,QACX4C,aAAcpD,EAAMgD,QAAQ,IAJvB,cAKJhD,EAAMkD,YAAYC,GAAG,MAAQ,CAC5B4L,SAAU/O,EAAMkD,YAAY2gB,OAAOvK,KANhC,cAQJtZ,EAAMkD,YAAYC,GAAG,MAAQ,CAC5B4L,SAAU/O,EAAMkD,YAAY2gB,OAAOC,KAThC,GAYP3K,UAAW,CACToF,WAAYve,EAAMgD,QAAQ,GAC1Bwb,cAAexe,EAAMgD,QAAQ,IAE/BP,MAAO,CACLM,QAAS/C,EAAMgD,QAAQ,GACvBzD,QAAS,OACTuD,SAAU,OACVD,cAAe,UAEjBkhB,YAAa,CACXzkB,OAAQ,SCpCC0kB,GAAgC,SAAC,GAAkB,IAAhBjP,EAAe,EAAfA,SACxClU,EAAUf,KACV2hB,EAAoC,MAA3BwC,cAAcC,SAFgC,EAGtBzd,oBAAkB,GAHI,mBAGtD8Z,EAHsD,KAG1CD,EAH0C,KAK7D,OACE,yBAAKpf,UAAWL,EAAQ0B,MACtB,kBAAC,GAAD,CACEkf,OAAQA,EACRlB,WAAYA,EACZD,iBAAkBA,IAEpB,yBAAK9Y,GAAG,uBACPia,EACC1M,EAEA,kBAACgI,EAAA,EAAD,CAAW5Y,UAAU,OAAOjD,UAAWL,EAAQ+iB,SAC5C7O,EACD,kBAAC,GAAD,OAGJ,kBAAC,GAAD,CACEwL,WAAYA,EACZD,iBAAkBA,GAElB,kBAAC,GAAD,S,SC3BK6D,GAAyC,SAAC,GAIhD,IAHL5D,EAGI,EAHJA,WACAD,EAEI,EAFJA,iBACAvL,EACI,EADJA,SAEM/U,EAAQqL,eAMd,OALgCE,aAAcvL,EAAMkD,YAAYC,GAAG,OAM1D,oCAAG4R,GAIV,kBAACqP,GAAA,EAAD,CAAQ3c,KAAM8Y,EAAY5Y,QAAS,kBAAM2Y,GAAiB,KACxD,yBACET,KAAK,eACLte,QAAS,kBAAM+e,GAAiB,IAChC+D,UAAW,kBAAM/D,GAAiB,KAEjCvL,K,4ICdH1I,GAAM,mCACNuL,GAAQ,6CACR0M,GACJ,sEAKIC,GAAoB,CACxB,kBAACC,GAAA,EAAD,CAAqBnY,IAAKA,GAAKoY,MAAOH,IACpC,kBAACI,GAAA,EAAD,CAAc1lB,KAAM,GAAI2lB,OAAK,KAE/B,kBAACC,GAAA,EAAD,CAAoBvY,IAAKA,GAAKuL,MAAK,UAAKA,GAAL,YAAc0M,KAC/C,kBAACO,GAAA,EAAD,CAAa7lB,KAAM,GAAI2lB,OAAK,KAE9B,kBAACG,GAAA,EAAD,CAAqBzY,IAAKA,GAAKuL,MAAOA,IACpC,kBAACmN,GAAA,EAAD,CAAc/lB,KAAM,GAAI2lB,OAAK,KAE/B,kBAACK,GAAA,EAAD,CACE3Y,IAAKA,GACLuL,MAAOA,GACP0M,QAASA,GACTW,OAhBqB,gCAkBrB,kBAACC,GAAA,EAAD,CAAclmB,KAAM,GAAI2lB,OAAK,KAE/B,kBAACQ,GAAA,EAAD,CAAsB9Y,IAAKA,GAAKuL,MAAOA,GAAOwN,MArB9C,wvBAsBE,kBAACC,GAAA,EAAD,CAAermB,KAAM,GAAI2lB,OAAK,KAEhC,kBAACW,GAAA,EAAD,CAAmBjZ,IAAKA,GAAKuL,MAAOA,IAClC,kBAAC2N,GAAA,EAAD,CAAYvmB,KAAM,GAAI2lB,OAAK,KAE7B,kBAACa,GAAA,EAAD,CAAkBnZ,IAAKA,GAAKoZ,QAAS7N,GAAOjC,KAAM2O,IAChD,kBAACoB,GAAA,EAAD,CAAW1mB,KAAM,GAAI2lB,OAAK,MAIjBgB,GAAmB,WAC9B,OACE,kBAAChhB,EAAA,EAAD,CACEwU,WAAS,EACTnW,QAAS,EACToW,QAAQ,SACRwM,KAAK,SACLlmB,WAAW,UAEV6kB,GAAkBlf,KAAI,SAACT,EAAM0I,GAAP,OACrB,kBAAC3I,EAAA,EAAD,CAAMW,IAAKgI,EAAG1I,MAAI,GACfA,Q,qBC5DL9E,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9C6lB,SAAS,eACN7lB,EAAMkD,YAAYO,KAAK,KAAO,CAAElE,QAAS,SAE5CumB,eAAe,aACblmB,aAAc,QACbI,EAAMkD,YAAYC,GAAG,KAAO,CAC3B5D,QAAS,aAKFwmB,GAAwB,WAAO,IAAD,EACTvf,IAAMC,SAA6B,MAD1B,mBAClCC,EADkC,KACxBC,EADwB,KAEnCc,EAAOC,QAAQhB,GACf7F,EAAUf,KAEVkmB,EAAc,SAACxkB,GACnBmF,EAAYnF,EAAM8F,gBAGdJ,EAAc,WAClBP,EAAY,OAGd,OACE,6BACE,kBAACoZ,GAAA,EAAD,CACE/gB,KAAK,QACL2X,aAAW,QACXvW,MAAM,YACN6lB,mBAAiB,YACjB/kB,UAAWL,EAAQilB,eACnBvkB,QAASykB,GAET,kBAAC,KAAD,OAEF,kBAACjG,GAAA,EAAD,CACE3b,QAAQ,WACRpF,KAAK,QACL2X,aAAW,QACXvW,MAAM,YACN6lB,mBAAiB,YACjB/kB,UAAWL,EAAQglB,SACnBtkB,QAASykB,GAET,kBAAC,KAAD,MATF,SAYA,kBAACze,EAAA,EAAD,CACEC,GAAG,YACHd,SAAUA,EACVe,KAAMA,EACNE,QAAST,EACT0P,gBAAiB,CACf/O,SAAU,SACVC,WAAY,SAGd,kBAAC1I,EAAA,EAAD,CAAKmC,QAAS2F,EAAanE,QAAS,GAClC,kBAAC,GAAD,U,wCCjDJjD,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CkmB,UAAW,CACT5D,SAAU,IAEZ6D,cAAe,CACb5mB,QAAS,OACTsD,cAAe,SACf1C,eAAgB,SAChBT,WAAY,cAIH0mB,GAAoC,SAAC,GAM3C,IALLrR,EAKI,EALJA,SACA6C,EAII,EAJJA,MACAyO,EAGI,EAHJA,cAGI,IAFJC,kBAEI,SADJ3e,EACI,EADJA,QAEM9G,EAAUf,KADZ,EAEoB2G,oBAAS,GAF7B,mBAEGgB,EAFH,KAES8e,EAFT,KAIErf,EAAc,WAClBqf,GAAQ,GAEJ5e,GACFA,KAIJ,OACE,kBAAC6e,GAAA,EAAD,CACE/e,KAAMA,EACN6e,WAAYA,EACZG,kBAAgB,oBAChB9e,QAAST,EACTyS,WAAS,GAET,kBAAC+M,GAAA,EAAD,CAAalf,GAAG,qBAAqBoQ,GACrC,kBAAC+O,GAAA,EAAD,CAAeC,UAAQ,EAAC1lB,UAAWL,EAAQslB,eACxCpR,GAEH,kBAAC8R,GAAA,EAAD,KACGR,EAAgBA,IAAkB,KACnC,kBAACjM,GAAA,EAAD,CACElZ,UAAWL,EAAQqlB,UACnB3kB,QAAS,kBAAM2F,KACf9G,MAAM,UACNpB,KAAK,SAJP,Y,+DC/CFc,GAAYC,aAAW,SAAAC,GAC3B,IACM8mB,EAAS,uCAEf,MAAO,CACLC,KAAK,aACHxI,WAAYve,EAAMgD,QAAQ,IACzBhD,EAAMkD,YAAYC,GAAG,MAAQ,CAC5B8H,KAAM,EACNzH,OAAQ,IACRP,SAAU,QACVc,IAAK,MAGTijB,SAAU,CACR1nB,OAdgB,GAehBa,eAAgB,UAElB8mB,YAAa,CACXvnB,WAAY,SACZU,MAAOJ,EAAMrC,QAAQgF,OAAOC,MAC5BrD,QAAS,OACTsD,cAAe,SACf1C,eAAgB,SAChB6hB,WAAY8E,EACZ,QAAS,CAEPI,aAAa,eAAD,OAAiBJ,EAAjB,KACZtd,OAAO,eAAD,OAAiBsd,EAAjB,WAODK,GAAwB,WACnC,IAAMtmB,EAAUf,KAEhB,OACE,kBAAC,IAAD,CAAMoB,UAAWL,EAAQkmB,MACvB,kBAAC9e,EAAA,EAAD,CAAUmf,QAAM,EAACjjB,UAAU,KAAKjD,UAAWL,EAAQmmB,UACjD,kBAAC3lB,EAAA,EAAD,CAAM+G,GAAG,IAAIjE,UAAWkjB,IAAYnmB,UAAWL,EAAQomB,aACrD,kBAAC,KAAD,MACA,kBAAC3D,GAAA,EAAD,CACEjB,QAAS,kBAACne,EAAA,EAAD,CAAYE,QAAQ,aAApB,WAIf,kBAAC6D,EAAA,EAAD,CAAUmf,QAAM,EAACjjB,UAAU,KAAKjD,UAAWL,EAAQmmB,UACjD,kBAAC3lB,EAAA,EAAD,CAAM+G,GAAG,QAAQjE,UAAWkjB,IAAYnmB,UAAWL,EAAQomB,aACzD,kBAAC,KAAD,MACA,kBAAC3D,GAAA,EAAD,CACEjB,QAAS,kBAACne,EAAA,EAAD,CAAYE,QAAQ,aAApB,YAIf,kBAAC6D,EAAA,EAAD,CAAUmf,QAAM,EAACjjB,UAAU,KAAKjD,UAAWL,EAAQmmB,UACjD,kBAAC3lB,EAAA,EAAD,CACE+G,GAAG,UACHjE,UAAWkjB,IACXnmB,UAAWL,EAAQomB,aAEnB,kBAAC,KAAD,MACA,kBAAC3D,GAAA,EAAD,CACEjB,QAAS,kBAACne,EAAA,EAAD,CAAYE,QAAQ,aAApB,cAIf,kBAAC6D,EAAA,EAAD,CAAUmf,QAAM,EAACjjB,UAAU,KAAKjD,UAAWL,EAAQmmB,UACjD,kBAAC3lB,EAAA,EAAD,CACE+G,GAAG,SACHjE,UAAWkjB,IACXnmB,UAAWL,EAAQomB,aAEnB,kBAAC,KAAD,MACA,kBAAC3D,GAAA,EAAD,CACEjB,QAAS,kBAACne,EAAA,EAAD,CAAYE,QAAQ,aAApB,e,oBCrFrB,SAASkjB,GAAMhjB,GACb,OAAO,kBAAC,KAAD,eAAUijB,UAAW,EAAGnjB,QAAQ,UAAaE,IAI/C,ICqEKkjB,GDrECC,GAAqB,WAAO,IAAD,EACVvoB,qBAAWC,IAA/BF,EAD8B,EAC9BA,MAAOmC,EADuB,EACvBA,SADuB,EAEanC,EAAM+W,QAAjDvO,EAF8B,EAE9BA,KAF8B,IAExBgK,eAFwB,MAEd,GAFc,EAEVC,EAFU,EAEVA,SAAUoJ,EAFA,EAEAA,SAEhC4M,EAAsB,SAC1BlmB,EACAmmB,GAEe,cAAXA,GAIA1oB,EAAM+W,QAAQvO,MAChBrG,EAAS,CACPM,KAAM,kBACNC,QAAS,CACP8F,MAAM,EACNgK,QAAS,OAMjB,OACE,kBAACmW,GAAA,EAAD,CACEngB,KAAMA,EACNogB,iBAAkB/M,GAAY,KAC9BnT,QAAS+f,EACTpiB,IAAKmM,GAEL,kBAAC,GAAD,CAAO9J,QAAS+f,EAAqBhW,SAAUA,GAC5CD,K,+BEvBH3R,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9C8nB,YAAa,CACXvoB,QAAS,OACTY,eAAgB,gBAChBT,WAAY,UAEdqoB,YAAa,CACX3nB,MAAOJ,EAAMrC,QAAQ+jB,KAAK,KAC1B3e,QAAS,GAEXilB,YAAa,CACXxnB,UAAWR,EAAMgD,QAAQ,GACzBI,aAAcpD,EAAMgD,QAAQ,IAE9BilB,aAAc,CACZ7F,WAAY,YAaV8F,GAA8B,SAAA5jB,GAAU,IACpCyQ,EAAyCzQ,EAAzCyQ,SAAUlU,EAA+ByD,EAA/BzD,QAAS8G,EAAsBrD,EAAtBqD,QAAYwgB,EADI,aACM7jB,EADN,kCAG3C,OACE,kBAACoiB,GAAA,EAAD,eAAa0B,mBAAiB,GAAKD,EAAnC,CAA0CjnB,UAAWL,EAAQinB,cAC3D,kBAAC5jB,EAAA,EAAD,CAAYE,QAAQ,MAAM2Q,GAC1B,kBAAC5N,EAAA,EAAD,CACEwP,aAAW,QACXzV,UAAWL,EAAQknB,YACnBxmB,QAASoG,GAET,kBAAC,KAAD,SAMK0gB,GAAmB,WAC9B,IAAMxnB,EAAUf,KADoB,EAERZ,qBAAWC,IAA/BF,EAF4B,EAE5BA,MAAOmC,EAFqB,EAErBA,SAMT8F,EAAc,WAClB9F,EAAS,CAAEM,KAAM,cAAeC,SAAS,KAG3C,OACE,6BACE,kBAACyY,GAAA,EAAD,CAAQhW,QAAQ,WAAWhE,MAAM,UAAUmB,QAVvB,WACtBH,EAAS,CAAEM,KAAM,cAAeC,SAAS,MASvC,eAGA,kBAAC6kB,GAAA,EAAD,CACE7e,QAAST,EACTuf,kBAAgB,0BAChBhf,KAAMxI,EAAMgX,YAEZ,kBAAC,GAAD,CACEzO,GAAG,0BACHG,QAAST,EACTrG,QAASA,GAHX,gCAOA,kBAAC8lB,GAAA,EAAD,CAAeC,UAAQ,GACrB,kBAAC1iB,EAAA,EAAD,CAAYokB,MAAM,SAAS/E,cAAY,EAACnf,QAAQ,MAAhD,sEAGA,kBAACF,EAAA,EAAD,CAAYE,QAAQ,QAAQkkB,MAAM,SAAS/E,cAAY,GAAvD,sPAMA,kBAAC5e,EAAA,EAAD,CAAMwU,WAAS,EAACC,QAAQ,UACtB,kBAACgB,GAAA,EAAD,CACEhW,QAAQ,YACRhE,MAAM,YACNmX,UAAQ,sBACRnP,GAAG,eACHjE,UAAWgE,IACX5G,QAAS2F,EACTlI,KAAK,QACLkC,UAAWL,EAAQmnB,aARrB,iBAaF,kBAAC9jB,EAAA,EAAD,CAAYokB,MAAM,SAAS/E,cAAY,EAACnf,QAAQ,aAAhD,+CAC+C,IAC7C,kBAAC/C,EAAA,EAAD,CAAMC,KAAK,qBAAX,mCAGJ,kBAACulB,GAAA,EAAD,KACE,kBAACzM,GAAA,EAAD,CACE7Y,QAAS2F,EACT9G,MAAM,UACNc,UAAWL,EAAQonB,cAHrB,yB,+BCzHGM,GAAiB,WAC5B,OACE,uBAAGrnB,UAAU,eAAeH,MAAO,CAAEb,SAAU,KAC7C,8CADF,yXCiBEsoB,GAAahiB,IAAMiiB,YAAW,SAClCnkB,EACAokB,GAEA,OAAO,kBAACjG,GAAA,EAAD,eAAOE,UAAU,KAAK+F,IAAKA,GAASpkB,OAQvCxE,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9C6O,KAAM,CACJzO,MAAOJ,EAAMrC,QAAQgrB,QAAQhoB,KAC7BlB,YAAa,GAEfmpB,OAAQ,CAGN,+CAAgD,CAC9CrpB,QAAS,OACTG,WAAY,WAGhBymB,cAAe,CAEbhmB,eAAgB,cAElB+H,QAAS,CACP4E,OAAQ9M,EAAMgD,QAAQ,QAIb6lB,GAA8C,SAAAvkB,GACzD,IAAMzD,EAAUf,KACVE,EAAQqL,eACNjK,EAAalC,qBAAWC,IAAxBiC,SACAqG,EAAkBnD,EAAlBmD,KAAM8e,EAAYjiB,EAAZiiB,QACAlY,EAAgBiB,GAAalO,GAAnC6D,KACF6jB,EAAavd,aAAcvL,EAAMkD,YAAYC,GAAG,OAEhD+D,EAAc,WAClBqf,GAAQ,IAGV,OACE,kBAACC,GAAA,EAAD,CACE/e,KAAMA,EACN6e,YAAawC,EACbvR,UAAQ,wBACRwR,mBAAoB,CAAEC,MAAO,IAAKC,KAAM,KACxCC,oBAAqBV,GACrB7gB,QAAST,EACTuf,kBAAgB,2BAChBR,mBAAiB,iCACjB/kB,UAAWL,EAAQ+nB,QAEnB,kBAAClC,GAAA,EAAD,CAAalf,GAAG,4BACd,kBAAC,KAAD,CAAwBtG,UAAWL,EAAQgO,OAD7C,mBAIA,kBAAC8X,GAAA,EAAD,CAAeC,UAAQ,EAAC1lB,UAAWL,EAAQslB,eACzC,kBAAC/mB,EAAA,EAAD,CAAKoD,UAAU,SAASof,aAAc,EAAG7U,YAAa,GACpD,kBAAC7I,EAAA,EAAD,4CACuC,IACpCmK,GAAeA,EAAY9I,OAF9B,4DAMF,kBAAC4jB,GAAA,EAAD,CAAS/kB,QAAQ,SAASlD,UAAWL,EAAQqH,UAC7C,kBAAC9I,EAAA,EAAD,CAAK2D,QAAS,GACZ,kBAAC,GAAD,OAEF,kBAACmB,EAAA,EAAD,CAAYE,QAAQ,MAApB,yBACA,wBAAIlD,UAAU,eAAeH,MAAO,CAAEb,SAAU,GAAI6M,YAAa,KAC/D,yGAIA,2CACe,IACb,uBACE8J,OAAO,SACP3V,UAAU,eACV4V,IAAI,sBACJxV,KAAK,mHAJP,yBAFF,KAYA,oEACwC,IACtC,uBACEuV,OAAO,SACP3V,UAAU,eACV4V,IAAI,sBACJxV,KAAK,mEAJP,kDAFF,KAYA,6HAKF,kBAAC,GAAD,OAEF,kBAACulB,GAAA,EAAD,KACE,kBAACzM,GAAA,EAAD,CAAQ7Y,QAAS2F,EAAa9G,MAAM,WAApC,Y,IChIUL,aAAW,SAAAC,GAAK,MAAK,CACrCopB,eAAgB,CACd1pB,WAAY,SACZyiB,KAAM,EACNhiB,eAAgB,SAChBqC,UAAW,SACXO,QAAQ,GAAD,OAAK/C,EAAMgD,QAAQ,GAAnB,cAA2BhD,EAAMgD,QAAQ,GAAzC,Y,4BCELlD,GAAYC,aAAW,CAC3BwC,KAAM,CACJQ,QAAS,QAEXvC,UAAW,CACTA,UAAW,UAQF6oB,GAAuC,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,kBAAwB,EACnD7iB,mBAAiB,IADkC,mBACtEoK,EADsE,KAC/DgL,EAD+D,OAEzCpV,oBAAkB,GAFuB,mBAEtEgT,EAFsE,KAE1D8P,EAF0D,OAG3B9iB,mBAAiB,IAHU,mBAGtEqV,EAHsE,KAGnDC,EAHmD,OAIrDtV,oBAAkB,GAJmC,mBAItE+iB,EAJsE,KAIhEC,EAJgE,OAK/ChjB,oBAAkB,GAL6B,mBAKtEoJ,EALsE,KAK7D6Z,EAL6D,KAMvE7oB,EAAUf,KAMV6pB,EAAsB,SAAChR,EAAclH,GACzC,OAAQkH,GACN,IAAK,qBACH4Q,GAAc,GACdxN,EAAqB,iBACrB,MACF,IAAK,sBACHwN,GAAc,GACdxN,EAAqB,uBACrB,MACF,QACE6N,MAAMnY,KAUNoY,EAAiB,uCAAG,WAAOroB,GAAP,SAAAwP,EAAA,6DACxBxP,EAAMC,iBALN8nB,GAAc,GACdxN,EAAqB,IAQrB2N,GAAW,GACX7N,EAAS,IANe,SAOlBte,KACHoS,OACAma,uBAAuBjZ,GACvB0E,MAAK,WACA+T,GACFA,IAEFG,GAAQ,GACRM,YAAW,WACTN,GAAQ,KACP,QAEJ7T,OAAM,SAAAsD,GACLyQ,EAAoBzQ,EAAIP,KAAMO,EAAIzH,YApBd,OAsBxBiY,GAAW,GAtBa,2CAAH,sDAyBvB,OACE,kBAAC7kB,EAAA,EAAD,CAAO3D,UAAWL,EAAQ0B,MACxB,6BACE,kBAACoC,EAAA,EAAD,CAAMwU,WAAS,EAACnW,QAAS,EAAGtD,WAAW,YACrC,kBAACiF,EAAA,EAAD,CAAMC,MAAI,EAACkf,IAAE,EAACxK,IAAE,EAACD,GAAI,IACnB,kBAACE,GAAA,EAAD,CACE/R,GAAG,QACHkQ,MAAM,mBACNhW,KAAK,QACLG,MAAOgP,EACP4G,SA5Dc,SAACjW,GACzBqa,EAASra,EAAMqV,OAAOhV,QA4DZ2X,MAAOC,EACPC,WAAYoC,EACZnC,WAAS,EACTC,UAAQ,MAId,kBAACjV,EAAA,EAAD,CACEwU,WAAS,EACTC,QAAQ,SACR1Z,WAAW,SACXwB,UAAWL,EAAQL,WAEnB,kBAACmE,EAAA,EAAD,CAAMC,MAAI,EAACyU,GAAI,IACb,kBAACe,GAAA,EAAD,CACEhW,QAAQ,WACRhE,MAAM,UACNW,MAAO,CAAEipB,cAAe,OAAQvqB,YAAa,QAC7C8B,QAASsoB,EACTxP,SAAUxK,GALZ,iBAUDA,GACC,kBAAClL,EAAA,EAAD,CAAMC,MAAI,EAACyU,GAAI,IACb,kBAACvU,EAAA,EAAD,QAIN,kBAACH,EAAA,EAAD,CAAMwU,WAAS,GACb,kBAACxU,EAAA,EAAD,CAAMC,MAAI,EAACkf,IAAE,EAACxK,IAAE,EAACD,GAAI,IACnB,kBAAC4Q,GAAA,EAAD,CAAM5K,GAAImK,GACR,kBAAClC,GAAA,EAAD,CAAO5V,SAAS,UAAUxQ,UAAWL,EAAQL,WAC3C,kBAAC0pB,GAAA,EAAD,gCADF,6E,qEChIDC,GAAmB,SAACC,GAC/B,IAAMC,EAASD,EAASE,QAAQ,WAAY,OAC5C,OAAOD,EAAOE,OAAO,GAAGC,cAAgBH,EAAOI,MAAM,K,SN8E3CjD,K,oBAAAA,E,cAAAA,E,sCAAAA,E,oBAAAA,E,oBAAAA,E,sBAAAA,E,oBAAAA,E,sBAAAA,E,oBAAAA,E,kCAAAA,E,sBAAAA,E,kBAAAA,E,gBAAAA,E,4BAAAA,E,4BAAAA,E,wBAAAA,E,oBAAAA,E,+BAAAA,Q,KOvDZ,IAAM1nB,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrC8nB,YAAa,CACX/kB,QAAQ,OAAD,OAAS/C,EAAMgD,QAAQ,GAAvB,OAET2I,OAAQ,CACN4S,WAAY,GACZxR,YAAa,IAEf2d,SAAS,aACP3nB,QAAS,GACR/C,EAAMkD,YAAYC,GAAG,MAAQ,CAC5BJ,QAAS/C,EAAMgD,QAAQ,KAG3B2nB,kBAAmB,CACjBnqB,UAAW,GAEboqB,WAAY,CACVxI,WAAY,EACZ3iB,YAAa,GAEfe,UAAW,CACTA,UAAW,IAEbqqB,KAAM,CACJzqB,MAAOJ,EAAMrC,QAAQ+jB,KAAK,UAQjBoJ,GAAmC,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC3ClqB,EAAUf,KADqD,EAEhBZ,qBAAW0V,IAAjD0D,EAFsD,EAE7DrZ,MAA4B+X,EAFiC,EAE3C5V,SAGpB4pB,EAAc7lB,OAAOC,KAAKoiB,IAC1ByD,EAAiBrhB,KAAKshB,MAAMF,EAAYzlB,OAAS,GACjD4lB,EAAkDH,EAAYI,OAClE,EACAH,GAEII,EAAiDL,EAXc,EAYnCvkB,oBAAkB,GAZiB,mBAY9D6kB,EAZ8D,KAYnDC,EAZmD,KAmB/DC,EAAc,WAClB,OAAOrmB,OAAOC,KAAKkT,EAAUjG,UAAU7I,QAErC,SAACmL,GAAD,OAAkB2D,EAAUjG,SAASsC,GAASpC,cAiClD,OACE,oCACI+Y,EAuFA,oCACE,kBAAC5E,GAAA,EAAD,CAAaxlB,UAAWL,EAAQinB,aAAhC,qCAGA,kBAACnB,GAAA,EAAD,CAAeC,UAAQ,GACrB,kBAACjiB,EAAA,EAAD,CAAMwU,WAAS,GACb,kBAAC,KAAD,CAAyBsS,MAAOC,MAC7BF,IAAcnmB,KAAI,SACjBsP,GADiB,OAGjB,oCACE,kBAAChQ,EAAA,EAAD,CAAMC,MAAI,EAACyU,GAAI,GACb,kBAACnV,EAAA,EAAD,CAAYhD,UAAWL,EAAQ8K,QAC5Bwe,GAAiBxV,KAGtB,kBAAChQ,EAAA,EAAD,CAAMC,MAAI,EAACyU,GAAI,GACb,kBAAC,KAAD,CACEnY,UAAWL,EAAQ+pB,WACnBe,gBAAc,EACdvnB,QAAQ,SACRwnB,OAAO,aACP9e,OAAO,SACP4K,MAAM,aACNmU,QAAS,IAAIhmB,KAEbhE,MAAOyW,EAAUjG,SAASsC,GAASnC,UACnCiF,SAAU,SAAA9R,GAAI,OAjJN,SAC5BA,EACAgP,GAEAqC,EAAa,CACXtV,KAAM,yBAENC,QAAS,CAAEgT,QAASA,EAASnC,UAAW7M,KA2IpBmmB,CAAsBnmB,EAAMgP,IAE9BoX,oBAAqB,CACnB,aAAc,kBAIpB,kBAACpnB,EAAA,EAAD,CAAMC,MAAI,EAACyU,GAAI,GACb,kBAAC,KAAD,CACEnY,UAAWL,EAAQ+pB,WACnBe,gBAAc,EACdvnB,QAAQ,SACRwnB,OAAO,aACP9e,OAAO,SACP4K,MAAM,WAENsU,QAAS1T,EAAUjG,SAASsC,GAASnC,UACrCqZ,QAAS,IAAIhmB,KAEbhE,MAAOyW,EAAUjG,SAASsC,GAASlC,QACnCgF,SAAU,SAAA9R,GAAI,OA3JR,SAC1BA,EACAgP,GAEAqC,EAAa,CACXtV,KAAM,uBAENC,QAAS,CAAEgT,QAASA,EAASlC,QAAS9M,KAqJlBsmB,CAAoBtmB,EAAMgP,aAQxC,kBAAChQ,EAAA,EAAD,CAAMwU,WAAS,EAACC,QAAQ,UACtB,kBAACzU,EAAA,EAAD,CAAMC,MAAI,GACR,kBAACwV,GAAA,EAAD,CACEpb,KAAK,QACLuC,QAAS,kBAAMgqB,GAAcD,IAC7BlnB,QAAQ,YAHV,2BAjJR,oCACE,kBAACsiB,GAAA,EAAD,CAAalf,GAAG,qBAAhB,2BAGA,kBAACmf,GAAA,EAAD,CAAeC,UAAQ,GACrB,kBAACjiB,EAAA,EAAD,CAAMwU,WAAS,GACb,kBAACxU,EAAA,EAAD,CAAMC,MAAI,EAACyU,GAAI,GACZ8R,EAAkB9lB,KAAI,SAACsP,EAASuX,GAAV,OACrB,kBAACC,GAAA,EAAD,CAAW7mB,IAAK4mB,GACd,kBAAC/U,GAAA,EAAD,CACEC,QACE,kBAACC,GAAA,EAAD,CACErY,KAAK,QACLkC,UAAWL,EAAQ6pB,SACnBlT,QAASc,EAAUjG,SAASsC,GAASpC,UACrCkF,SAAU,kBACRT,EAAa,CACXtV,KAAM,iBACNC,QAAS6lB,GAAS7S,MAGtB2C,KAAMkQ,GAAS7S,GACfvU,MAAM,YAGVsX,MAAOyS,GAAiB3C,GAAS7S,WAKzC,kBAAChQ,EAAA,EAAD,CAAMC,MAAI,EAACyU,GAAI,GACZgS,EAAiBhmB,KAAI,SAACsP,EAASuX,GAAV,OACpB,kBAACC,GAAA,EAAD,CAAW7mB,IAAK4mB,GACd,kBAAC/U,GAAA,EAAD,CACEC,QACE,kBAACC,GAAA,EAAD,CACErY,KAAK,QACLkC,UAAWL,EAAQ6pB,SACnBlT,QAASc,EAAUjG,SAASsC,GAASpC,UACrCkF,SAAU,kBACRT,EAAa,CACXtV,KAAM,iBACNC,QAAS6lB,GAAS7S,MAGtB2C,KAAMkQ,GAAS7S,GACfvU,MAAM,YAGVsX,MAAOyS,GAAiB3C,GAAS7S,YAM3C,kBAAChQ,EAAA,EAAD,CACEwU,WAAS,EACTC,QAAQ,SACRpW,QAAS,EACT9B,UAAWL,EAAQ8pB,mBAEnB,kBAAChmB,EAAA,EAAD,CAAMC,MAAI,GACR,kBAACwV,GAAA,EAAD,CACEpb,KAAK,QACLoB,MAAM,UACNgE,QAAQ,WACR7C,QAAS,kBA3EvByV,EAAa,CACXtV,KAAM,wBAERqpB,EAAc,KAoEF,uBASF,kBAACpmB,EAAA,EAAD,CAAMC,MAAI,GACR,kBAACwV,GAAA,EAAD,CACEpb,KAAK,QACLuC,QAAS,kBAAMgqB,GAAcD,IAC7BlrB,MAAM,YACNgE,QAAQ,YACRiW,UAAWiR,KAxHlBE,IAAcjmB,OAAS,IAmHlB,2B,4DCxKVzF,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrC8nB,YAAa,CACX/kB,QAAQ,OAAD,OAAS/C,EAAMgD,QAAQ,GAAvB,OAETopB,SAAU,CACR5rB,UAAW,IAEb6rB,SAAU,CACRjpB,aAAc,IAEhBwnB,WAAY,CACVxnB,aAAc,IAEhBkpB,UAAW,CACT9rB,UAAWR,EAAMgD,QAAQ,QAShBupB,GAAmC,SAAC,GAG1C,IAFLjU,EAEI,EAFJA,UACAtB,EACI,EADJA,aAEMnW,EAAUf,KA+BhB,OACE,oCACE,kBAAC4mB,GAAA,EAAD,CAAalf,GAAG,oBAAoBtG,UAAWL,EAAQinB,aAAvD,gBAGA,kBAACnB,GAAA,EAAD,CAAeC,UAAQ,GACrB,kBAACjiB,EAAA,EAAD,CAAMwU,WAAS,GACb,kBAACqT,GAAA,EAAD,KACE,kBAAC,KAAD,CAAyBf,MAAOC,MAC9B,kBAACe,GAAA,EAAD,CACEvrB,UAAWL,EAAQ+pB,WACnB8B,MAAO,CAAC,OAAQ,SAChB7qB,MAxBY,WACxB,IAAM8qB,EAAQrU,EAAU1E,WAClBgZ,EAAOtU,EAAUzE,UACvB,GAAI8Y,GAASC,EAAM,CACjB,IAAMjnB,EAAO,IAAIE,KAGjB,OAFAF,EAAKknB,YAAYD,GACjBjnB,EAAKmnB,SAASH,EAAQ,GACfhnB,EAET,OAAO,KAeYonB,GACPtV,SApCU,SAAC9R,GACvB,GAAIA,EAAM,CACR,IAAMgnB,EAAQhnB,EAAKqnB,WAAa,EAC1BJ,EAAOjnB,EAAKsnB,cAClBjW,EAAa,CACXtV,KAAM,iBACNC,QAAS,CAAEiS,WAAY+Y,EAAO9Y,UAAW+Y,OA+BjCf,QAAS,IAAIhmB,KACb6R,MAAM,sBAGV,kBAACwV,GAAA,EAAD,CAAWhsB,UAAWL,EAAQyrB,WAA9B,sCAGA,kBAACa,GAAA,EAAD,CACEC,KAAG,EACHvrB,MAAOwrB,OAAO/U,EAAUpE,QACxBuD,SAAU,SAAAjW,GACRwV,EAAa,CACXtV,KAAM,aACNC,QAAgC,SAAvBH,EAAMqV,OAAOhV,UAI1B,kBAACsV,GAAA,EAAD,CACEI,UAAQ,mBACRH,QAAS,kBAACkW,GAAA,EAAD,CAAOzrB,MAAM,SACtB6V,MAAM,QAER,kBAACP,GAAA,EAAD,CACEI,UAAQ,kBACRH,QAAS,kBAACkW,GAAA,EAAD,CAAOzrB,MAAM,UACtB6V,MAAM,SAIXY,EAAUpE,QACT,oCACE,kBAACvP,EAAA,EAAD,CAAMC,MAAI,EAACyU,GAAI,IACb,kBAACkU,GAAA,EAAD,CACE/lB,GAAG,2BACHtG,UAAWL,EAAQurB,UAFrB,mBAMA,kBAACoB,GAAA,EAAD,CACEC,QAAQ,2BACRjmB,GAAG,qBACH3F,MAAOyW,EAAUnE,eACjBjT,UAAWL,EAAQwrB,SACnB5U,SAAU,SAAAjW,GAAK,OACbwV,EAAa,CACXtV,KAAM,uBACNC,QAASH,EAAMqV,OAAOhV,UAI1B,kBAACwhB,GAAA,EAAD,CAAUxhB,MAAO,GAAjB,OACA,kBAACwhB,GAAA,EAAD,CAAUxhB,MAAO,GAAjB,OACA,kBAACwhB,GAAA,EAAD,CAAUxhB,MAAO,GAAjB,WAGJ,kBAAC2qB,GAAA,EAAD,KACE,kBAACU,GAAA,EAAD,CAAWhsB,UAAWL,EAAQyrB,WAA9B,0BAGA,kBAACa,GAAA,EAAD,CACEC,KAAG,EACHvrB,MAAOwrB,OAAO/U,EAAUlE,gBACxBqD,SAAU,SAAAjW,GACRwV,EAAa,CACXtV,KAAM,sBACNC,QAAgC,SAAvBH,EAAMqV,OAAOhV,UAI1B,kBAACsV,GAAA,EAAD,CACEC,QAAS,kBAACkW,GAAA,EAAD,CAAOzrB,MAAM,SACtB6V,MAAM,QAER,kBAACP,GAAA,EAAD,CACEC,QAAS,kBAACkW,GAAA,EAAD,CAAOzrB,MAAM,UACtB6V,MAAM,WAMM,IAArBY,EAAUpE,QACT,kBAACvP,EAAA,EAAD,CAAMC,MAAI,EAACyU,GAAI,IACb,kBAACmT,GAAA,EAAD,KACE,kBAACU,GAAA,EAAD,CAAWhsB,UAAWL,EAAQyrB,WAA9B,8BAGA,kBAACa,GAAA,EAAD,CACEC,KAAG,EACHvrB,MAAOwrB,OAAO/U,EAAUjE,eACxBoD,SAAU,SAAAjW,GACRwV,EAAa,CACXtV,KAAM,qBACNC,QAAgC,SAAvBH,EAAMqV,OAAOhV,UAI1B,kBAACsV,GAAA,EAAD,CACEC,QACE,kBAACkW,GAAA,EAAD,CAAO/V,UAAQ,qBAAqB1V,MAAM,SAE5C6V,MAAM,QAER,kBAACP,GAAA,EAAD,CACEC,QACE,kBAACkW,GAAA,EAAD,CAAO/V,UAAQ,oBAAoB1V,MAAM,UAE3C6V,MAAM,WAMa,IAA5BY,EAAUjE,eACT,kBAACmY,GAAA,EAAD,KACE,kBAACU,GAAA,EAAD,CAAWhsB,UAAWL,EAAQyrB,WAA9B,gCAGA,kBAACa,GAAA,EAAD,CACEC,KAAG,EACHvrB,MAAOwrB,OAAO/U,EAAUhE,iBACxBmD,SApKmB,SAC/BjW,GAEAwV,EAAa,CAAEtV,KAAM,uBAAwBC,QAASH,EAAMqV,OAAOhV,UAmKvD,kBAACsV,GAAA,EAAD,CACEC,QAAS,kBAACkW,GAAA,EAAD,CAAOzrB,MAAM,cACtB6V,MAAM,uBAER,kBAACP,GAAA,EAAD,CACEC,QAAS,kBAACkW,GAAA,EAAD,CAAOzrB,MAAM,iBACtB6V,MAAM,iBAER,kBAACP,GAAA,EAAD,CACEC,QAAS,kBAACkW,GAAA,EAAD,CAAOzrB,MAAM,aACtB6V,MAAM,kC,+BCpNlB5X,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrC8nB,YAAa,CACX/kB,QAAQ,OAAD,OAAS/C,EAAMgD,QAAQ,GAAvB,OAET0qB,WAAY,CACV3qB,QAAQ,OAAD,OAAS/C,EAAMgD,QAAQ,GAAvB,WAIE2qB,GAA0B,WACrC,IAAM9sB,EAAUf,KAD2B,EAEUZ,qBAAW0V,IAAjD0D,EAF4B,EAEnCrZ,MAA4B+X,EAFO,EAEjB5V,SAgE1B,OACE,oCACE,kBAACslB,GAAA,EAAD,CAAaxlB,UAAWL,EAAQinB,aAAhC,4CAGA,kBAACnB,GAAA,EAAD,CAAeC,UAAQ,GACrB,kBAAC,KAAD,CACE/kB,MAAOyW,EAAUtJ,QACjByI,SAAU,SAAA5V,GAAK,OACbmV,EAAa,CACXtV,KAAM,cACNC,QAASE,KAGb+rB,SA5EoB,SAACC,GAC3BC,4BAAiBD,GACdtY,MAAK,SAACwY,GACL,IAAMC,EAKF,CACFla,KAAM,KACNC,OAAQ,KACR9U,MAAO,KACP+U,QAAS,MAwCX,OA/BA+Z,EAAQ,GAAGE,mBAAmBlQ,SAAQ,SAAC5Z,GAAoB,IACjD+pB,EAAqB/pB,EAArB+pB,MAAOC,EAAchqB,EAAdgqB,UAKbD,EAAME,SAAS,aACfF,EAAME,SAAS,iBACfF,EAAME,SAAS,oBACfF,EAAME,SAAS,gBACfF,EAAME,SAAS,wBACfF,EAAME,SAAS,wBACfF,EAAME,SAAS,wBACfF,EAAME,SAAS,wBACfF,EAAME,SAAS,uBAEfJ,EAAkBla,KAAOqa,EAChBD,EAAME,SAAS,+BACxBJ,EAAkB/uB,MAAQkvB,EACjBD,EAAME,SAAS,+BACxBJ,EAAkBja,OAASoa,EAClBD,EAAME,SAAS,aACxBJ,EAAkBha,QAAUma,MAIhCnX,EAAa,CACXtV,KAAM,yBACNC,QAASqsB,IAGJD,KAERxY,MAAK,SAACwY,GAAD,OAAkBM,qBAAUN,EAAQ,OACzCxY,MAAK,SAAC+Y,GACLtX,EAAa,CAAEtV,KAAM,cAAeC,QAASksB,IAC7C7W,EAAa,CAAEtV,KAAM,eAAgBC,QAAS2sB,OAE/C1Y,MAAMgU,QAsBH2E,cAAe,CAAEL,MAAO,CAAC,YACzBM,SAAU,IACVC,yBACInW,EAAUtJ,SAAWsJ,EAAUtJ,QAAQzJ,OAAS,IAGnD,gBACCmpB,EADD,EACCA,cACAC,EAFD,EAECA,YACAC,EAHD,EAGCA,uBACA/e,EAJD,EAICA,QAJD,OAMC,oCACE,kBAAC0J,GAAA,EAAD,eACEhC,UAAQ,YACJmX,EAAc,CAChBhV,WACE,mDACFmV,YAAa,sBACb3tB,UAAW,4BAGf,yBAAKA,UAAU,mCACZ2O,GAAW,2CACX8e,EAOEnlB,QACC,SAAAslB,GAAU,OACP,CACC,8BACA,8BACA,UACA,cACA,UACA,iBACA,cACAV,SAASU,EAAWZ,MAAM,OAE/B7oB,KAAI,SAAAypB,GACH,IAAM5tB,EAAY4tB,EAAWhuB,OACzB,0BACA,kBAGEC,EAAQ+tB,EAAWhuB,OACrB,CAAE4B,gBAAiBgf,KAAK,KAAQjD,OAAQ,WACxC,CAAE/b,gBAAiB,UAAW+b,OAAQ,WAE1C,OACE,uCACElH,UAAA,uBACIqX,EAAuBE,EAAY,CACrC5tB,YACAH,WAGF,8BAAO+tB,EAAWC,yBCjK7BC,GAAuB,WAClC,OACE,oCACE,kBAACtI,GAAA,EAAD,eACA,kBAACC,GAAA,EAAD,CAAeC,UAAQ,GACrB,kBAAC,IAAD,MACG,gBAAGhX,EAAH,EAAGA,KAAH,OACC,yBAAK1O,UAAU,eAAeH,MAAO,CAAEyB,UAAW,WAChD,wBAAIzB,MAAO,CAAEkuB,WAAY,WAAzB,2BAC0B,qCAD1B,sCAIA,uBACEluB,MAAO,CAAEb,SAAU,UAAWkiB,WAAY,GAAI3iB,YAAa,KAD7D,wBAGwBmQ,EAAKiB,MAH7B,kDAImB,qCAJnB,6BASN,kBAAC,IAAD,MAAqB,kBAAM,kBAAC,GAAD,YCS7B/Q,GAAYC,aAAW,SAAAC,GAAK,MAAK,CAErCkvB,QAAS,CACPnsB,QAAQ,YAAD,OAAc/C,EAAMgD,QAAQ,GAA5B,WAQEmsB,GAAwB,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,mBAChCvuB,EAAUf,KACVE,EAAQqL,eACR+F,EAAU8R,cAH+C,EAIhDxT,YAAanS,EAASoS,QAA9BC,EAJwD,sBAK3BnJ,mBAAiB,GALU,mBAKxD4oB,EALwD,KAK5CtE,EAL4C,OAM3BtkB,oBAAkB,GANS,mBAMxDyR,EANwD,KAM5CC,EAN4C,OAU3DjZ,qBAAW0V,IAFNgG,EARsD,EAQ7D3b,MACUqwB,EATmD,EAS7DluB,SAEMA,EAAalC,qBAAWC,IAAxBiC,SAXuD,EAYjB4T,qBAC5CoD,GACAC,IAd6D,mBAYxDkX,EAZwD,KAYvCC,EAZuC,KAgBzDC,EA9BC,CAAC,WAAY,QAAS,WAAY,UA+BnC3G,EAAavd,aAAcvL,EAAMkD,YAAYC,GAAG,OAkChDusB,EAAkB,uCAAG,WAAOC,GAAP,eAAA3e,EAAA,0DACrB2e,EADqB,0CAGCA,EAAara,YAAW,GAHzB,cAGfsa,EAHe,OAIrBzX,GAAc,GAJO,SAKf8E,GAAarC,EAAmBgV,GALjB,OAMrBxe,EAAQI,KAAK,KACb4d,GAAmB,GAPE,kDASrBhuB,EAAS,CACPM,KAAM,kBACNC,QAAS,CACP8F,MAAM,EACNgK,QAAS,sDACTC,SAAU,WAGdyG,GAAc,GAjBO,0DAAH,sDAsBlBL,EAAoB,SAACa,EAAclH,GACvC,OAAQkH,GACN,IAAK,4BACH6W,EAAmB,CACjB9tB,KAAM,YACNC,QAAS,CACP2H,MAAO,aACPzH,MAAO,kCAGX,MACF,IAAK,qBACH2tB,EAAmB,CACjB9tB,KAAM,YACNC,QAAS,CACP2H,MAAO,aACPzH,MAAO,mBAGX,MAEF,IAAK,+BACH,MACF,QACET,EAAS,CACPM,KAAM,kBACNC,QAAS,CACP8F,MAAM,EACNgK,UACAC,SAAU,QACVoJ,SAAU,UAOd+U,EAAY,uCAAG,8BAAA7e,EAAA,mEAEbpB,EAFa,gCAGT8f,EAAmB9f,GAHV,8CAOTgB,GACJ2e,EAAgB1e,MAChB0e,EAAgBze,SAChBye,EAAgB7W,WAVH,cAafP,GAAc,GAbC,EAcS5a,EAASoS,OAAzBmgB,EAdO,EAcPA,YAdO,UAeTJ,EAAmBI,GAfV,0DAkBjB3X,GAAc,GACdL,EAAkB,KAAIa,KAAM,KAAIlH,SAnBf,0DAAH,qDA2DlB,OACE,kBAAC+U,GAAA,EAAD,CACE/e,MAAI,EACJgf,kBAAgB,oBAChB9M,WAAS,EACT2M,YAAawC,GAEb,kBAACiH,GAAA,EAAD,CAASV,WAAYA,EAAYnuB,UAAWL,EAAQquB,SACjDO,EAAMpqB,KAAI,SAAAqS,GACT,IACMsY,EAA6C,GACnD,OACE,kBAACC,GAAA,EAAD,eAAM3qB,IAAKoS,GAH8B,IAIvC,kBAACwY,GAAA,EAAcF,EAAatY,QAjCpB,SAACyY,GACnB,OAAQA,GACN,KAAK,EACH,OAAO,kBAAC,GAAD,CAAapF,cAAeA,IACrC,KAAK,EACH,OACE,kBAAC,GAAD,CACEzS,UAAWsC,EACX5D,aAAcsY,IAGpB,KAAK,EACH,OAAO,kBAAC,GAAD,MACT,KAAK,EACH,OAAO,kBAAC,GAAD,MACT,QACE,OAAO,MAsBRc,CAAYf,GACb,kBAACxI,GAAA,EAAD,KACE,kBAAC,IAAD,MACG,kBACC,iDACmB,kBAAC,GAAD,UAIvB,kBAACzM,GAAA,EAAD,CAAQpb,KAAK,QAAQoJ,GAAG,IAAIjE,UAAWgE,IAAW/H,MAAM,WAAxD,UAGA,kBAACga,GAAA,EAAD,CACEpb,KAAK,QACLuC,QAjLW,WACjBwpB,GAAc,SAAAsF,GAAc,OAAIA,EAAiB,MAiL3CjwB,MAAM,UACNia,SAAyB,IAAfgV,GAAoBnX,GAJhC,QAQCmX,EAAaI,EAAMlqB,OAAS,KAxE/BqK,GACAgL,EAAkBjH,UAClBiH,EAAkBrG,kBAClB8a,IAAeI,EAAMlqB,OAAS,GAsE1B,kBAAC6U,GAAA,EAAD,CACEpb,KAAK,QACLuY,UAAQ,cACRhW,QAhMS,WAEjBwpB,GAAc,SAAAsF,GAAc,OAAIA,EAAiB,MA+LzCjwB,MAAM,YACNgE,QAAQ,YACRiW,SAzLa,SAAC8V,GACtB,OAAQA,GACN,KAAK,EAEH,OACsC,IAApCvV,EAAkBvG,oBACmBvS,IAArC8Y,EAAkBxG,qBACoBtS,IAAtC8Y,EAAkBtG,gBAMtB,KAAK,EACH,OAAQsG,EAAkBjH,SAC5B,KAAK,EACH,OAAQ4b,EAAgBxe,QAC1B,QACE,OAAO,GAuKOuf,CAAejB,IAN3B,QAWA,kBAACjV,GAAA,EAAD,CACEpb,KAAK,QACLuC,QAASsuB,EACTzvB,MAAM,YACNgE,QAAQ,YACRmT,UAAQ,gBACR8C,WAlFJzK,EACKgL,EAAkBrG,iBAEpBqG,EAAkBrG,kBAAoBgb,EAAgBxe,UA+E3BmH,GAExBA,EAAwB,kBAACpT,EAAA,EAAD,CAAkB9F,KAAM,KAAnC,a,iDC7QrBuxB,GAAaC,aAAe,CAChC7yB,QAAS,CACP+D,KAAM,OACN2gB,QAASX,MAEX+O,WAAY,CACVC,WAAY,CACV,aACA,gBACA,qBACA,aACA,SACA,mBACA,QACA,cACAzvB,KAAK,KACPf,SAAU,MAKRywB,GAAoB,aACxB5tB,QAAQ,GAAD,OAAKwtB,GAAWvtB,QAAQ,GAAxB,cAAgCutB,GAAWvtB,QAAQ,GAAnD,OACNutB,GAAWrtB,YAAYC,GAAG,MAAQ,CACjCJ,QAASwtB,GAAWvtB,QAAQ,KAK1B4tB,GAAqB,aACzB7tB,QAAS,YACRwtB,GAAWrtB,YAAYC,GAAG,MAAQ,CACjCJ,QAAS,cAKbwtB,GAAWM,UAAY,CACrBC,SAAU,CAGRvuB,KAAM,CAAEmuB,WAAY,yBAEtBK,UAAW,CAETtuB,MAAO,CACLqK,OAAQ,IAGVkkB,iBAAkB,CAChBC,UAAW,qBAEbC,eAAgB,CACdD,UAAW,oBACX5xB,MAAO,sBAGX8xB,eAAgB,CACd5uB,KAAMquB,IAERQ,iBAAkB,CAChB7uB,KAAMquB,IAERS,iBAAkB,CAChB9uB,KAAK,eACAouB,GADD,CAEFpxB,QAAS,OACTY,eAAgB,SAChB0C,cAAe,SACfkC,UAAW,MAEb6hB,SAAS,eACJ+J,MAKF,IAAMW,GAAYC,aAAW,CAElC,UAAW,CACT,gBAAiB,CACfb,WAAY,wBAGd,0DAA2D,CACzDjxB,YAAa,QAGf,+CAAgD,CAC9C6iB,SAAU,IAEZ,gBAAiB,CACfliB,MAAOmwB,GAAW5yB,QAAQ+C,KAAKC,KAC/BohB,eAAgB,UAhBGwP,EAmBtB,kBAAM,QAEIvxB,GAAQwxB,aAAoBjB,ICvB1BkB,GArDI,WAAO,IAAD,EACuBhrB,oBAAkB,GADzC,mBAChBirB,EADgB,KACCtC,EADD,KAGvB,OAEE,kBAAC,IAAD,CAAsB7xB,SAAUA,GAC9B,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAACo0B,EAAA,EAAD,CAAe3xB,MAAOA,IACpB,kBAAC4xB,EAAA,EAAD,MACA,kBAACN,GAAD,MACA,kBAAC,IAAD,CAAQO,SAAUj1B,8FAChB,kBAAC,GAAD,KACE,kBAAC,IAAD,CAAOk1B,KAAK,WACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,mBACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,qBACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,SACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,uBACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,IAAIC,OAAK,GACnB,kBAAC,GAAD,OAEF,kBAAC,GAAD,CACEtqB,KAAMiqB,EACNnL,QAAS6I,IAEX,kBAAC,GAAD,OAGF,kBAAC,GAAD,MACA,kBAAC,IAAD,CAAO0C,KAAK,gBACV,kBAAC,GAAD,CAAO1C,mBAAoBA,WCnE3C4C,IAAS/Y,OACP,kBAAC,IAAMgZ,WAAP,KACE,kBAAC,GAAD,OAEFzS,SAAS0S,eAAe,W","file":"static/js/main.71273402.chunk.js","sourcesContent":["export const MAPBOX_TOKEN = process.env.REACT_APP_MAPBOX_TOKEN;\nexport const CLOUD_HTML_BASE_URL =\n  'https://raw.githubusercontent.com/abettermap/c19-self-report-content/master';\n\nexport const BACKEND_URL = process.env.REACT_APP_BACKEND_URL;\n","import * as firebase from 'firebase';\n\nexport const firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_PROJECT,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport default firebase;\n","// Circular self-reported markers\nexport const SELF_REPORTED_STYLES = {\n  borderColor: 'hsl(39, 100%, 40%)',\n  fillColor: 'hsl(39, 100%, 50%)',\n  borderWidth: 2,\n  borderStyle: 'solid',\n  size: 15,\n};\n\n// Good tool: https://learnui.design/tools/data-color-picker.html#single\nexport const countriesSymbology = {\n  total_confirmed: {\n    palette: [\n      '#b0edf3',\n      '#99d7de',\n      '#83c2c9',\n      '#6caeb4',\n      '#5699a0',\n      '#3f858c',\n      '#267279',\n      '#005f66',\n    ],\n    ranges: [100, 500, 2500, 12500, 62500, 312500],\n  },\n  total_deaths: {\n    palette: [\n      '#fff5f0',\n      '#fee0d2',\n      '#fcbba1',\n      '#fc9272',\n      '#fb6a4a',\n      '#ef3b2c',\n      '#cb181d',\n      '#99000d',\n    ],\n    ranges: [625, 1250, 2500, 5000, 10000, 20000],\n  },\n  total_recovered: {\n    palette: [\n      '#f7fcf5',\n      '#e5f5e0',\n      '#c7e9c0',\n      '#a1d99b',\n      '#74c476',\n      '#41ab5d',\n      '#238b45',\n      '#005a32',\n    ],\n    ranges: [78.125, 312.5, 1250, 5000, 20000, 80000],\n  },\n};\n\n// TODO: wire up the colors\nexport const tickersConfig = {\n  selfReported: {\n    defText: 'Number of individuals who have reported their data on this site',\n    heading: 'Self-reported',\n    omitLastUpdated: true,\n    symbol: {\n      alwaysShow: true,\n      borderWidth: SELF_REPORTED_STYLES.borderWidth,\n      borderColor: SELF_REPORTED_STYLES.borderColor,\n      fillColor: SELF_REPORTED_STYLES.fillColor,\n      isCircular: true,\n      colorStops: [],\n    },\n  },\n  recovered: {\n    defText:\n      'Number of individuals clinically confirmed positive for COVID-19 with a test, who have recovered from symptoms',\n    heading: 'Recovered',\n    symbol: {\n      globalStateKey: 'total_recovered',\n      fillColor: '#41ab5d',\n      colorStops: countriesSymbology.total_recovered.palette,\n    },\n  },\n  confirmed: {\n    defText:\n      'Number of individuals clinically confirmed positive for COVID-19 with a test',\n    heading: 'Confirmed',\n    symbol: {\n      globalStateKey: 'total_confirmed',\n      fillColor: '#5699a0',\n      colorStops: countriesSymbology.total_confirmed.palette,\n    },\n  },\n  deaths: {\n    defText:\n      'Number of individuals clinically confirmed positive for COVID-19 with a test, who have died from complications related to illness caused by COVID-19',\n    heading: 'Deaths',\n    symbol: {\n      globalStateKey: 'total_deaths',\n      fillColor: '#ef3b2c',\n      colorStops: countriesSymbology.total_deaths.palette,\n    },\n  },\n};\n","import React, { FC, useContext } from 'react';\nimport { Box } from '@material-ui/core';\n\nimport { LegendSymbolTypes } from './types';\nimport { GlobalContext } from 'components';\n\nexport const LegendSymbol: FC<LegendSymbolTypes> = ({\n  fillColor,\n  borderColor = 'hsl(0, 0%, 89%)',\n  isCircular = false,\n  size = '0.8em',\n  borderWidth = 1,\n  alwaysShow,\n  globalStateKey,\n}) => {\n  const { state } = useContext(GlobalContext);\n\n  return (\n    <Box\n      width={size}\n      height={size}\n      display={\n        alwaysShow || state.activeCountrySymbKey === globalStateKey\n          ? 'flex'\n          : 'none'\n      }\n      marginRight=\"4px\"\n      alignItems=\"center\"\n    >\n      <Box\n        border={borderWidth}\n        borderRadius={isCircular ? '100%' : 0}\n        height=\"100%\"\n        width=\"100%\"\n        bgcolor={fillColor}\n        borderColor={borderColor}\n      />\n    </Box>\n  );\n};\n","import React, { FC, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box } from '@material-ui/core';\n\nimport { LegendSymbolBarTypes } from './types';\nimport { GlobalContext } from 'components';\nimport { SetCountriesSymb } from 'components/ticker-cards';\n\nconst useStyles = makeStyles(theme => ({\n  barLabels: {\n    fontSize: 12,\n    display: 'flex',\n    justifyContent: 'space-between',\n    color: theme.palette.background.default,\n    '& > *': {\n      lineHeight: 1,\n      marginTop: 4,\n    },\n  },\n  tickerFooterLink: {\n    fontSize: 14,\n    color: theme.palette.info.main,\n    display: 'block',\n  },\n}));\n\nexport const LegendSymbolBar: FC<LegendSymbolBarTypes> = ({\n  colorStops,\n  globalStateKey,\n}) => {\n  const classes = useStyles();\n  const { state } = useContext(GlobalContext);\n  const active = state.activeCountrySymbKey === globalStateKey;\n\n  return (\n    <>\n      {active ? (\n        <>\n          <Box display=\"flex\" justifyContent=\"center\">\n            <Box\n              width=\"100%\"\n              height={6}\n              borderRadius={2}\n              style={{\n                backgroundImage: `linear-gradient(to right, ${colorStops.join(\n                  ', '\n                )})`,\n              }}\n            />\n          </Box>\n          <Box className={classes.barLabels}>\n            <span>LOW</span>\n            <span>HIGH</span>\n          </Box>\n        </>\n      ) : (\n        <SetCountriesSymb\n          className={classes.tickerFooterLink}\n          globalStateKey={globalStateKey}\n        />\n      )}\n    </>\n  );\n};\n","import React, { FC, useContext } from 'react';\nimport { Link } from '@material-ui/core';\n\nimport { GlobalContext } from 'components';\nimport { SetCountriesSymbTypes } from './types';\n\nexport const SetCountriesSymb: FC<SetCountriesSymbTypes> = ({\n  className,\n  globalStateKey,\n}) => {\n  const { dispatch } = useContext(GlobalContext);\n\n  const handleClick = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    dispatch({ type: 'SET_COUNTRY_SYMBOLOGY', payload: globalStateKey });\n  };\n\n  return (\n    <Link href=\"#\" className={className} onClick={handleClick}>\n      Show\n    </Link>\n  );\n};\n","import { GeoJSONData } from 'types/api';\n\nexport const prettyPrint = (value: number) => {\n  if (value === undefined) {\n    return 'N/A';\n  }\n\n  return value.toLocaleString(navigator.language, {\n    minimumFractionDigits: 0,\n  });\n};\n\n/** https://www.whatismybrowser.com/guides/the-latest-user-agent/\n * Chrome:\n *  { Chrome: Windows, Mac OS, Linux, Android },\n *  { CriOS: iOS }\n * Firefox:\n *  { Firefox: Windows, Mac OS, Linux, Android },\n *  { FxiOS: iOS}\n * Safari:\n *  { Safari: Mac OS, iOS }\n * IE:\n *  { MSIE: IE 8, IE9, IE10 }\n *  { Trident: IE 11 }\n */\n// FB/Google auth do not work from within iOS FB or LinkedIn in-app \"browsers\"\nexport const isValidUserAgent = () => {\n  const USER_AGENT = navigator.userAgent;\n\n  return (\n    USER_AGENT.indexOf('Chrome') !== -1 ||\n    USER_AGENT.indexOf('CriOS') !== -1 ||\n    USER_AGENT.indexOf('Firefox') !== -1 ||\n    USER_AGENT.indexOf('FxiOS') !== -1 ||\n    USER_AGENT.indexOf('Safari') !== -1 ||\n    USER_AGENT.indexOf('MSIE') !== -1 ||\n    USER_AGENT.indexOf('Trident') !== -1\n  );\n};\n\n// For the ticker card totals...\nexport const calculateTotals = (\n  data: GeoJSONData,\n  initial: {\n    total_confirmed: number;\n    total_deaths: number;\n    total_recovered: number;\n  }\n) => {\n  return data.reduce((sums, thisOne: any) => {\n    const { properties } = thisOne;\n    const { total_confirmed, total_deaths, total_recovered } = properties;\n\n    return {\n      total_confirmed: sums.total_confirmed + (total_confirmed || 0),\n      total_deaths: sums.total_deaths + (total_deaths || 0),\n      total_recovered: sums.total_recovered + (total_recovered || 0),\n    };\n  }, initial);\n};\n","import React, { FC } from 'react';\nimport { Grid, Paper, Typography, CircularProgress } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  RequiredTotalsKeys,\n  TickerTitleTypes,\n  TickerCard,\n  TickerCardTypes,\n} from './types';\nimport { prettyPrint } from 'utils';\nimport {\n  TickerInfoPopover,\n  LegendSymbol,\n  LegendSymbolBar,\n  ToggleLayer,\n} from 'components/ticker-cards';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    textAlign: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.common.white,\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'auto',\n    height: '100%', // fill the grid\n    justifyContent: 'center',\n    // Little more on the top so the \"i\" btn doesn't cover the card heading\n    padding: `${theme.spacing(2)}px ${theme.spacing(1)}px 4px`,\n    position: 'relative',\n    [theme.breakpoints.up('md')]: {\n      marginBottom: theme.spacing(1),\n      width: 135,\n    },\n  },\n  heading: {\n    lineHeight: 1,\n    fontSize: '1rem',\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  tickerVal: {\n    color: theme.palette.common.black,\n    fontSize: '1.9rem',\n    marginBottom: 'auto', // make flexbox align nicely\n    [theme.breakpoints.up('md')]: {\n      fontSize: '2.3rem',\n    },\n  },\n  tickerCardsWrap: {\n    position: 'absolute',\n    zIndex: 400,\n    [theme.breakpoints.down('sm')]: {\n      bottom: 20, // above attribution\n      display: 'grid',\n      gridColumnGap: 6,\n      gridRowGap: 6,\n      gridTemplateColumns: 'repeat(2, 1fr)',\n      right: 6,\n      width: 250,\n    },\n    [theme.breakpoints.up('md')]: {\n      right: theme.spacing(2),\n      top: 115, // past top bar (except on tweeners like iPhone landscape)\n    },\n  },\n  tickerFooterLink: {\n    fontSize: '0.9rem',\n    color: theme.palette.info.main,\n    display: 'block',\n  },\n}));\n\nconst CardTitle: FC<TickerTitleTypes> = ({ heading, renderLegendSymbol }) => {\n  const classes = useStyles();\n\n  return (\n    <Typography\n      component=\"h2\"\n      variant=\"subtitle2\"\n      color=\"primary\"\n      className={classes.heading}\n    >\n      {renderLegendSymbol()}\n      {heading}\n    </Typography>\n  );\n};\n\nconst NotifierCard: FC<TickerCard> = props => {\n  const classes = useStyles();\n  const { number, renderTitle, renderPopover, renderSymbolBar } = props;\n\n  return (\n    <Grid item className={classes.root}>\n      <Paper className={classes.paper}>\n        {renderTitle()}\n        <Typography component=\"h4\" variant=\"h4\" className={classes.tickerVal}>\n          {number ? prettyPrint(number) : <CircularProgress size={30} />}\n        </Typography>\n        <div style={{ minHeight: 24 }}>{renderSymbolBar()}</div>\n        {renderPopover()}\n      </Paper>\n    </Grid>\n  );\n};\n\nexport const TickerCards: FC<TickerCardTypes> = ({ data, config }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.tickerCardsWrap}>\n      {/* TODO: use `keyof` to restrict possible values appropriately */}\n      {Object.keys(config).map((key: string) => {\n        const { heading, defText, symbol, omitLastUpdated } = config[\n          key as RequiredTotalsKeys\n        ];\n\n        return (\n          <NotifierCard\n            key={key}\n            heading={heading}\n            number={data[key as RequiredTotalsKeys]}\n            renderTitle={() => (\n              <CardTitle\n                heading={heading}\n                renderLegendSymbol={() => <LegendSymbol {...symbol} />}\n              />\n            )}\n            renderPopover={() => (\n              <TickerInfoPopover\n                heading={heading}\n                defText={defText}\n                omitLastUpdated={omitLastUpdated}\n              />\n            )}\n            renderSymbolBar={() =>\n              symbol.colorStops.length && symbol.globalStateKey ? (\n                <LegendSymbolBar\n                  footerLinkClassName={classes.tickerFooterLink}\n                  globalStateKey={symbol.globalStateKey}\n                  colorStops={symbol.colorStops}\n                />\n              ) : (\n                <ToggleLayer\n                  visibilityKey={key}\n                  className={classes.tickerFooterLink}\n                />\n              )\n            }\n          />\n        );\n      })}\n    </div>\n  );\n};\n","export const prettyDate = (date: Date) => {\n  const timezoneDate = new Date(\n    date.getTime() - date.getTimezoneOffset() * 60000\n  );\n  return `${timezoneDate.toLocaleDateString()} ${timezoneDate.toLocaleTimeString()}`;\n};\n","import React, { FC } from 'react';\nimport { Link as RouteLink } from 'react-router-dom';\nimport {\n  ListSubheader,\n  Typography,\n  List,\n  ListItem,\n  Popover,\n  IconButton,\n} from '@material-ui/core';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { TickerInfoType } from './types';\nimport { prettyDate } from 'utils/dates';\nimport { useQuery } from 'react-query';\nimport { getCountryGeoJSONData } from 'utils/api';\n\nconst useStyles = makeStyles(theme => ({\n  popover: {\n    width: 250,\n  },\n  definitionText: {\n    whiteSpace: 'pre-wrap',\n  },\n  infoBtn: {\n    padding: 0,\n    position: 'absolute',\n    top: 3,\n    right: 3,\n    fontSize: '1rem',\n  },\n  viewInfoLink: {\n    color: theme.palette.info.main,\n    '& :visited': {\n      color: theme.palette.info.main,\n    },\n  },\n}));\n\n// A popover menu and toggle button to show a term and its definition. For now\n// just links to \"/about\" route. May want sub-routes or at least \"#section-id\"\n// for scrolling directly to sections.\nexport const TickerInfoPopover: FC<TickerInfoType> = ({\n  defText,\n  heading,\n  omitLastUpdated,\n}) => {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const classes = useStyles();\n  const { data, status } = useQuery('countryTotals', getCountryGeoJSONData, {\n    staleTime: 300000,\n  });\n\n  const lastUpdated =\n    status === 'success' &&\n    data &&\n    data[0].properties &&\n    'date' in data[0].properties\n      ? new Date(data[0].properties['date'])\n      : undefined;\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <>\n      <IconButton\n        aria-controls=\"ticker-info-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n        size=\"small\"\n        className={classes.infoBtn}\n      >\n        <InfoIcon color=\"primary\" fontSize=\"inherit\" />\n      </IconButton>\n      <Popover\n        id=\"ticker-info-menu\"\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n        anchorEl={anchorEl}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n        classes={{ paper: classes.popover }}\n      >\n        <List\n          subheader={<ListSubheader>{heading}</ListSubheader>}\n          component=\"ul\"\n          className={classes.popover}\n        >\n          <ListItem className={classes.definitionText}>{defText}</ListItem>\n          <ListItem divider>\n            {!omitLastUpdated && (\n              <Typography variant=\"caption\" color=\"textSecondary\">\n                LAST UPDATED: {lastUpdated ? prettyDate(lastUpdated) : 'N/A'}\n              </Typography>\n            )}\n          </ListItem>\n          <ListItem\n            component={RouteLink}\n            to=\"/about\"\n            onClick={handleClose}\n            className={classes.viewInfoLink}\n          >\n            View info\n          </ListItem>\n        </List>\n      </Popover>\n    </>\n  );\n};\n","import React, { FC, useContext } from 'react';\nimport { Link } from '@material-ui/core';\n\nimport { ToggleLayerTypes } from './types';\nimport { GlobalContext } from 'components';\n\nexport const ToggleLayer: FC<ToggleLayerTypes> = ({\n  className,\n  visibilityKey,\n}) => {\n  const { state, dispatch } = useContext(GlobalContext);\n\n  const handleClick = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    dispatch({ type: 'TOGGLE_LAYER_VISIBILITY', payload: visibilityKey });\n  };\n\n  return (\n    <Link href=\"#\" className={className} onClick={handleClick}>\n      {state.layerVisibility[visibilityKey] ? 'Hide' : 'Show'}\n    </Link>\n  );\n};\n","import L from 'leaflet';\nimport chroma from 'chroma-js';\n// @ts-ignore\nimport GeoStats from 'geostats';\n\nimport { GenericGeojsonType } from 'components/map/types';\nimport { SELF_REPORTED_STYLES } from 'config/map';\nconst indivMarkerDiameter = SELF_REPORTED_STYLES.size;\n\ninterface SymbConfigTypes {\n  field: string; // field to symbolize on\n  palette: string[]; // array of colors\n  ranges: number[]; // manually-set class breaks\n  precision?: number; // round to nearest whole by default\n}\n\ninterface PropertiesGeneric {\n  properties: {\n    [key: string]: number; // generic key since properties[field] is dynamic\n  };\n}\n\n// https://github.com/Leaflet/Leaflet.markercluster#customising-the-clustered-markers\n// NOTE: iconCreateFunction run by leaflet, which doesn't support ES6 arrow func\nexport const createClusterCustomIcon = function(\n  cluster: any // TODO: legit type?\n) {\n  const childCount = cluster.getChildCount();\n  let diameter = childCount * 5;\n\n  // TODO: try Math.min, Math.max, etc. instead\n  if (diameter > 50) {\n    diameter = 50;\n  } else if (diameter < indivMarkerDiameter) {\n    diameter = indivMarkerDiameter;\n  }\n\n  return L.divIcon({\n    className: 'self-reported-symbol',\n    iconSize: L.point(diameter, diameter, true),\n  });\n};\n\n// Individual circular icon (divIcon has more style flexibility than <Circle>)\nexport const indivMarkerIcon = L.divIcon({\n  className: 'self-reported-symbol',\n  iconSize: L.point(indivMarkerDiameter, indivMarkerDiameter, true),\n});\n\nexport const setSymbology = (\n  srcFeats: GenericGeojsonType[],\n  config: SymbConfigTypes\n) => {\n  // GTFO if nothing to work with\n  if (!srcFeats.length) {\n    return {\n      features: [],\n      legend: [],\n    };\n  }\n\n  // Round to nearest whole by default\n  const { precision = 0, field, palette, ranges } = config;\n  const arrValsForSymb = srcFeats\n    .filter(\n      ({ properties }: PropertiesGeneric) => properties[field] !== undefined\n    )\n    .map(({ properties }: PropertiesGeneric) => properties[field]);\n\n  const serie = new GeoStats(arrValsForSymb);\n  const min = Math.min(...arrValsForSymb); // likely 0, but just in case...\n  const max = Math.max(...arrValsForSymb);\n\n  serie.setClassManually([min, ...ranges, max]);\n  serie.setPrecision(precision);\n  serie.setColors(palette);\n\n  // TODO: restore legend\n  // const { ranges } = serie;\n  // const legend = (ranges.length ? ranges : classes).map(\n  // const legend = ranges.map((item: string, i: number) => {\n  //   return {\n  //     label: item,\n  //     color: palette[i],\n  //   };\n  // });\n\n  const features = srcFeats.map((feature: PropertiesGeneric) => {\n    // Default to gray if there is no data available\n    const gray = 'hsl(0, 0%, 89%)';\n    let color = gray;\n    let fillColor: string | chroma.Color = gray;\n    const { properties } = feature;\n    let valueToUse = properties[field];\n\n    if (valueToUse !== undefined) {\n      const classValue = serie.getClass(valueToUse);\n      color = palette[classValue];\n      fillColor = chroma(color);\n    }\n\n    return {\n      ...feature,\n      properties: {\n        ...properties,\n        style: {\n          color: 'hsl(180, 2%, 70%)',\n          fillColor,\n        },\n      },\n    };\n  });\n\n  return { features };\n};\n","import React, { FC, useContext } from 'react';\nimport { Map as LeafletMap, FeatureGroup, ZoomControl } from 'react-leaflet';\nimport { makeStyles, useMediaQuery, useTheme } from '@material-ui/core';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\n\nimport { CountriesFieldsForTotals } from 'context/types';\nimport { MapProps } from './types';\nimport { countriesSymbology } from 'config/map';\nimport { setSymbology } from 'utils/map';\nimport { GlobalContext } from 'components';\nimport { Polygons, MapboxTileLayer, SubmittedCases } from 'components/map';\n\nrequire('react-leaflet-markercluster/dist/styles.min.css');\n\n// @ts-ignore: Unreachable code error\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n});\n\nconst useStyles = makeStyles(theme => ({\n  theMapItself: {\n    width: '100%',\n    height: '100%',\n    position: 'fixed',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    '& .leaflet-tooltip': {\n      padding: '16px 12px',\n    },\n    // No one cares about zoom controls on small touch devices\n    '& .leaflet-control-zoom': {\n      [theme.breakpoints.down('sm')]: {\n        display: 'none',\n      },\n    },\n  },\n}));\n\nexport const Map: FC<MapProps> = ({ data, submittedFeats }) => {\n  const { state } = useContext(GlobalContext);\n  const activeCountrySymbKey: keyof CountriesFieldsForTotals =\n    state.activeCountrySymbKey;\n  const styles = useStyles();\n  const theme = useTheme();\n  const smallToMid = useMediaQuery(theme.breakpoints.up('sm'));\n  const midsizeAndUp = useMediaQuery(theme.breakpoints.up('md'));\n  const huge = useMediaQuery(theme.breakpoints.up('xl'));\n\n  // @ts-ignore // TODO: remove this shame\n  const polySymb = countriesSymbology[activeCountrySymbKey];\n\n  let center = { lat: 0, lng: -90 };\n  let zoom = 2;\n\n  if (smallToMid) {\n    center = { lat: 0, lng: -75 };\n    zoom = 3;\n  }\n\n  if (midsizeAndUp) {\n    center = { lat: 34, lng: 15 };\n    zoom = 2;\n  }\n\n  if (huge) {\n    center = { lat: 24, lng: 5 };\n    zoom = 3;\n  }\n\n  return (\n    <LeafletMap\n      center={center}\n      zoom={zoom}\n      className={styles.theMapItself}\n      zoomControl={false}\n    >\n      <MapboxTileLayer tilesetId=\"dark-v9\" />\n      {state.layerVisibility.countries && (\n        <FeatureGroup>\n          <Polygons\n            // @ts-ignore\n            features={\n              setSymbology(data, { ...polySymb, field: activeCountrySymbKey })\n                .features\n            }\n          />\n        </FeatureGroup>\n      )}\n      {state.layerVisibility.selfReported && (\n        <FeatureGroup>\n          <SubmittedCases data={submittedFeats} />\n        </FeatureGroup>\n      )}\n      <ZoomControl position=\"bottomright\" />\n    </LeafletMap>\n  );\n};\n","import React, { FC } from 'react';\nimport { TileLayer } from 'react-leaflet';\n\nimport { MapboxType } from './types';\nimport { MAPBOX_TOKEN as accessToken } from 'config';\n\nexport const MapboxTileLayer: FC<MapboxType> = ({ tilesetId }) => {\n  const baseUrl = 'https://api.mapbox.com/styles/v1/mapbox';\n  const attribution = `Ãƒâ€šÃ‚Â© <a href=\"https://apps.mapbox.com/feedback/\">Mapbox</a>`;\n  const url = `${baseUrl}/${tilesetId}/tiles/{z}/{x}/{y}?access_token=${accessToken}`;\n  // CRED: https://stackoverflow.com/a/37043490/1048518\n  // Prevent tiny font/overly sharp resolution\n  return <TileLayer {...{ url, attribution, tileSize: 512, zoomOffset: -1 }} />;\n};\n","import React, { FC } from 'react';\nimport { Tooltip } from 'react-leaflet';\n\nimport { CountryRow } from 'types';\nimport { prettyPrint } from 'utils';\n\nexport const PolygonTooltip: FC<CountryRow> = props => (\n  <Tooltip opacity={1}>\n    {props.country_name ? (\n      <div style={{ width: 250 }}>\n        <h2 style={{ whiteSpace: 'pre-wrap', margin: 0 }}>\n          {props.country_name}\n        </h2>\n        <div\n          style={{\n            display: 'grid',\n            gridTemplateColumns: '1fr 1fr',\n            gridColumnGap: 10,\n          }}\n        >\n          <div>\n            <h3 style={{ marginBottom: 5 }}>Totals</h3>\n            <ul style={{ paddingLeft: 5, margin: 0, listStyleType: 'none' }}>\n              <li>\n                <b>Confirmed:</b> {prettyPrint(props.total_confirmed)}\n              </li>\n              <li>\n                <b>Deaths:</b> {prettyPrint(props.total_deaths)}\n              </li>\n              <li>\n                <b>Recovered:</b> {prettyPrint(props.total_recovered)}\n              </li>\n            </ul>\n          </div>\n          <div>\n            <h3 style={{ marginBottom: 5 }}>Day changes</h3>\n            <ul style={{ paddingLeft: 5, margin: 0, listStyleType: 'none' }}>\n              <li>\n                <b>Confirmed:</b> {prettyPrint(props.new_confirmed)}\n              </li>\n              <li>\n                <b>Dead:</b> {prettyPrint(props.new_deaths)}\n              </li>\n              <li>\n                <b>Recovered:</b> {prettyPrint(props.new_recovered)}\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    ) : (\n      <>\n        <h2>{props.NAME_LONG}</h2>\n        <b>No Data Available</b>\n      </>\n    )}\n  </Tooltip>\n);\n","import React, { FC } from 'react';\nimport { GeoJSON as NonReactGeoJSON } from 'leaflet';\nimport { Polygon } from 'react-leaflet';\n\nimport { IGeometry } from './types';\nimport { CountryRow } from 'types';\nimport { PolygonTooltip } from './PolygonTooltip';\n\ninterface PolygonProperties extends CountryRow {\n  style: {\n    color: string;\n    fillColor: string;\n    fill: boolean;\n    fillOpacity: number; // L default = 0.2\n    opacity: number; // line opacity\n    stroke: boolean; // line color\n    weight: number; // L default = 3\n  };\n}\n\ninterface PolygonFeature {\n  properties: PolygonProperties;\n  geometry: IGeometry;\n}\n\ninterface PolygonsTypes {\n  features: PolygonFeature[];\n}\n\nexport const Polygons: FC<PolygonsTypes> = ({ features }) => (\n  <>\n    {features.map(({ geometry, properties }: PolygonFeature, i: number) => {\n      // Had to do this since some sources have both Poly and Multipoly geom.\n      // See source code for how it's used: https://bit.ly/2PizL8i\n      const levelsDeep = geometry.type === 'Polygon' ? 1 : 2;\n      const positions = NonReactGeoJSON.coordsToLatLngs(\n        geometry.coordinates,\n        levelsDeep\n      );\n      const {\n        color,\n        fillColor,\n        fill = true,\n        fillOpacity = 0.75, // L default = 0.2\n        opacity = 1, // line opacity\n        stroke = true, // line color\n        weight = 1, // L default = 3\n      } = properties.style || {};\n\n      return (\n        <Polygon\n          key={i}\n          positions={positions}\n          {...{\n            color,\n            fill,\n            fillColor,\n            fillOpacity,\n            opacity,\n            stroke,\n            weight,\n          }}\n        >\n          <PolygonTooltip {...properties} />\n        </Polygon>\n      );\n    })}\n  </>\n);\n","import React, { FC } from 'react';\nimport { Marker, Popup } from 'react-leaflet';\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\nimport { useQuery } from 'react-query';\n\nimport { SubmittedType, SelfReportedType } from './types';\nimport { prettyDate } from 'utils/dates';\nimport { getSubmittedCases } from 'utils/api';\nimport { createClusterCustomIcon, indivMarkerIcon } from 'utils/map';\n\nexport const SubmittedCases: FC<SubmittedType> = ({ data }) => {\n  const { status, data: submittedData } = useQuery(\n    'submitted',\n    getSubmittedCases,\n    { staleTime: 300000 }\n  );\n\n  if (status === 'loading') {\n    return <></>;\n  }\n\n  const submissions = submittedData ? submittedData : [];\n\n  return (\n    <MarkerClusterGroup\n      showCoverageOnHover={false}\n      iconCreateFunction={createClusterCustomIcon}\n      disableClusteringAtZoom={10}\n      spiderfyOnMaxZoom\n      maxClusterRadius={5}\n    >\n      {submissions.map((selfReportedItem: SelfReportedType, i: number) => (\n        <Marker\n          key={i}\n          position={[selfReportedItem.lat, selfReportedItem.lng]}\n          icon={indivMarkerIcon}\n        >\n          <Popup maxWidth={200}>\n            <h2>{selfReportedItem.address}</h2>\n            <p>\n              <small>\n                <i>\n                  Self-reported location{' '}\n                  {selfReportedItem.date\n                    ? `submitted ${prettyDate(new Date(selfReportedItem.date))}`\n                    : ''}\n                </i>\n              </small>\n            </p>\n          </Popup>\n        </Marker>\n      ))}\n    </MarkerClusterGroup>\n  );\n};\n","import React, { FC, useContext, useEffect } from 'react';\nimport { Box, Link } from '@material-ui/core';\nimport { useAuthState } from 'react-firebase-hooks/auth';\n\nimport firebase from 'config/firebase';\nimport { tickersConfig } from 'config/map';\n\nimport { GlobalContext, SharingPopoutMenu, SplashScreen } from 'components';\nimport { TickerCards } from 'components/ticker-cards';\nimport { Map } from 'components/map';\nimport { calculateTotals } from 'utils';\nimport { useCountryTotals, useSubmitted } from 'utils/queries';\n\nexport const Home: FC = () => {\n  const { state, dispatch } = useContext(GlobalContext);\n\n  let [totalConfirmed, totalDeaths, totalRecovered] = [0, 0, 0];\n\n  const { data: submissions } = useSubmitted(dispatch);\n  const { data: countryTotals, status: countryTotalsStatus } = useCountryTotals(\n    dispatch\n  ); // useQuery('countryTotals', getCountryGeoJSONData, { staleTime: 300000 });\n\n  const [user, loading] = useAuthState(firebase.auth());\n\n  if (countryTotalsStatus === 'success' && countryTotals) {\n    ({\n      total_confirmed: totalConfirmed,\n      total_deaths: totalDeaths,\n      total_recovered: totalRecovered,\n    } = calculateTotals(countryTotals, {\n      total_confirmed: 0,\n      total_deaths: 0,\n      total_recovered: 0,\n    }));\n  }\n\n  // this only shows the splash screen once, to users that haven't logged in\n  useEffect(() => {\n    if (!loading && !state.hasSeenSplash) {\n      if (!user) {\n        dispatch({ type: 'SHOW_SPLASH', payload: true });\n      } else {\n        dispatch({ type: 'SHOW_SPLASH', payload: false });\n      }\n    }\n  }, [loading, user, dispatch, state.hasSeenSplash]);\n\n  return (\n    <>\n      <SplashScreen />\n      <Box position=\"absolute\" bottom={29} left={8} zIndex={1}>\n        <SharingPopoutMenu />\n      </Box>\n      <Box position=\"absolute\" bottom={0} left={8} zIndex={1}>\n        <Link href=\"./terms-of-service\" color=\"textSecondary\">\n          Terms of service\n        </Link>\n      </Box>\n      <Map data={countryTotals || []} submittedFeats={submissions} />\n      <TickerCards\n        config={tickersConfig}\n        data={{\n          confirmed: totalConfirmed,\n          deaths: totalDeaths,\n          recovered: totalRecovered,\n          selfReported: submissions && submissions.length,\n        }}\n      />\n    </>\n  );\n};\n","import React, { FC } from 'react';\n\nimport {\n  AboutSection,\n  AboutContainer,\n  AboutFooter,\n  Breadcrumb,\n} from 'components';\n\nconst mainAboutPages = [\n  'table-of-contents.html',\n  'intro.html',\n  'data-resources.html',\n  'team-information.html',\n  'our-partners.html',\n  'data-license.html',\n];\nconst termsOfServicePage = 'terms-of-service.html';\nconst privacyPolicyPage = 'privacy-policy.html';\n\nexport const htmlPages = [\n  ...mainAboutPages,\n  termsOfServicePage,\n  privacyPolicyPage,\n];\n\n// The main page\nexport const About: FC = () => (\n  <AboutContainer>\n    <Breadcrumb to=\"/\" text=\"< Home\" />\n    {mainAboutPages.map(page => (\n      <AboutSection filename={page} />\n    ))}\n    <AboutFooter />\n  </AboutContainer>\n);\n\nexport const TermsOfService: FC = () => (\n  <AboutContainer>\n    <Breadcrumb to=\"/\" text=\"Home\" />\n    <Breadcrumb to=\"/about\" text=\"About\" />\n    <AboutSection filename={termsOfServicePage} />\n  </AboutContainer>\n);\n\nexport const PrivacyPolicy: FC = () => (\n  <AboutContainer>\n    <Breadcrumb to=\"/\" text=\"Home\" />\n    <Breadcrumb to=\"/about\" text=\"About\" />\n    <AboutSection filename={privacyPolicyPage} />\n  </AboutContainer>\n);\n","import React, { FC } from 'react';\nimport { Typography } from '@material-ui/core';\n\nexport const Models: FC = () => {\n  return (\n    <div>\n      <Typography variant=\"h2\">Predictive Models</Typography>\n      <p>Coming soon...</p>\n    </div>\n  );\n};\n","import firebase from 'firebase/app';\nimport { DispatchFormType, GlobalContextDispatchType } from 'context/types';\nimport { History } from 'history';\n\nexport const signUp = async (\n  email: string,\n  password: string,\n  captcha: string\n) => {\n  // TODO verify captcha on backend\n  await firebase\n    .app()\n    .auth()\n    .createUserWithEmailAndPassword(email, password);\n};\n\nexport const logOut = async (\n  history: History,\n  userDispatch: DispatchFormType,\n  globalDispatch: GlobalContextDispatchType\n) => {\n  await firebase\n    .app()\n    .auth()\n    .signOut();\n\n  userDispatch({ type: 'RESET_USER_DATA' });\n\n  // Go home\n  history.push('/');\n\n  // Show success msg to user\n  globalDispatch({\n    type: 'TOGGLE_UI_ALERT',\n    payload: {\n      open: true,\n      message: 'You are now logged out',\n      severity: 'success',\n    },\n  });\n};\n\nexport const login = async (email: string, password: string) => {\n  await firebase\n    .app()\n    .auth()\n    .signInWithEmailAndPassword(email, password);\n};\n\nexport const googleLogin = async () => {\n  const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n  await firebase.auth().signInWithPopup(googleAuthProvider);\n};\n\nexport const facebookLogin = async () => {\n  const facebookAuthProvider = new firebase.auth.FacebookAuthProvider();\n  await firebase.auth().signInWithPopup(facebookAuthProvider);\n};\n\nexport const onAuthStateChange = (callback: Function) => {\n  return firebase.auth().onAuthStateChanged(user => {\n    if (user) {\n      callback({ loggedIn: true });\n    } else {\n      callback({ loggedIn: false });\n    }\n  });\n};\n","import React, {\n  useContext,\n  createContext,\n  useReducer,\n  useState,\n  FC,\n  useEffect,\n} from 'react';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport firebase from 'config/firebase';\n\nimport { getUserData } from 'utils/api';\nimport { SymptomForm, SubmissionFormAction } from 'context/types';\nimport { onAuthStateChange } from 'utils/firebase';\nimport { GlobalContext } from 'components';\n\n// TODO: mv into src/context/types.ts\nexport const initialUserState: SymptomForm = {\n  symptoms: {\n    fever: { isPresent: false, startDate: null, endDate: null },\n    headache: { isPresent: false, startDate: null, endDate: null },\n    shortnessOfBreath: { isPresent: false, startDate: null, endDate: null },\n    reducedSmell: { isPresent: false, startDate: null, endDate: null },\n    reducedTaste: { isPresent: false, startDate: null, endDate: null },\n    runnyNose: { isPresent: false, startDate: null, endDate: null },\n    wheezing: { isPresent: false, startDate: null, endDate: null },\n    chestPain: { isPresent: false, startDate: null, endDate: null },\n    bodyAche: { isPresent: false, startDate: null, endDate: null },\n    lightHeadedness: { isPresent: false, startDate: null, endDate: null },\n    confusion: { isPresent: false, startDate: null, endDate: null },\n    fatigue: { isPresent: false, startDate: null, endDate: null },\n    soreThroat: { isPresent: false, startDate: null, endDate: null },\n    nausea: { isPresent: false, startDate: null, endDate: null },\n    dryCough: { isPresent: false, startDate: null, endDate: null },\n    wetCough: { isPresent: false, startDate: null, endDate: null },\n    diarrhea: { isPresent: false, startDate: null, endDate: null },\n    abdominalPain: { isPresent: false, startDate: null, endDate: null },\n  },\n  location: null,\n  email: null,\n  birthMonth: null,\n  birthYear: null,\n  address: undefined,\n  city: null,\n  state: null,\n  county: null,\n  country: null,\n  phoneNumber: null,\n  tested: undefined,\n  numTimesTested: null,\n  testedPositive: undefined,\n  seenPhysician: undefined,\n  doctorDiagnosis: undefined,\n  hasAgreedToTerms: false,\n};\n\n// TODO: mv into src/context/reducers.ts\nconst reducer = (\n  state: SymptomForm,\n  action: SubmissionFormAction\n): SymptomForm => {\n  const newForm = { ...state };\n  switch (action.type) {\n    case 'TOGGLE_SYMPTOM':\n      newForm.symptoms[action.payload].isPresent = !state.symptoms[\n        action.payload\n      ].isPresent;\n      return newForm;\n    case 'SET_SYMPTOM_START_DATE':\n      newForm.symptoms[action.payload.symptom].startDate =\n        action.payload.startDate;\n      return newForm;\n    case 'SET_SYMPTOM_END_DATE':\n      newForm.symptoms[action.payload.symptom].endDate = action.payload.endDate;\n      return newForm;\n    case 'SET_NUM_TIMES_TESTED':\n      return { ...state, numTimesTested: action.payload };\n    case 'SET_LOCATION':\n      return { ...state, location: action.payload };\n    case 'SET_ADDRESS':\n      return { ...state, address: action.payload };\n    case 'SET_BIRTH_DATE':\n      return {\n        ...state,\n        birthMonth: action.payload.birthMonth,\n        birthYear: action.payload.birthYear,\n      };\n    case 'SET_TESTED':\n      if (action.payload === false) {\n        return { ...state, testedPositive: undefined, tested: action.payload };\n      }\n      return {\n        ...state,\n        tested: action.payload,\n        numTimesTested: null,\n        seenPhysician: undefined,\n        doctorDiagnosis: undefined,\n      };\n    case 'SET_TESTED_POSITIVE':\n      return { ...state, testedPositive: action.payload };\n    case 'SET_SEEN_PHYSICIAN':\n      return { ...state, seenPhysician: action.payload };\n    case 'SET_DOCTOR_DIAGNOSIS':\n      if (\n        action.payload === 'suspected' ||\n        action.payload === 'inconclusive' ||\n        action.payload === 'negative'\n      ) {\n        return { ...state, doctorDiagnosis: action.payload };\n      }\n      return newForm;\n    case 'TOGGLE_AGREED':\n      return { ...state, hasAgreedToTerms: !state.hasAgreedToTerms };\n    case 'SET_USER_DATA': // e.g. pre-populating symptoms form\n      return {\n        ...action.payload,\n      };\n    case 'SET_ADDRESS_COMPONENTS':\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case 'RESET_SYMPTOMS':\n      return {\n        ...state,\n        symptoms: initialUserState.symptoms,\n      };\n    case 'RESET_USER_DATA':\n      return {\n        ...initialUserState,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const UserContext = createContext<{ state: any; dispatch: any }>({\n  state: null,\n  dispatch: null,\n});\n\nexport type FormProviderType = {\n  children: React.ReactNode;\n};\n\nexport const UserProvider: FC<FormProviderType> = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialUserState);\n  const { dispatch: dispatchGlobal } = useContext(GlobalContext);\n\n  // to avoid rerunning login trigger\n  const [authFlag, setAuthFlag] = useState<boolean>(true);\n\n  const [user] = useAuthState(firebase.auth());\n\n  useEffect(() => {\n    onAuthStateChange(({ loggedIn }: { loggedIn: boolean }) => {\n      if (loggedIn && user && authFlag) {\n        setAuthFlag(false);\n        user.getIdToken().then(token => {\n          getUserData(token)\n            .then((resp: any) => {\n              if (resp.status === 200 && resp.body) {\n                // only set data if data is not empty (ie user has already signed up before)\n                if (resp.body.data) {\n                  dispatch({ type: 'SET_USER_DATA', payload: resp.body.data });\n                }\n              }\n            })\n            .catch(() => {\n              dispatchGlobal({\n                type: 'TOGGLE_UI_ALERT',\n                payload: {\n                  open: true,\n                  message:\n                    'Something went wrong - failed to get user information',\n                  severity: 'error',\n                },\n              });\n            });\n        });\n      }\n    });\n  }, [user, authFlag, dispatchGlobal]);\n\n  return (\n    <UserContext.Provider value={{ state, dispatch }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n","import React, { useEffect, useReducer, createContext, FC } from 'react';\nimport 'date-fns';\n\nimport { bootstrapApp } from 'utils/api';\nimport { StoreActionType, InitialStateType } from 'context/types';\n\nexport const initialState = {\n  activeCountrySymbKey: 'total_confirmed',\n  uiAlert: {\n    open: false,\n    message: '',\n    severity: 'success',\n  },\n  layerVisibility: {\n    selfReported: true,\n    countries: true,\n  },\n  showSplash: false,\n  loginSignupModal: null,\n  hasSeenSplash: !!localStorage.getItem('hasSeenSplash') || false,\n  lastCountriesUpdate: null, // human-friendly timestamp of first country in JHU\n};\n\nconst reducer = (\n  state: InitialStateType,\n  action: StoreActionType\n): InitialStateType => {\n  switch (action.type) {\n    case 'SET_COUNTRY_SYMBOLOGY':\n      return {\n        ...state,\n        activeCountrySymbKey: action.payload,\n      };\n    case 'TOGGLE_LOGIN_SIGNUP_MODAL':\n      return {\n        ...state,\n        loginSignupModal: action.payload,\n      };\n    case 'TOGGLE_UI_ALERT':\n      return {\n        ...state,\n        uiAlert: {\n          ...state.uiAlert,\n          ...action.payload,\n        },\n      };\n    case 'TOGGLE_LAYER_VISIBILITY':\n      return {\n        ...state,\n        layerVisibility: {\n          ...state.layerVisibility,\n          [action.payload]: !state.layerVisibility[action.payload],\n        },\n      };\n    case 'SHOW_SPLASH':\n      if (action.payload === true) {\n        localStorage.setItem('hasSeenSplash', 'true');\n        return {\n          ...state,\n          showSplash: action.payload,\n          hasSeenSplash: true,\n        };\n      }\n      return {\n        ...state,\n        showSplash: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\n// Good article on setting all this up:\n// https://www.simplethread.com/cant-replace-redux-with-hooks/\nexport const GlobalContext = createContext<{ state: any; dispatch: any }>({\n  state: null,\n  dispatch: null,\n});\n\ntype GlobalProviderType = {\n  children: React.ReactNode;\n};\n\nexport const GlobalProvider: FC<GlobalProviderType> = ({ children }) => {\n  // @ts-ignore\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    bootstrapApp();\n  }, []);\n\n  return (\n    <GlobalContext.Provider value={{ state, dispatch }}>\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n","import React, { FC } from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { Box, Typography, Link, Popover } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  tinyText: {\n    fontSize: '0.85rem',\n  },\n  popover: {\n    maxWidth: 320,\n  },\n}));\n\nexport const AcctReqExplain: FC = () => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.preventDefault();\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <Box marginBottom={1}>\n      <Link\n        aria-label=\"account reason explanation\"\n        aria-haspopup=\"true\"\n        href=\"#\"\n        onClick={handleClick}\n        className={`${classes.tinyText} obvious-link`}\n      >\n        Why do I need to sign up?\n      </Link>{' '}\n      <Popover\n        id=\"long-menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        classes={{ paper: classes.popover }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left',\n        }}\n      >\n        <Box onClick={handleClose} padding={2}>\n          <Typography variant=\"h5\">Why do I need to sign up?</Typography>\n          <p>\n            <small className=\"simpler-font\">\n              Please confirm you are human and prevent duplicate data by signing\n              in.\n            </small>\n          </p>\n          <Typography variant=\"h6\">Is my info safe?</Typography>\n          <p>\n            <small className=\"simpler-font\">\n              Your data will remain anonymous and public. Neither Google,\n              Facebook, nor your email provider will receive any data you\n              provide on this website. We use Firebase for secure logins and\n              will never store your password on this website. Read our{' '}\n              <Link\n                href=\"./privacy-policy\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"obvious-link\"\n              >\n                privacy policy\n              </Link>{' '}\n              to learn more.\n            </small>\n          </p>\n          <Box textAlign=\"right\">\n            <Link href=\"#\" onClick={handleClose}>\n              Close\n            </Link>\n          </Box>\n        </Box>\n      </Popover>\n    </Box>\n  );\n};\n","import React, { FC, useState } from 'react';\nimport { Checkbox, FormControlLabel, Link } from '@material-ui/core';\n\n// TODO: break out About stuff into sub-directory\nimport { SimpleModal, AboutSection } from 'components';\n\ntype AgreeToTermsTypes = {\n  hasAgreedToTerms: boolean;\n  dispatchForm: any;\n};\n\nexport const AgreeToTerms: FC<AgreeToTermsTypes> = ({\n  hasAgreedToTerms,\n  dispatchForm,\n}) => {\n  const [showTermsModal, setShowTermsModal] = useState(false);\n\n  return (\n    <>\n      <FormControlLabel\n        control={\n          <Checkbox\n            name=\"checkedB\"\n            color=\"primary\"\n            data-cy=\"has-agreed-to-terms\"\n            checked={!!hasAgreedToTerms}\n            onChange={() => {\n              dispatchForm({ type: 'TOGGLE_AGREED' });\n            }}\n          />\n        }\n        label={\n          <span>\n            I agree to the{' '}\n            <Link\n              className=\"obvious-link\"\n              href=\"#\"\n              onClick={(e: React.MouseEvent) => {\n                e.preventDefault();\n                setShowTermsModal(true);\n              }}\n            >\n              terms of service\n            </Link>\n            .\n          </span>\n        }\n      />\n      {showTermsModal && (\n        <SimpleModal\n          title=\"Terms of service\"\n          onClose={() => {\n            setShowTermsModal(false);\n            return null;\n          }}\n        >\n          <AboutSection width=\"100%\" filename=\"terms-of-service.html\" />\n        </SimpleModal>\n      )}\n    </>\n  );\n};\n","import React, { FC, useEffect, useContext, useState, useReducer } from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport {\n  Grid,\n  TextField,\n  InputAdornment,\n  CircularProgress,\n  Button,\n} from '@material-ui/core';\nimport { AccountCircle, Email, Https } from '@material-ui/icons';\n\nimport firebase from 'config/firebase';\nimport { signUp } from 'utils/firebase';\nimport { GlobalContext } from 'context';\nimport { emailSignupFormInitialState, formReducer } from 'components/signup';\n\ndeclare global {\n  interface Window {\n    recaptchaVerifier: any;\n  }\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  marginTop: {\n    marginTop: theme.spacing(1),\n  },\n}));\n\ntype EmailSignupFieldsType = {\n  handleSignupError: (code: string, message: string) => void;\n  handleSignupSuccess: () => void;\n};\n\nexport const EmailSignupFields: FC<EmailSignupFieldsType> = ({\n  handleSignupError,\n  handleSignupSuccess,\n}) => {\n  const classes = useStyles();\n  const [captchaVerified, setCaptchaVerified] = useState(false);\n  const [submitting, setSubmitting] = useState<boolean>(false);\n  const { dispatch: dispatchGlobal } = useContext(GlobalContext);\n  const [formState, dispatchForm] = useReducer(\n    formReducer,\n    emailSignupFormInitialState\n  );\n\n  const setFormValue = (field: string, value: string) => {\n    dispatchForm({ type: 'SET_FIELD', payload: { field, value } });\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormValue(e.currentTarget.name, e.currentTarget.value);\n  };\n\n  // Basic form validation for email fields\n  const handleEmailSignup = async () => {\n    dispatchForm({ type: 'RESET_FORM_ERRORS' });\n\n    if (formState.password.length < 6) {\n      setFormValue(\n        'passwordError',\n        'Password must be at least 6 characters long'\n      );\n    } else if (formState.password2.length < 6) {\n      setFormValue(\n        'passwordError2',\n        'Password must be at least 6 characters long'\n      );\n    } else if (formState.password !== formState.password2) {\n      setFormValue('passwordError2', 'Passwords do not match');\n    } else {\n      try {\n        setSubmitting(true);\n        await signUp(formState.email, formState.password, formState.captcha);\n        handleSignupSuccess();\n      } catch (err) {\n        setSubmitting(false);\n        handleSignupError(err.code, err.message);\n      }\n    }\n  };\n\n  useEffect(() => {\n    try {\n      window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\n        'recaptcha',\n        {\n          callback: (response: any) => {\n            setFormValue('captcha', response);\n            setCaptchaVerified(true);\n          },\n          'expired-callback': () => {\n            window.recaptchaVerifier.clear();\n            // Response expired. Needs to rerender captcha\n          },\n        }\n      );\n      window.recaptchaVerifier.render();\n    } catch (err) {\n      dispatchGlobal({\n        type: 'TOGGLE_UI_ALERT',\n        payload: {\n          open: true,\n          message: 'Something went wrong. Could not load captcha.',\n          severity: 'error',\n        },\n      });\n    }\n  }, [dispatchGlobal]);\n\n  return (\n    <>\n      <div\n        id=\"recaptcha\"\n        style={{ display: !captchaVerified ? 'inline-block' : 'none' }}\n      />\n      <div style={{ display: !captchaVerified ? 'none' : 'block' }}>\n        <Grid\n          container\n          spacing={2}\n          className={classes.marginTop}\n          justify=\"center\"\n        >\n          <Grid item xs={12} sm={6}>\n            <TextField\n              id=\"email\"\n              label=\"Email\"\n              type=\"email\"\n              name=\"email\"\n              data-cy=\"register-email-field\"\n              value={formState.email}\n              onChange={handleChange}\n              error={!!formState.emailError}\n              helperText={formState.emailError}\n              fullWidth\n              required\n              variant=\"outlined\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <AccountCircle />\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </Grid>\n        </Grid>\n        <Grid\n          container\n          spacing={2}\n          className={classes.marginTop}\n          justify=\"center\"\n        >\n          <Grid item xs={6} sm={3}>\n            <TextField\n              id=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              name=\"password\"\n              data-cy=\"register-password-field\"\n              value={formState.password}\n              onChange={handleChange}\n              fullWidth\n              required\n              error={!!formState.passwordError}\n              helperText={formState.passwordError}\n              variant=\"outlined\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <Https />\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </Grid>\n          <Grid item xs={6} sm={3}>\n            <TextField\n              id=\"password2\"\n              label=\"Confirm Password\"\n              type=\"password\"\n              name=\"password2\"\n              data-cy=\"register-password2-field\"\n              value={formState.password2}\n              onChange={handleChange}\n              fullWidth\n              required\n              error={!!formState.passwordError2}\n              helperText={formState.passwordError2}\n              variant=\"outlined\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <Https />\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </Grid>\n          <Grid item xs={12} sm={8}>\n            <Button\n              variant=\"contained\"\n              data-cy={'register-email'}\n              color=\"secondary\"\n              disabled={!captchaVerified || submitting}\n              startIcon={<Email />}\n              onClick={handleEmailSignup}\n            >\n              {!submitting ? (\n                'Sign up with email'\n              ) : (\n                <CircularProgress size={28} />\n              )}\n            </Button>\n          </Grid>\n        </Grid>\n      </div>\n    </>\n  );\n};\n","import React, { FC, useContext } from 'react';\nimport { Link } from '@material-ui/core';\n\nimport { GlobalContext } from 'context';\n\nexport const SignInLink: FC = () => {\n  const { dispatch } = useContext(GlobalContext);\n\n  return (\n    <Link\n      href=\"#\"\n      className=\"obvious-link\"\n      onClick={(e: React.MouseEvent) => {\n        e.preventDefault();\n\n        dispatch({\n          type: 'TOGGLE_LOGIN_SIGNUP_MODAL',\n          payload: 'login',\n        });\n      }}\n    >\n      Sign in\n    </Link>\n  );\n};\n","import React, { FC, useReducer, useContext } from 'react';\nimport { IfFirebaseUnAuthed } from '@react-firebase/auth';\nimport { Grid, Typography } from '@material-ui/core';\n\nimport { isValidUserAgent } from 'utils';\nimport { googleLogin, facebookLogin } from 'utils/firebase';\nimport { GlobalContext } from 'components';\nimport { UserContext } from 'context';\nimport { initialFormStateType, actionType } from 'components/signup/types';\nimport {\n  EmailSignupFields,\n  AgreeToTerms,\n  AcctReqExplain,\n  SignupLoginBtn,\n  SignInLink,\n} from 'components/signup';\n\ndeclare global {\n  interface Window {\n    recaptchaVerifier: any;\n  }\n}\n\nexport const emailSignupFormInitialState = {\n  email: '',\n  password: '',\n  password2: '',\n  emailError: '',\n  passwordError: '',\n  passwordError2: '',\n  captcha: '',\n};\n\nexport const formReducer = (\n  state: initialFormStateType,\n  action: actionType\n) => {\n  switch (action.type) {\n    case 'SET_FIELD':\n      if (action.payload) {\n        return {\n          ...state,\n          [action.payload.field]: action.payload.value,\n        };\n      }\n      return {\n        ...state,\n      };\n    case 'RESET_FORM_ERRORS':\n      return {\n        ...state,\n        emailError: '',\n        passwordError: '',\n        passwordError2: '',\n      };\n    default:\n      return { ...state };\n  }\n};\n\nwindow.recaptchaVerifier = window.recaptchaVerifier || {};\n\nexport const SignupForm: FC = () => {\n  const { dispatch } = useContext(GlobalContext);\n  const isLegitBrowser = isValidUserAgent();\n  const [, registrationFormDispatch] = useReducer(\n    formReducer,\n    emailSignupFormInitialState\n  );\n  const {\n    state: symptomsFormState,\n    dispatch: symptomsFormDispatch,\n  } = useContext(UserContext);\n\n  const setFormValue = (field: string, value: string) => {\n    registrationFormDispatch({ type: 'SET_FIELD', payload: { field, value } });\n  };\n\n  const handleSignupError = (code: string, message: string) => {\n    switch (message) {\n      case 'auth/email-already-in-use':\n        setFormValue('emailError', 'That email is already in use');\n        break;\n      case 'auth/invalid-email':\n        setFormValue('emailError', 'Invalid email');\n        break;\n      default:\n        dispatch({\n          type: 'TOGGLE_UI_ALERT',\n          payload: {\n            open: true,\n            message,\n            severity: 'error',\n            duration: 15000,\n          },\n        });\n        break;\n    }\n  };\n\n  // Generic success handler to show user success alert and close modal\n  const handleSignupSuccess = () => {\n    dispatch({\n      type: 'TOGGLE_LOGIN_SIGNUP_MODAL',\n      payload: null,\n    });\n\n    dispatch({\n      type: 'TOGGLE_UI_ALERT',\n      payload: {\n        open: true,\n        message: 'Signup successful!',\n        severity: 'success',\n      },\n    });\n  };\n\n  // Technically signup OR login\n  const handleGoogleLogin = async (event: React.MouseEvent) => {\n    event.preventDefault();\n\n    try {\n      await googleLogin();\n      handleSignupSuccess();\n    } catch (err) {\n      handleSignupError(err.code, err.message);\n    }\n  };\n\n  // Technically signup OR login\n  const handleFacebookLogin = async (event: React.MouseEvent) => {\n    event.preventDefault();\n\n    try {\n      await facebookLogin();\n      handleSignupSuccess();\n    } catch (err) {\n      handleSignupError(err.code, err.message);\n    }\n  };\n\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <IfFirebaseUnAuthed>\n        {() => (\n          <>\n            <Typography variant=\"h4\">Choose a signup method</Typography>\n            <AcctReqExplain />\n            {!symptomsFormState.hasAgreedToTerms && (\n              <Grid container>\n                <Grid item xs={12}>\n                  <AgreeToTerms\n                    hasAgreedToTerms={symptomsFormState.hasAgreedToTerms}\n                    dispatchForm={symptomsFormDispatch}\n                  />\n                </Grid>\n              </Grid>\n            )}\n            {symptomsFormState.hasAgreedToTerms && (\n              <>\n                <Grid\n                  container\n                  justify=\"center\"\n                  style={{ marginTop: 16 }}\n                  spacing={1}\n                >\n                  <Grid item>\n                    <SignupLoginBtn\n                      type=\"google\"\n                      onClick={handleGoogleLogin}\n                      disabled={!isLegitBrowser}\n                    />\n                  </Grid>\n                  <Grid item>\n                    <SignupLoginBtn\n                      type=\"facebook\"\n                      onClick={handleFacebookLogin}\n                      disabled={!isLegitBrowser}\n                    />\n                  </Grid>\n                  {!isLegitBrowser && (\n                    <Grid\n                      item\n                      xs={11}\n                      className=\"simpler-font\"\n                      style={{ fontSize: '0.6rem' }}\n                    >\n                      To sign up using Facebook or Google, please open this site\n                      in a web browser such as Safari or Chrome.\n                    </Grid>\n                  )}\n                </Grid>\n                <Typography component=\"div\">\n                  <p>OR, sign up with email:</p>\n                </Typography>\n                <EmailSignupFields\n                  handleSignupError={handleSignupError}\n                  handleSignupSuccess={handleSignupSuccess}\n                />\n              </>\n            )}\n            <p style={{ textAlign: 'center' }}>\n              Already have an account? <SignInLink /> .\n            </p>\n          </>\n        )}\n      </IfFirebaseUnAuthed>\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport { Button } from '@material-ui/core';\nimport { Facebook, Email } from '@material-ui/icons';\n\n// TODO: use this for goog/fb click handlers\n// type ClickForPromise = (\n//   event: React.MouseEvent<Element, MouseEvent>\n// ) => Promise<void>;\n\ntype SignupProviderTypes = 'email' | 'facebook' | 'google';\n\ntype SignupLoginBtnConfig = {\n  type: SignupProviderTypes;\n  disabled?: boolean;\n  textOverride?: string; // e.g. \"Log in with email\" instead of just \"Email\"\n  onClick: (event: any) => void; // TODO: do it right with React.SyntheticEvent\n};\n\nconst GoogleIcon: FC = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 210 210\"\n    className=\"MuiSvgIcon-root\"\n  >\n    <path d=\"M0 105a105.1 105.1 0 01169-83.2l-24.4 31.7a65 65 0 1022.2 71.5H105V85h105v20a105.1 105.1 0 01-210 0z\" />\n  </svg>\n);\n\nexport const SignupLoginBtn: FC<SignupLoginBtnConfig> = ({\n  type,\n  disabled,\n  onClick,\n  textOverride,\n}) => {\n  let btnText = '';\n  let startIcon = null;\n  let cypressDataAttrib = '';\n\n  switch (type) {\n    case 'google':\n      btnText = 'Google';\n      startIcon = <GoogleIcon />;\n      break;\n    case 'facebook':\n      btnText = 'Facebook';\n      startIcon = <Facebook />;\n      break;\n    default:\n      btnText = 'Email';\n      startIcon = <Email />;\n      cypressDataAttrib = 'register-email';\n      break;\n  }\n\n  return (\n    <Button\n      variant=\"contained\"\n      data-cy={cypressDataAttrib}\n      color=\"secondary\"\n      disabled={disabled}\n      startIcon={startIcon}\n      onClick={onClick}\n    >\n      {textOverride || btnText}\n    </Button>\n  );\n};\n","import React, { FC, useState, useContext } from 'react';\nimport {\n  Grid,\n  TextField,\n  Button,\n  Typography,\n  InputAdornment,\n  Link,\n  CircularProgress,\n} from '@material-ui/core';\nimport { AccountCircle, Https, Email } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { isValidUserAgent } from 'utils';\nimport { googleLogin, login, facebookLogin } from 'utils/firebase';\nimport { GlobalContext } from 'context';\nimport { SimpleModal, VerifyEmailForm } from 'components';\nimport { SignupLoginBtn } from 'components/signup';\n\nconst useStyles = makeStyles(theme => ({\n  marginTop: {\n    marginTop: theme.spacing(1),\n  },\n}));\n\nexport const LoginForm: FC = () => {\n  const classes = useStyles();\n  const { dispatch } = useContext(GlobalContext);\n  const isLegitBrowser = isValidUserAgent();\n\n  const [showForgotPasswd, setShowForgotPasswd] = useState<boolean>(false);\n  const [email, setEmail] = useState<string>('');\n  const [emailErrorMessage, setEmailErrorMessage] = useState<string>('');\n  const [password, setPassword] = useState<string>('');\n  const [passwordErrorMessage, setPasswordErrorMessage] = useState<string>('');\n  const [submitting, setSubmitting] = useState<boolean>(false);\n\n  const handleLoginError = (code: string, message: string) => {\n    switch (code) {\n      case 'auth/wrong-password':\n        setPasswordErrorMessage('Invalid password');\n        break;\n      case 'auth/user-not-found':\n        setEmailErrorMessage('That username does not exist');\n        break;\n      case 'auth/invalid-email':\n        setEmailErrorMessage('Invalid email');\n        break;\n      default:\n        dispatch({\n          type: 'TOGGLE_UI_ALERT',\n          payload: {\n            open: true,\n            message,\n            severity: 'error',\n            // I think this is a MUI bug that resets the autoHide timer under\n            // certain circumstances\n            duration: 15000, // it's not actually 15 seconds, more like 6 or 7\n          },\n        });\n        break;\n    }\n  };\n\n  // Generic success handler to show user success alert and close modal\n  const handleLoginSuccess = () => {\n    dispatch({\n      type: 'TOGGLE_LOGIN_SIGNUP_MODAL',\n      payload: null,\n    });\n\n    dispatch({\n      type: 'TOGGLE_UI_ALERT',\n      payload: {\n        open: true,\n        message: 'Login successful!',\n        severity: 'success',\n      },\n    });\n  };\n\n  const resetErrors = () => {\n    setEmailErrorMessage('');\n    setPasswordErrorMessage('');\n  };\n\n  const handleEmailLogin = async (event: React.MouseEvent) => {\n    event.preventDefault();\n    resetErrors();\n\n    try {\n      setSubmitting(true);\n      await login(email, password);\n      handleLoginSuccess();\n    } catch (err) {\n      setSubmitting(false);\n      handleLoginError(err.code, err.message);\n    }\n  };\n\n  const handleGoogleLogin = async (event: React.MouseEvent) => {\n    event.preventDefault();\n\n    try {\n      await googleLogin();\n      handleLoginSuccess();\n    } catch (err) {\n      handleLoginError(err.code, err.message);\n    }\n  };\n\n  const handleFacebookLogin = async (event: React.MouseEvent) => {\n    event.preventDefault();\n\n    try {\n      await facebookLogin();\n      handleLoginSuccess();\n    } catch (err) {\n      handleLoginError(err.code, err.message);\n    }\n  };\n\n  const handleEmailChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setEmail(event.currentTarget.value);\n  };\n\n  const handlePasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPassword(event.currentTarget.value);\n  };\n\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <Typography variant=\"h4\">Choose a login method</Typography>\n      <Grid\n        container\n        spacing={2}\n        justify=\"center\"\n        className={classes.marginTop}\n      >\n        <Grid item>\n          <SignupLoginBtn\n            disabled={!isLegitBrowser}\n            type=\"google\"\n            onClick={handleGoogleLogin}\n          />\n        </Grid>\n        <Grid item>\n          <SignupLoginBtn\n            disabled={!isLegitBrowser}\n            type=\"facebook\"\n            onClick={handleFacebookLogin}\n          />\n        </Grid>\n        {!isLegitBrowser && (\n          <Grid\n            item\n            xs={11}\n            className=\"simpler-font\"\n            style={{ fontSize: '0.6rem' }}\n          >\n            To log in using Facebook or Google, please open this site in a web\n            browser such as Safari or Chrome.\n          </Grid>\n        )}\n      </Grid>\n      <Typography component=\"div\" className={classes.marginTop}>\n        <p className={classes.marginTop}>OR, log in with email:</p>\n      </Typography>\n      <Grid container justify=\"center\">\n        <Grid item xs={12} sm={10}>\n          <TextField\n            id=\"username\"\n            label=\"Username\"\n            type=\"email\"\n            value={email}\n            onChange={handleEmailChange}\n            error={!!emailErrorMessage}\n            helperText={emailErrorMessage}\n            fullWidth\n            required\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <AccountCircle />\n                </InputAdornment>\n              ),\n            }}\n          />\n        </Grid>\n      </Grid>\n      <Grid container justify=\"center\">\n        <Grid item xs={12} sm={10} className={classes.marginTop}>\n          <TextField\n            id=\"username\"\n            label=\"Password\"\n            type=\"password\"\n            value={password}\n            onChange={handlePasswordChange}\n            error={!!passwordErrorMessage}\n            helperText={passwordErrorMessage}\n            fullWidth\n            required\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <Https />\n                </InputAdornment>\n              ),\n            }}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={2} justify=\"center\">\n        <Grid item xs={12} sm={10}>\n          <Link\n            href=\"#\"\n            className=\"obvious-link\"\n            onClick={(e: React.MouseEvent) => {\n              e.preventDefault();\n              setShowForgotPasswd(true);\n              return null;\n            }}\n          >\n            Forgot password?\n          </Link>\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        justify=\"center\"\n        className={classes.marginTop}\n        spacing={1}\n        style={{ textAlign: 'center' }}\n      >\n        <Grid item xs={12} sm=\"auto\">\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            size=\"small\"\n            onClick={handleEmailLogin}\n            startIcon={<Email />}\n            disabled={!email || !password || submitting}\n          >\n            {!submitting ? 'Log in with email' : <CircularProgress size={28} />}\n          </Button>\n        </Grid>\n      </Grid>\n      <p>\n        Don't have an account?{' '}\n        <Link\n          href=\"#\"\n          className=\"obvious-link\"\n          onClick={(e: React.MouseEvent) => {\n            e.preventDefault();\n\n            dispatch({\n              type: 'TOGGLE_LOGIN_SIGNUP_MODAL',\n              payload: 'signup',\n            });\n          }}\n        >\n          Sign up\n        </Link>\n        .\n      </p>\n      {showForgotPasswd && (\n        <SimpleModal\n          title=\"Forgot password\"\n          onClose={() => {\n            setShowForgotPasswd(false);\n            return null;\n          }}\n        >\n          <VerifyEmailForm />\n        </SimpleModal>\n      )}\n    </div>\n  );\n};\n","import React, { useContext, FC } from 'react';\n\nimport { GlobalContext, SimpleModal } from 'components';\nimport { LoginForm } from 'components/LoginForm';\nimport { SignupForm } from 'components/signup';\n\nexport const LoginSignup: FC = () => {\n  const { state, dispatch } = useContext(GlobalContext);\n  const modalView = state.loginSignupModal;\n\n  const onClose = () => {\n    dispatch({\n      type: 'TOGGLE_LOGIN_SIGNUP_MODAL',\n      payload: null,\n    });\n  };\n\n  if (!modalView) {\n    return null;\n  }\n\n  if (modalView === 'login') {\n    return (\n      <SimpleModal onClose={onClose} title=\"Login\">\n        <LoginForm />\n      </SimpleModal>\n    );\n  }\n\n  return (\n    <SimpleModal onClose={onClose} title=\"Signup\">\n      <SignupForm />\n    </SimpleModal>\n  );\n};\n","import React, { FC } from 'react';\nimport { Typography } from '@material-ui/core';\n\nimport { CountryTable, AboutSection } from 'components';\n\nexport const List: FC = () => {\n  return (\n    <div>\n      <Typography variant=\"h2\">Results by Country</Typography>\n      <CountryTable />\n      <AboutSection filename=\"data-license.html\" />\n    </div>\n  );\n};\n","import React, { FC, useContext } from 'react';\nimport { Container, Button } from '@material-ui/core';\n\nimport { triggerBadRequest, fetchGithubHtml } from 'utils/api';\nimport { Breadcrumb, GlobalContext } from 'components';\n\nconst ErrorTriggerBtns: FC = () => {\n  const { dispatch } = useContext(GlobalContext);\n\n  const handleBSurlClick = async () => {\n    try {\n      await triggerBadRequest();\n    } catch {\n      dispatch({\n        type: 'TOGGLE_UI_ALERT',\n        payload: {\n          open: true,\n          message: 'Oops! Something went wrong',\n          severity: 'error',\n        },\n      });\n    }\n  };\n\n  const handleBadHelpClick = async () => {\n    try {\n      await fetchGithubHtml('not-real.html');\n    } catch (err) {\n      dispatch({\n        type: 'TOGGLE_UI_ALERT',\n        payload: {\n          open: true,\n          message: 'Something went wrong. Could not get content.',\n          severity: 'error',\n        },\n      });\n    }\n  };\n\n  return (\n    <div style={{ display: 'flex', justifyContent: 'space-around' }}>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={handleBadHelpClick}\n      >\n        Trigger Bad About\n      </Button>\n      <Button color=\"secondary\" variant=\"contained\" onClick={handleBSurlClick}>\n        Trigger BS URL\n      </Button>\n    </div>\n  );\n};\n\nexport const SecretSnackground: FC = () => (\n  <Container className=\"simpler-font\">\n    <Breadcrumb to=\"/\" text=\"< Home\" />\n    <h1>Super-secret Snackground</h1>\n    <p>\n      Easy way to test error/warning/success snackbars/alerts directly without a\n      million steps.\n    </p>\n    <ErrorTriggerBtns />\n  </Container>\n);\n","import { queryCache } from 'react-query';\n\nimport { BACKEND_URL, CLOUD_HTML_BASE_URL } from 'config';\nimport { SymptomForm } from 'context/types';\nimport { CountryRow } from 'types';\nimport { IGeoJson } from 'components/map/types';\nimport { htmlPages } from 'views';\n\nconst superagent = require('superagent');\n\nexport const postFormData = async (\n  formData: SymptomForm,\n  authorization: string\n) => {\n  await superagent\n    .post(`${BACKEND_URL}/self_report`)\n    .set('Authorization', authorization)\n    .send(formData);\n};\n\nexport const getUserData = (authorization: string) => {\n  return superagent\n    .get(`${BACKEND_URL}/user`)\n    .set('Authorization', authorization)\n    .set('Accept', 'application/json');\n};\n\n// TODO: switch to topojson or vector tiles for some perf gains\nexport const getGeoJSONCountries = async () =>\n  await require('data/countries.min.json');\n\nexport const getCountryData = async () => {\n  return superagent\n    .get(`${BACKEND_URL}/countries`)\n    .set('Accept', 'application/json');\n};\n\nexport const getCountryGeoJSONData = async () => {\n  const geoJSON = await getGeoJSONCountries();\n  const countryData = await getCountryData();\n  // not sure why this returns text and not json\n  const countries = JSON.parse(countryData['text'])['data'];\n  const propertiesHash: { [key: string]: Object } = {};\n\n  // make a hash to avoid big O^2\n  countries['countries'].forEach((country: CountryRow) => {\n    propertiesHash[country['country_code']] = { ...country };\n  });\n\n  const geoJSONCountries = geoJSON['features'].map((feature: IGeoJson) => {\n    if (\n      feature['properties']['ISO_A2'] !== undefined &&\n      feature['properties']['ISO_A2'] in propertiesHash\n    ) {\n      return {\n        ...feature,\n        properties: propertiesHash[feature['properties']['ISO_A2']],\n      };\n    }\n    return { ...feature };\n  });\n\n  return geoJSONCountries;\n};\n\nexport const getSubmittedCases = async () => {\n  return await superagent\n    .get(`${BACKEND_URL}/self_report`)\n    .set('Accept', 'application/json')\n    .then((response: any) => response.body.data.locations);\n};\n\n// TODO: these if they're going to be a thing\n// export const getStateData\n// export const getCountyData\n\nexport const fetchGithubHtml = async (filename: string) =>\n  await superagent\n    .get(`${CLOUD_HTML_BASE_URL}/${filename}`)\n    .set('Accept', 'text/html; charset=utf8');\n\nexport const triggerBadRequest = async () =>\n  await superagent.get('http://superfake.biz/400');\n\nexport const bootstrapApp = async () => {\n  await prefetchAboutData();\n};\n\nconst prefetchAboutData = async () => {\n  htmlPages.forEach(async page => {\n    await queryCache.prefetchQuery(page, fetchGithubHtml, {\n      staleTime: Infinity,\n    });\n  });\n};\n","import { useQuery } from 'react-query';\n\nimport {\n  getCountryGeoJSONData,\n  getSubmittedCases,\n  fetchGithubHtml,\n} from 'utils/api';\n\nconst FIVE_MINUTES = 300000;\n\nexport const useCountryTotals = (dispatch: any) =>\n  useQuery('countryTotals', getCountryGeoJSONData, {\n    staleTime: FIVE_MINUTES,\n    onError: error => {\n      dispatch({\n        type: 'TOGGLE_UI_ALERT',\n        payload: {\n          open: true,\n          message: 'Could not get country totals',\n          severity: 'error',\n        },\n      });\n    },\n  });\n\nexport const useSubmitted = (dispatch: any) =>\n  useQuery('submitted', getSubmittedCases, {\n    staleTime: FIVE_MINUTES,\n    onError: error => {\n      dispatch({\n        type: 'TOGGLE_UI_ALERT',\n        payload: {\n          open: true,\n          message: 'Could not get self-reported dataset',\n          severity: 'error',\n        },\n      });\n    },\n  });\n\nexport const useAbout = (filename: string, dispatch: any) =>\n  useQuery(filename, fetchGithubHtml, {\n    staleTime: Infinity,\n    onError: error => {\n      dispatch({\n        type: 'TOGGLE_UI_ALERT',\n        payload: {\n          open: true,\n          message: 'Something went wrong. Could not get content.',\n          severity: 'error',\n        },\n      });\n    },\n  });\n","import React, { FC, useContext } from 'react';\nimport { Link as RouteLink } from 'react-router-dom';\nimport { Container, Link, Typography } from '@material-ui/core';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\n\nimport { useAbout } from 'utils/queries';\nimport { GlobalContext } from 'components';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    backgroundColor: theme.palette.common.white,\n    color: theme.palette.common.black,\n    '& a': {\n      color: theme.palette.info.main,\n    },\n    '& a:hover': {\n      cursor: 'pointer',\n    },\n  },\n}));\n\ninterface AboutContTypes {\n  children: React.ReactNode;\n}\n\ninterface AboutType {\n  filename: string;\n  width?: string;\n}\n\ninterface BreadcrumbType {\n  text: string;\n  to: string;\n}\n\n// Jumping-off/lead paragraphs to feedback, service terms, and privacy policy\nexport const AboutFooter: FC = () => (\n  <section>\n    <h2 id=\"feedback\">Feedback</h2>\n    <p>\n      Please contact us by filling out\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href=\"https://docs.google.com/forms/d/e/1FAIpQLSfkQJMihQUlA6scYvjr1A1OZiXGRRxQLkD1YIiklGDq5YTclQ/viewform?usp=sf_link\"\n      >\n        this short form\n      </a>\n      .\n    </p>\n    <h2 id=\"terms-of-service\">Terms of Service</h2>\n    <p>\n      Read about our{' '}\n      <RouteLink to=\"/terms-of-service\">terms of service</RouteLink>.\n    </p>\n    <h2 id=\"privacy-policy\">Privacy Policy</h2>\n    <p>\n      Read more about{' '}\n      <RouteLink to=\"/privacy-policy\">how we use your data</RouteLink>.\n    </p>\n  </section>\n);\n\nexport const AboutSection: FC<AboutType> = ({ filename, width = '100%' }) => {\n  const { dispatch } = useContext(GlobalContext);\n  const { data } = useAbout(filename, dispatch);\n\n  return (\n    <div style={{ width }}>\n      {data && <div dangerouslySetInnerHTML={{ __html: data.text }} />}\n    </div>\n  );\n};\n\nexport const AboutContainer: FC<AboutContTypes> = ({ children }) => {\n  const classes = useStyles();\n\n  return (\n    <Container className={`simpler-font ${classes.root}`}>{children}</Container>\n  );\n};\n\nexport const Breadcrumb: FC<BreadcrumbType> = ({ text, to }) => (\n  <>\n    {to !== '/' && (\n      <Typography component=\"span\" color=\"primary\">\n        <small>{` < `}</small>\n      </Typography>\n    )}\n    <Link component={RouteLink} to={to}>\n      {text}\n    </Link>\n  </>\n);\n","import React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Fab from '@material-ui/core/Fab';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport Zoom from '@material-ui/core/Zoom';\n\ninterface Props {\n  children: React.ReactElement;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\nfunction ScrollTop(props: Props) {\n  const { children } = props;\n  const classes = useStyles();\n  const trigger = useScrollTrigger();\n\n  const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\n    const anchor = (\n      (event.target as HTMLDivElement).ownerDocument || document\n    ).querySelector('#back-to-top-anchor');\n\n    if (anchor) {\n      anchor.scrollIntoView({ behavior: 'smooth', block: 'center' });\n    }\n  };\n\n  return (\n    <Zoom in={trigger}>\n      <div onClick={handleClick} role=\"presentation\" className={classes.root}>\n        {children}\n      </div>\n    </Zoom>\n  );\n}\n\n// CRED: https://material-ui.com/components/app-bar/#back-to-top\nexport const BackToTopBtn = () => (\n  <ScrollTop>\n    <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\n      <KeyboardArrowUpIcon />\n    </Fab>\n  </ScrollTop>\n);\n","import React, { FC, useContext } from 'react';\nimport MUIDataTable from 'mui-datatables';\n\nimport { GlobalContext } from 'context';\nimport { useCountryTotals } from 'utils/queries';\n\nexport const CountryTable: FC = () => {\n  const { dispatch } = useContext(GlobalContext);\n  const { status, data: countries } = useCountryTotals(dispatch);\n\n  if (status !== 'success' || !countries) {\n    return <></>;\n  }\n\n  const data = countries\n    .map((country: any) => {\n      const {\n        country_name,\n        total_deaths,\n        total_confirmed,\n        total_recovered,\n        new_deaths,\n        new_confirmed,\n        new_recovered,\n      } = country.properties;\n\n      return [\n        country_name,\n        total_confirmed,\n        new_confirmed,\n        total_deaths,\n        new_deaths,\n        total_recovered,\n        new_recovered,\n      ];\n    })\n    // get rid of countries with no name\n    .filter((country: Array<any>) => !!country[0]);\n\n  const columns = [\n    { name: 'Country ' },\n    {\n      name: 'Confirmed',\n      options: {\n        sortDirection: 'desc' as 'asc' | 'desc' | 'none' | undefined,\n      },\n    },\n    { name: 'Confirmed (Day Change)' },\n    { name: 'Deaths ' },\n    { name: 'Deaths (Day Change) ' },\n    { name: 'Recovered ' },\n    { name: 'Recovered (Day Change) ' },\n  ];\n\n  return (\n    <MUIDataTable\n      title=\"Country Data\"\n      data={data}\n      columns={columns}\n      options={{\n        selectableRows: 'none',\n      }}\n    />\n  );\n};\n","import React, { FC } from 'react';\nimport { IconButton } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport { NavBarTypes, MuiClassList } from 'types/top-bar';\n\ntype BurgerTypes = Omit<NavBarTypes, 'isHome'> & MuiClassList;\n\nexport const Burger: FC<BurgerTypes> = ({\n  toggleDrawerOpen,\n  drawerOpen,\n  classes = {},\n}) => (\n  <IconButton\n    edge=\"start\"\n    className={classes.burger}\n    aria-label=\"menu\"\n    onClick={() => toggleDrawerOpen(!drawerOpen)}\n  >\n    <MenuIcon />\n  </IconButton>\n);\n","import React, { FC, useContext } from 'react';\nimport { Button, IconButton } from '@material-ui/core';\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\n\nimport { MuiClassList } from 'types/top-bar';\nimport { GlobalContext } from 'components';\n\nconst LoginSignupBtnDesktop: FC<MuiClassList> = ({ classes }) => {\n  const { dispatch } = useContext(GlobalContext);\n\n  return (\n    <IconButton\n      aria-label=\"login-or-signup\"\n      className={classes.signupLoginMobile}\n      color=\"primary\"\n      size=\"small\"\n      onClick={() => {\n        dispatch({\n          type: 'TOGGLE_LOGIN_SIGNUP_MODAL',\n          payload: 'login',\n        });\n      }}\n    >\n      <PersonOutlineIcon fontSize=\"inherit\" htmlColor=\"white\" />\n    </IconButton>\n  );\n};\n\nconst LoginSignupBtnMobile: FC<MuiClassList> = ({ classes }) => {\n  const { dispatch } = useContext(GlobalContext);\n\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      className={`${classes.appBarBtns} ${classes.signupLoginBtn} ${classes.snugBtnMobile}`}\n      onClick={() => {\n        dispatch({\n          type: 'TOGGLE_LOGIN_SIGNUP_MODAL',\n          payload: 'login',\n        });\n      }}\n    >\n      Login / Signup\n    </Button>\n  );\n};\n\nexport const LoginSignupBtn: FC<MuiClassList> = ({ classes }) => (\n  <>\n    <LoginSignupBtnDesktop classes={classes} />\n    <LoginSignupBtnMobile classes={classes} />\n  </>\n);\n","import React, { FC } from 'react';\nimport { Link as RouteLink } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\n\nimport { MuiClassList } from 'types/top-bar';\n\nexport const MySymptomsBtn: FC<MuiClassList> = ({ classes }) => (\n  <Button\n    variant=\"contained\"\n    color=\"secondary\"\n    to=\"/self-report\"\n    className={`${classes.appBarBtns} ${classes.snugBtnMobile}`}\n    component={RouteLink}\n  >\n    My Case\n  </Button>\n);\n","import React, { FC } from 'react';\nimport { Link as RouteLink } from 'react-router-dom';\nimport { Typography } from '@material-ui/core';\n\nimport { MuiClassList } from 'types/top-bar';\n\nexport const TitleWrap: FC<MuiClassList> = ({ classes }) => (\n  <Typography\n    to=\"/\"\n    component={RouteLink}\n    className={`${classes.title} MuiTypography-noWrap`}\n  >\n    <span className=\"MuiTypography-noWrap\" style={{ lineHeight: 1 }}>\n      Covid-19 Self-reporting Tool\n    </span>\n    <Typography\n      component=\"p\"\n      variant=\"subtitle2\"\n      noWrap\n      className={classes.subTitle}\n    >\n      An open data tool that tracks self-reported and confirmed infections\n    </Typography>\n  </Typography>\n);\n","import React, { FC } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  AppBar,\n  Box,\n  Toolbar,\n  useScrollTrigger,\n  Slide,\n} from '@material-ui/core';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { IfFirebaseAuthed, IfFirebaseUnAuthed } from '@react-firebase/auth';\n\nimport firebase from 'config/firebase';\nimport { NavBarTypes, MuiClassList } from 'types/top-bar';\nimport { UserPopoverMenu } from 'components/top-bar';\nimport {\n  TitleWrap,\n  Burger,\n  MySymptomsBtn,\n  LoginSignupBtn,\n} from 'components/top-bar';\n\nconst TopBarBtns: FC<MuiClassList> = ({ classes }) => (\n  <>\n    <MySymptomsBtn classes={classes} />\n    <IfFirebaseUnAuthed>\n      {() => <LoginSignupBtn classes={classes} />}\n    </IfFirebaseUnAuthed>\n    <IfFirebaseAuthed>{() => <UserPopoverMenu />}</IfFirebaseAuthed>\n  </>\n);\n\nconst useStyles = (isHome: boolean) => {\n  const topBarStyles = makeStyles(theme => ({\n    root: {\n      backgroundColor: isHome ? 'transparent' : theme.palette.grey[800],\n      // backgroundColor: 'hsla(0, 0%, 20%, 0.4)', // TODO: give er a go\n      boxShadow: 'none',\n      color: theme.palette.common.white,\n      paddingTop: theme.spacing(1),\n      paddingBottom: theme.spacing(1),\n      paddingLeft: 6,\n      paddingRight: 6,\n      zIndex: theme.zIndex.drawer + 1,\n      [theme.breakpoints.up('md')]: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(2),\n        paddingTop: theme.spacing(3),\n        paddingBottom: theme.spacing(3),\n      },\n    },\n    toolbar: {\n      justifyContent: 'space-between',\n    },\n    title: {\n      color: 'inherit',\n      justifyContent: 'center',\n      marginRight: 'auto', // forces it to the beginning in flexbox\n      paddingRight: 5,\n      paddingTop: 3,\n      position: 'relative',\n      textAlign: 'left',\n      textDecoration: 'none',\n      textShadow: '1px 1px 3px hsla(180, 2%, 10%, 0.75)',\n      fontSize: '1.5rem',\n      lineHeight: 1,\n      // So gross but there's just no room on super small screens 😔\n      [theme.breakpoints.down(321)]: {\n        fontSize: '1.2rem',\n        maxWidth: 200,\n      },\n      [theme.breakpoints.up('sm')]: {\n        fontSize: '2rem',\n      },\n      [theme.breakpoints.up('md')]: {\n        fontSize: '2.5rem',\n      },\n    },\n    titleAndBadge: {\n      position: 'relative',\n      display: 'flex',\n      flexWrap: 'nowrap',\n      flex: 1,\n      [theme.breakpoints.up('md')]: {\n        marginLeft: 105,\n      },\n      [theme.breakpoints.up('lg')]: {\n        marginLeft: 150,\n      },\n    },\n    // Hamburger\n    burger: {\n      color: 'inherit',\n      padding: 0, // let the app bar do the padding\n      marginLeft: 0, // default is -12px wtf\n      marginRight: 4, // space between the title\n      [theme.breakpoints.up(600)]: {\n        marginRight: 8, // nitpicky: more room for landscape phones and up\n      },\n      // Hide on larger than wide tablet portrait\n      [theme.breakpoints.up('md')]: {\n        display: 'none',\n      },\n    },\n    subTitle: {\n      fontSize: '0.8rem',\n      [theme.breakpoints.down(600)]: {\n        fontSize: '0.5rem',\n      },\n    },\n    appBarBtns: {\n      color: 'inherit',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(1),\n      },\n    },\n    signupLoginBtn: {\n      marginLeft: theme.spacing(1),\n      // Put login/signup btn into sidebar on mobile, too much 💩 up top\n      [theme.breakpoints.down(500)]: {\n        display: 'none',\n      },\n    },\n    signupLoginMobile: {\n      marginLeft: 4,\n      borderRadius: '100%',\n      background: theme.palette.primary.main,\n      padding: 3,\n      // Put login/signup btn into sidebar on mobile, too much 💩 up top\n      [theme.breakpoints.up(500)]: {\n        display: 'none',\n      },\n    },\n    snugBtnMobile: {\n      [theme.breakpoints.down(400)]: {\n        lineHeight: 1,\n        textAlign: 'center',\n        minWidth: 'auto', // default is not very compatible w/topbar flex\n        padding: 6,\n      },\n    },\n    badge: {\n      backgroundColor: 'hsla(36, 100%, 50%, 0.95)',\n      borderRadius: 7,\n      fontSize: '10px',\n      left: -11,\n      lineHeight: 1,\n      padding: '1px 3px',\n      position: 'absolute',\n      top: -3,\n      zIndex: 1,\n    },\n  }));\n\n  return topBarStyles();\n};\n\nexport const TopBar: FC<NavBarTypes> = ({\n  isHome,\n  toggleDrawerOpen,\n  drawerOpen,\n}) => {\n  const classes = useStyles(isHome);\n  const trigger = useScrollTrigger();\n  const [, loading] = useAuthState(firebase.auth());\n\n  return (\n    <Slide appear={false} direction=\"down\" in={!trigger}>\n      <AppBar position=\"fixed\" className={classes.root}>\n        <Toolbar disableGutters className={classes.toolbar}>\n          <Burger\n            classes={classes}\n            toggleDrawerOpen={toggleDrawerOpen}\n            drawerOpen={drawerOpen}\n          />\n          <Box className={classes.titleAndBadge}>\n            <sup className={classes.badge}>BETA</sup>\n            <TitleWrap classes={classes} />\n          </Box>\n          {!loading && <TopBarBtns classes={classes} />}\n        </Toolbar>\n      </AppBar>\n    </Slide>\n  );\n};\n","import React, { useContext } from 'react';\nimport { FirebaseAuthConsumer } from '@react-firebase/auth';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Typography,\n  IconButton,\n  Menu,\n  MenuItem,\n  ListItemText,\n} from '@material-ui/core';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nimport { logOut } from 'utils/firebase';\nimport { UserContext, GlobalContext } from 'context';\n\nconst useStyles = makeStyles(theme => ({\n  // Kind of a fight to prevent hover stuff on the non-clickable info\n  noBgChangeOnHover: {\n    '* &:hover': {\n      cursor: 'default',\n      backgroundColor: theme.palette.background.paper,\n    },\n  },\n  exitIcon: {\n    marginRight: theme.spacing(4),\n  },\n  avatar: {\n    // Let the top bar gutter have the final say, otherwise it doesn't fit in\n    // phone portrait without wrapping.\n    padding: 0,\n    marginLeft: 2,\n  },\n}));\n\nexport function UserPopoverMenu() {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const history = useHistory();\n  const { dispatch: globalDispatch } = useContext(GlobalContext);\n  const { dispatch: userDispatch } = useContext(UserContext);\n  const classes = useStyles();\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <IconButton\n        aria-label=\"account of current user\"\n        aria-controls=\"menu-appbar\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n        className={classes.avatar}\n      >\n        <AccountCircle />\n      </IconButton>\n      <Menu\n        id=\"customized-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        disableAutoFocusItem\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {/*\n          NOTE: if there is no user.email, this section will look silly. Not \n          sure if this will be the case w/Google auth but if so then need a \n          check to determine if this should be shown.\n        */}\n        <MenuItem className={classes.noBgChangeOnHover} divider>\n          <ListItemText\n            className={classes.noBgChangeOnHover}\n            primary={\n              <>\n                <Typography\n                  variant=\"subtitle2\"\n                  color=\"textSecondary\"\n                  gutterBottom\n                >\n                  Signed in as\n                </Typography>\n                <FirebaseAuthConsumer>\n                  {({ user }) => user.email}\n                </FirebaseAuthConsumer>\n              </>\n            }\n          />\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            handleClose();\n            logOut(history, userDispatch, globalDispatch);\n          }}\n        >\n          <ExitToAppIcon fontSize=\"small\" className={classes.exitIcon} />\n          <ListItemText primary=\"Logout\" />\n        </MenuItem>\n      </Menu>\n    </div>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nimport { SELF_REPORTED_STYLES } from 'config/map';\n\nexport const useStyles = makeStyles(theme => ({\n  root: {\n    // Self-reported markers in map, legend, etc. Includes clusters. Note that\n    // the parent needs a height/width since this child is 100%.\n    '& .self-reported-symbol': {\n      backgroundColor: SELF_REPORTED_STYLES.fillColor,\n      borderWidth: SELF_REPORTED_STYLES.borderWidth,\n      borderStyle: 'solid',\n      borderColor: SELF_REPORTED_STYLES.borderColor,\n      borderRadius: '100%',\n      width: '100%',\n      height: '100%',\n    },\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    display: 'flex',\n    overflow: 'auto',\n    marginTop: '10rem',\n    marginBottom: theme.spacing(8),\n    [theme.breakpoints.up('md')]: {\n      maxWidth: theme.breakpoints.values.sm,\n    },\n    [theme.breakpoints.up('lg')]: {\n      maxWidth: theme.breakpoints.values.md,\n    },\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n","import React, { FC, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Container } from '@material-ui/core';\n\nimport { SiteNavBtns, BackToTopBtn, MobileOffCanvasNav } from 'components';\nimport { TopBar } from 'components/top-bar';\nimport { useStyles } from './dashboard.styles';\n\ntype DashboardTypes = {\n  children: React.ReactNode | null | undefined;\n};\n\n// CRED: https://material-ui.com/getting-started/templates/dashboard/\nexport const Dashboard: FC<DashboardTypes> = ({ children }) => {\n  const classes = useStyles();\n  const isHome = useLocation().pathname === '/';\n  const [drawerOpen, toggleDrawerOpen] = useState<boolean>(false);\n\n  return (\n    <div className={classes.root}>\n      <TopBar\n        isHome={isHome}\n        drawerOpen={drawerOpen}\n        toggleDrawerOpen={toggleDrawerOpen}\n      />\n      <div id=\"back-to-top-anchor\" />\n      {isHome ? (\n        children\n      ) : (\n        <Container component=\"main\" className={classes.content}>\n          {children}\n          <BackToTopBtn />\n        </Container>\n      )}\n      <MobileOffCanvasNav\n        drawerOpen={drawerOpen}\n        toggleDrawerOpen={toggleDrawerOpen}\n      >\n        <SiteNavBtns />\n      </MobileOffCanvasNav>\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\ntype OffCanvasTypes = {\n  drawerOpen: boolean;\n  toggleDrawerOpen: (active: boolean) => void;\n  children?: React.ReactNode;\n};\n\nexport const MobileOffCanvasNav: FC<OffCanvasTypes> = ({\n  drawerOpen,\n  toggleDrawerOpen,\n  children,\n}) => {\n  const theme = useTheme();\n  const wideTabletPortraitAndUp = useMediaQuery(theme.breakpoints.up('md'));\n\n  // Hide on larger than wide tablet portrait. While there is plenty of room\n  // on screens that wide in portrait, if people turn their phones sideways\n  // to landscape, they won't see the menu. 🙄\n  if (wideTabletPortraitAndUp) {\n    return <>{children}</>;\n  }\n\n  return (\n    <Drawer open={drawerOpen} onClose={() => toggleDrawerOpen(false)}>\n      <div\n        role=\"presentation\"\n        onClick={() => toggleDrawerOpen(false)}\n        onKeyDown={() => toggleDrawerOpen(false)}\n      >\n        {children}\n      </div>\n    </Drawer>\n  );\n};\n","import React, { FC } from 'react';\nimport { Grid } from '@material-ui/core';\nimport {\n  EmailIcon,\n  EmailShareButton,\n  FacebookIcon,\n  FacebookShareButton,\n  LinkedinIcon,\n  LinkedinShareButton,\n  PinterestIcon,\n  PinterestShareButton,\n  RedditIcon,\n  RedditShareButton,\n  TwitterIcon,\n  TwitterShareButton,\n  WhatsappIcon,\n  WhatsappShareButton,\n} from 'react-share';\n\nconst url = 'https://www.covidselfreport.org/';\nconst title = 'Have you experienced symptoms of COVID-19?';\nconst summary =\n  'Add your case and get counted for the COVID-19 public data project.';\nconst imgUrl =\n  'https://lh3.googleusercontent.com/zktcQvkd6gRu58UfwKVM1IN0L-PU28WbUtuGxVRKYTi7JHbtfcm0DRDQ93IzcTslmbeLPpNfoHAziQtLsL_niejdfopaVUQi24NgE58V1_vt0Nd1tQuLMkheMyUtxeB-KCSocl674kN8m0FJkPxeKZBZRnYpsDRajLG4TJ14oAijJIO5gM-Xjpp32uyOUH60zUU0hkwqVGosJ7ytJF3rgcRRtFSftS00w-_7ToZOSM7siQ0dF8Jok8w6pE88WyCa1sHPXF3GgOYI5ER9GcRXw_sSUhJiAiNmxi2DoieaL1PGB46ZcT5oc2r6rh-DuCkOgyU42IeclLQMEnjAre6uvt9hq-gFqCM7q6eYRF3hsAx_ombtbQGtWKgL8KY46M5-iAZs_z3HgIBH-e9V8tFuowthY36lhLfG9tHLTDxQyKoD-Z5YlqwNHSU9QK9uGkiZz1QFfbtkAvlG_-uHiTKwxHOgXxp6xsl8-zMppp1ohn24EVa6wQeJtGfsridPaPw82IjgVSjJ6V29pFWMXqjd5pbTsqSus2MuppFA_qLvveYzXcJHjFh3u1DuB0WnOeu-IaDWpirQ3cLpd6LqswvUpewSEuLFIseF1PV6baftlyWaqbTQ0VzJOIupUEwqrD0WA8BxzNzwpHIAJe6t7gX5tlUtBkmuMEPhZfgXnnYgzvT0XklTSCoT8shgLE4wtx2EDlJe=w1920-h978-ft';\nconst sourceAkaAppName = 'COVID-19 Self-reporting Tool';\n\nconst ShareButtonConfig = [\n  <FacebookShareButton url={url} quote={summary}>\n    <FacebookIcon size={32} round />\n  </FacebookShareButton>,\n  <TwitterShareButton url={url} title={`${title} ${summary}`}>\n    <TwitterIcon size={32} round />\n  </TwitterShareButton>,\n  <WhatsappShareButton url={url} title={title}>\n    <WhatsappIcon size={32} round />\n  </WhatsappShareButton>,\n  <LinkedinShareButton\n    url={url}\n    title={title}\n    summary={summary}\n    source={sourceAkaAppName}\n  >\n    <LinkedinIcon size={32} round />\n  </LinkedinShareButton>,\n  <PinterestShareButton url={url} title={title} media={imgUrl}>\n    <PinterestIcon size={32} round />\n  </PinterestShareButton>,\n  <RedditShareButton url={url} title={title}>\n    <RedditIcon size={32} round />\n  </RedditShareButton>,\n  <EmailShareButton url={url} subject={title} body={summary}>\n    <EmailIcon size={32} round />\n  </EmailShareButton>,\n];\n\nexport const ShareButtons: FC = () => {\n  return (\n    <Grid\n      container\n      spacing={1}\n      justify=\"center\"\n      wrap=\"nowrap\"\n      alignItems=\"center\"\n    >\n      {ShareButtonConfig.map((item, i) => (\n        <Grid key={i} item>\n          {item}\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n","import React, { FC } from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { Fab, Popover, Box } from '@material-ui/core';\nimport ShareIcon from '@material-ui/icons/Share';\n\nimport { ShareButtons } from 'components';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  shareBtn: {\n    [theme.breakpoints.down(321)]: { display: 'none' },\n  },\n  shareBtnMobile: {\n    borderRadius: '100%',\n    [theme.breakpoints.up(321)]: {\n      display: 'none',\n    },\n  },\n}));\n\nexport const SharingPopoutMenu: FC = () => {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const classes = useStyles();\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <Fab\n        size=\"small\"\n        aria-label=\"share\"\n        color=\"secondary\"\n        aria-describedby=\"long-menu\"\n        className={classes.shareBtnMobile}\n        onClick={handleClick}\n      >\n        <ShareIcon />\n      </Fab>\n      <Fab\n        variant=\"extended\"\n        size=\"small\"\n        aria-label=\"share\"\n        color=\"secondary\"\n        aria-describedby=\"long-menu\"\n        className={classes.shareBtn}\n        onClick={handleClick}\n      >\n        <ShareIcon />\n        Share\n      </Fab>\n      <Popover\n        id=\"long-menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        transformOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n      >\n        <Box onClick={handleClose} padding={2}>\n          <ShareButtons />\n        </Box>\n      </Popover>\n    </div>\n  );\n};\n","import React, { FC, useState } from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport {\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Button,\n} from '@material-ui/core';\n\ntype SimpleModalTypes = {\n  children: React.ReactNode;\n  title: string;\n  fullScreen?: boolean;\n  leftSideElems?: () => React.ReactNode; // e.g. \"Don't have an account?\"\n  onClose?: () => void;\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  actionBtn: {\n    minWidth: 40,\n  },\n  dialogContent: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}));\n\nexport const SimpleModal: FC<SimpleModalTypes> = ({\n  children,\n  title,\n  leftSideElems,\n  fullScreen = true,\n  onClose,\n}) => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(true);\n\n  const handleClose = () => {\n    setOpen(false);\n\n    if (onClose) {\n      onClose();\n    }\n  };\n\n  return (\n    <Dialog\n      open={open}\n      fullScreen={fullScreen}\n      aria-labelledby=\"form-dialog-title\"\n      onClose={handleClose}\n      fullWidth\n    >\n      <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\n      <DialogContent dividers className={classes.dialogContent}>\n        {children}\n      </DialogContent>\n      <DialogActions>\n        {leftSideElems ? leftSideElems() : null}\n        <Button\n          className={classes.actionBtn}\n          onClick={() => handleClose()}\n          color=\"primary\"\n          size=\"small\"\n        >\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Typography,\n  Link,\n  List,\n  ListItem,\n  ListItemText,\n} from '@material-ui/core';\nimport MapIcon from '@material-ui/icons/Map';\nimport ListIcon from '@material-ui/icons/List';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport InfoIcon from '@material-ui/icons/Info';\n\nconst useStyles = makeStyles(theme => {\n  const navItemSize = 80; // TODO: make consistent with MobileOffCanvas\n  const shadow = '1px 1px 3px hsla(180, 2%, 10%, 0.75)';\n\n  return {\n    list: {\n      paddingTop: theme.spacing(4),\n      [theme.breakpoints.up('md')]: {\n        left: 0,\n        zIndex: 401,\n        position: 'fixed',\n        top: 115, // past top bar on wide portrait and above\n      },\n    },\n    listItem: {\n      height: navItemSize,\n      justifyContent: 'center',\n    },\n    navItemLink: {\n      alignItems: 'center',\n      color: theme.palette.common.white,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      textShadow: shadow,\n      '& svg': {\n        // CRED: https://stackoverflow.com/a/13624469/1048518\n        WebkitFilter: `drop-shadow(${shadow})`,\n        filter: `drop-shadow(${shadow})`,\n      },\n    },\n  };\n});\n\n// The top-level nav btns in sidebar or wherever\nexport const SiteNavBtns: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <List className={classes.list}>\n      <ListItem button component=\"li\" className={classes.listItem}>\n        <Link to=\"/\" component={RouterLink} className={classes.navItemLink}>\n          <MapIcon />\n          <ListItemText\n            primary={<Typography variant=\"subtitle2\">Map</Typography>}\n          />\n        </Link>\n      </ListItem>\n      <ListItem button component=\"li\" className={classes.listItem}>\n        <Link to=\"/list\" component={RouterLink} className={classes.navItemLink}>\n          <ListIcon />\n          <ListItemText\n            primary={<Typography variant=\"subtitle2\">List</Typography>}\n          />\n        </Link>\n      </ListItem>\n      <ListItem button component=\"li\" className={classes.listItem}>\n        <Link\n          to=\"/models\"\n          component={RouterLink}\n          className={classes.navItemLink}\n        >\n          <BarChartIcon />\n          <ListItemText\n            primary={<Typography variant=\"subtitle2\">Models</Typography>}\n          />\n        </Link>\n      </ListItem>\n      <ListItem button component=\"li\" className={classes.listItem}>\n        <Link\n          to=\"/about\"\n          component={RouterLink}\n          className={classes.navItemLink}\n        >\n          <InfoIcon />\n          <ListItemText\n            primary={<Typography variant=\"subtitle2\">About</Typography>}\n          />\n        </Link>\n      </ListItem>\n    </List>\n  );\n};\n","import React, { FC, useContext } from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\n\nimport { GlobalContext } from 'components';\n\nfunction Alert(props: AlertProps) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n// TODO: restore for login/logout success/fail\nexport const CustomSnackbar: FC = () => {\n  const { state, dispatch } = useContext(GlobalContext);\n  const { open, message = '', severity, duration } = state.uiAlert;\n\n  const handleCloseInternal = (\n    event?: React.SyntheticEvent,\n    reason?: string\n  ) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    if (state.uiAlert.open) {\n      dispatch({\n        type: 'TOGGLE_UI_ALERT',\n        payload: {\n          open: false,\n          message: '',\n        },\n      });\n    }\n  };\n\n  return (\n    <Snackbar\n      open={open}\n      autoHideDuration={duration || 4500}\n      onClose={handleCloseInternal}\n      key={message}\n    >\n      <Alert onClose={handleCloseInternal} severity={severity}>\n        {message}\n      </Alert>\n    </Snackbar>\n  );\n};\n","import React from 'react';\nimport { Color } from '@material-ui/lab/Alert';\n\nexport type CountriesFieldsForTotals = {\n  total_confirmed: number;\n  total_deaths: number;\n  total_recovered: number;\n};\n\nexport type AlertPayloadType = {\n  open: boolean;\n  message?: string;\n  severity?: Color;\n  duration?: number | null; // null means the error doesn't auto hide\n};\n\nexport type LoginSignupModalType = 'login' | 'signup' | null;\n\nexport type StoreActionType =\n  | {\n      type: 'TOGGLE_UI_ALERT';\n      payload: AlertPayloadType;\n    }\n  | {\n      type: 'SET_COUNTRY_SYMBOLOGY';\n      payload: keyof CountriesFieldsForTotals;\n    }\n  | { type: 'TOGGLE_LAYER_VISIBILITY'; payload: keyof LayerVisibilityTypes }\n  | {\n      type: 'TOGGLE_LOGIN_SIGNUP_MODAL';\n      payload: LoginSignupModalType;\n    }\n  | { type: 'SHOW_SPLASH'; payload: boolean };\n\nexport type CurrentTotalsTypes = {\n  confirmed: number;\n  deaths: number;\n  recovered: number;\n  selfReported: number;\n};\n\nexport type CountryData = {\n  total_confirmed: number;\n  total_deaths: number;\n  total_recovered: number;\n  new_confirmed: number;\n  new_deaths: number;\n  new_recovered: number;\n  date: Date;\n};\n\n// TODO: use `keyof` to restrict possible values appropriately in Tickers\nexport type LayerVisibilityTypes = {\n  selfReported: boolean;\n  countries: boolean;\n};\n\n// TOOD: get these from existing types\nexport type InitialStateType = {\n  activeCountrySymbKey: keyof CountriesFieldsForTotals;\n  layerVisibility: LayerVisibilityTypes;\n  showSplash: boolean;\n  hasSeenSplash: boolean;\n  uiAlert: AlertPayloadType;\n  loginSignupModal: LoginSignupModalType;\n};\n\nexport type GlobalContextDispatchType = React.Dispatch<StoreActionType>;\n\nexport type Location = {\n  lat: number;\n  lng: number;\n};\n\nexport type Symptom = {\n  isPresent: boolean;\n  startDate: Date | null;\n  endDate: Date | null;\n};\n\nexport enum Symptoms {\n  headache = 'headache',\n  fever = 'fever',\n  shortnessOfBreath = 'shortnessOfBreath',\n  dryCough = 'dryCough',\n  wetCough = 'wetCough',\n  runnyNose = 'runnyNose',\n  wheezing = 'wheezing',\n  chestPain = 'chestPain',\n  bodyAche = 'bodyAche',\n  lightHeadedness = 'lightHeadedness',\n  confusion = 'confusion',\n  fatigue = 'fatigue',\n  nausea = 'nausea',\n  reducedTaste = 'reducedTaste',\n  reducedSmell = 'reducedSmell',\n  soreThroat = 'soreThroat',\n  diarrhea = 'diarrhea',\n  abdominalPain = 'abdominalPain',\n}\n\nexport type SymptomFever = {\n  isPresent: boolean;\n  startDate?: Date | null;\n  endDate?: Date | null;\n  temperature?: number;\n  severity?: number;\n};\n\nexport type SymptomForm = {\n  symptoms: { [index in keyof typeof Symptoms]: SymptomFever };\n  location: Location | null;\n  city: string | null;\n  state: string | null;\n  county: string | null;\n  country: string | null;\n  address: string | undefined;\n  email: string | null;\n  birthMonth: number | null;\n  birthYear: number | null;\n  phoneNumber: string | null;\n  numTimesTested: number | null;\n  tested: boolean | undefined;\n  seenPhysician: boolean | undefined;\n  testedPositive: boolean | undefined;\n  doctorDiagnosis: DoctorDiagnosis;\n  hasAgreedToTerms: boolean;\n};\n\nexport type DoctorDiagnosis =\n  | 'suspected'\n  | 'inconclusive'\n  | 'negative'\n  | undefined;\n\nexport type DispatchFormType = React.Dispatch<SubmissionFormAction>;\n\nexport type DispatchStoreType = React.Dispatch<StoreActionType>;\n\nexport type AddressComponents = {\n  city: string | null;\n  state: string | null;\n  county: string | null;\n  country: string | null;\n};\n\nexport type SubmissionFormAction =\n  | { type: 'TOGGLE_SYMPTOM'; payload: Symptoms }\n  | { type: 'SET_VALUE' }\n  | {\n      type: 'SET_SYMPTOM_START_DATE';\n      payload: { symptom: Symptoms; startDate: Date | null };\n    }\n  | {\n      type: 'SET_SYMPTOM_END_DATE';\n      payload: { symptom: Symptoms; endDate: Date | null };\n    }\n  | { type: 'SET_NUM_TIMES_TESTED'; payload: number }\n  | { type: 'TOGGLE_AGREED' }\n  | { type: 'SET_USER_DATA'; payload: SymptomForm }\n  | { type: 'SET_TESTED'; payload: boolean }\n  | { type: 'SET_ADDRESS'; payload: string }\n  | { type: 'SET_SEEN_PHYSICIAN'; payload: boolean }\n  | { type: 'SET_TESTED_POSITIVE'; payload: boolean }\n  | { type: 'SET_DOCTOR_DIAGNOSIS'; payload: string }\n  | { type: 'RESET_VALUE'; payload: keyof SymptomForm }\n  | { type: 'SET_LOCATION'; payload: Location }\n  | {\n      type: 'SET_ADDRESS_COMPONENTS';\n      payload: AddressComponents;\n    }\n  | { type: 'RESET_USER_DATA' }\n  | {\n      type: 'SET_BIRTH_DATE';\n      payload: { birthMonth: number; birthYear: number };\n    }\n  | { type: 'RESET_SYMPTOMS' };\n","import React, { FC, useContext } from 'react';\nimport { Link as RouteLink } from 'react-router-dom';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Grid,\n  Link,\n  IconButton,\n  Typography,\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { GlobalContext } from 'context';\n\n// Styles for main parent component\nconst useStyles = makeStyles((theme: Theme) => ({\n  dialogTitle: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  closeButton: {\n    color: theme.palette.grey[500],\n    padding: 0,\n  },\n  symptomsBtn: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n  },\n  exitToMapBtn: {\n    marginLeft: 'auto',\n  },\n}));\n\ninterface DialogTitleProps {\n  id: string;\n  children: React.ReactNode;\n  onClose: () => void;\n  classes: {\n    [key: string]: string;\n  };\n}\n\nconst Title: FC<DialogTitleProps> = props => {\n  const { children, classes, onClose, ...other } = props;\n\n  return (\n    <DialogTitle disableTypography {...other} className={classes.dialogTitle}>\n      <Typography variant=\"h6\">{children}</Typography>\n      <IconButton\n        aria-label=\"close\"\n        className={classes.closeButton}\n        onClick={onClose}\n      >\n        <CloseIcon />\n      </IconButton>\n    </DialogTitle>\n  );\n};\n\nexport const SplashScreen: FC = () => {\n  const classes = useStyles();\n  const { state, dispatch } = useContext(GlobalContext);\n\n  const handleClickOpen = () => {\n    dispatch({ type: 'SHOW_SPLASH', payload: true });\n  };\n\n  const handleClose = () => {\n    dispatch({ type: 'SHOW_SPLASH', payload: false });\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open dialog\n      </Button>\n      <Dialog\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={state.showSplash}\n      >\n        <Title\n          id=\"customized-dialog-title\"\n          onClose={handleClose}\n          classes={classes}\n        >\n          COVID-19 Self-reporting Tool\n        </Title>\n        <DialogContent dividers>\n          <Typography align=\"center\" gutterBottom variant=\"h4\">\n            Have you experienced symptoms of COVID-19 in the last four months?\n          </Typography>\n          <Typography variant=\"body1\" align=\"center\" gutterBottom>\n            There is a shortage of COVID-19 test-kits around the world and many\n            of us with symptoms aren't being counted. Add your case to the\n            public map and get counted so that we can estimate the true spread\n            of the virus. Let's fight COVID-19 together.\n          </Typography>\n          <Grid container justify=\"center\">\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              data-cy=\"add-symptoms-splash\"\n              to=\"/self-report\"\n              component={RouteLink}\n              onClick={handleClose}\n              size=\"large\"\n              className={classes.symptomsBtn}\n            >\n              Add symptoms\n            </Button>\n          </Grid>\n          <Typography align=\"center\" gutterBottom variant=\"subtitle2\">\n            This is an open source public data project -{' '}\n            <Link href=\"./about#our-story\">Read our story and learn more</Link>\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={handleClose}\n            color=\"primary\"\n            className={classes.exitToMapBtn}\n          >\n            View symptoms map\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React, { FC } from 'react';\n\nexport const Disclaimer: FC = () => {\n  return (\n    <p className=\"simpler-font\" style={{ fontSize: 11 }}>\n      <b>Disclaimer:&nbsp;</b>\n      This tool will not provide a diagnosis, nor will it count you as a\n      confirmed coronavirus case based on symptoms alone. By providing this\n      information you will help build a better understanding of how widespread\n      COVID-19 may be in your area, and ultimately help communities overcome\n      this crisis together. Your privacy and security come first, and only you\n      control your data.\n    </p>\n  );\n};\n","import React, { FC, useContext } from 'react';\nimport { makeStyles, Theme, useTheme } from '@material-ui/core/styles';\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  Slide,\n  Typography,\n  useMediaQuery,\n} from '@material-ui/core';\nimport { TransitionProps } from '@material-ui/core/transitions';\nimport CheckCircleRoundedIcon from '@material-ui/icons/CheckCircleRounded';\n\nimport { GlobalContext, ShareButtons } from 'components';\nimport { Disclaimer } from './Disclaimer';\nimport { useSubmitted } from '../utils/queries';\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\n  ref: React.Ref<unknown>\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\ninterface SuccessConfModalTypes {\n  open: boolean;\n  setOpen: React.Dispatch<boolean>;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  icon: {\n    color: theme.palette.success.main,\n    marginRight: 4,\n  },\n  dialog: {\n    // DialogTitle child is created dynamically as a <Typography> component. Can\n    // disable that but then we lose the consistency w/the other dialog titles.\n    '& .MuiDialogTitle-root > .MuiTypography-root': {\n      display: 'flex',\n      alignItems: 'center',\n    },\n  },\n  dialogContent: {\n    // The recent global default of `center` looks bad here (too many elems...)\n    justifyContent: 'flex-start',\n  },\n  divider: {\n    margin: theme.spacing(2),\n  },\n}));\n\nexport const SuccessConfModal: FC<SuccessConfModalTypes> = props => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { dispatch } = useContext(GlobalContext);\n  const { open, setOpen } = props;\n  const { data: submissions } = useSubmitted(dispatch);\n  const smallAndUp = useMediaQuery(theme.breakpoints.up('sm'));\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Dialog\n      open={open}\n      fullScreen={!smallAndUp}\n      data-cy=\"successful-submission\"\n      transitionDuration={{ enter: 900, exit: 400 }}\n      TransitionComponent={Transition}\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-slide-title\"\n      aria-describedby=\"alert-dialog-slide-description\"\n      className={classes.dialog}\n    >\n      <DialogTitle id=\"alert-dialog-slide-title\">\n        <CheckCircleRoundedIcon className={classes.icon} />\n        Submission sent\n      </DialogTitle>\n      <DialogContent dividers className={classes.dialogContent}>\n        <Box textAlign=\"center\" paddingRight={2} paddingLeft={2}>\n          <Typography>\n            Thank you for contributing! To date,{' '}\n            {submissions && submissions.length} users like you have added\n            themselves to the world map.\n          </Typography>\n        </Box>\n        <Divider variant=\"middle\" className={classes.divider} />\n        <Box padding={2}>\n          <ShareButtons />\n        </Box>\n        <Typography variant=\"h5\">What you can do next:</Typography>\n        <ol className=\"simpler-font\" style={{ fontSize: 16, paddingLeft: 30 }}>\n          <li>\n            Share this with your friends and family by using the share buttons\n            above.\n          </li>\n          <li>\n            Provide your{' '}\n            <a\n              target=\"_blank\"\n              className=\"obvious-link\"\n              rel=\"noopener noreferrer\"\n              href=\"https://docs.google.com/forms/d/e/1FAIpQLSfkQJMihQUlA6scYvjr1A1OZiXGRRxQLkD1YIiklGDq5YTclQ/viewform?usp=sf_link\"\n            >\n              thoughts and feedback\n            </a>\n            .\n          </li>\n          <li>\n            Learn more about your symptoms at the{' '}\n            <a\n              target=\"_blank\"\n              className=\"obvious-link\"\n              rel=\"noopener noreferrer\"\n              href=\"https://www.who.int/emergencies/diseases/novel-coronavirus-2019\"\n            >\n              World Health Organization’s COVID-19 page\n            </a>\n            .\n          </li>\n          <li>\n            Come back soon and get updates on trends of potential and confirmed\n            infections in your area.\n          </li>\n        </ol>\n        <Disclaimer />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import React, { FC, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Typography, Dialog } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  browserMessage: {\n    alignItems: 'center',\n    flex: 1,\n    justifyContent: 'center',\n    textAlign: 'center',\n    padding: `${theme.spacing(4)}px ${theme.spacing(3)}px `,\n  },\n}));\n\nexport const UnsupportedBrowserMsg: FC = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [open, setOpen] = useState(true);\n\n  const handleClose = () => {\n    setOpen(false);\n    history.push('/');\n  };\n\n  return (\n    <Dialog\n      open={open}\n      aria-labelledby=\"form-dialog-title\"\n      fullWidth\n      maxWidth=\"sm\"\n      onClose={handleClose}\n    >\n      <div className={classes.browserMessage}>\n        <Typography align=\"center\" gutterBottom variant=\"h4\">\n          Unsupported Browser\n        </Typography>\n        <p>\n          To submit your report, please open this site in a supported browser\n          such as Safari or Google Chrome.\n        </p>\n        <Button color=\"secondary\" variant=\"contained\" onClick={handleClose}>\n          Exit to map\n        </Button>\n      </div>\n    </Dialog>\n  );\n};\n","import React, { FC, useState } from 'react';\nimport {\n  Paper,\n  Grid,\n  TextField,\n  Button,\n  Fade,\n  CircularProgress,\n} from '@material-ui/core';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport { makeStyles } from '@material-ui/styles';\nimport firebase from 'firebase/app';\n\nconst useStyles = makeStyles({\n  root: {\n    padding: '20px',\n  },\n  marginTop: {\n    marginTop: '15px',\n  },\n});\n\ntype VerifyEmailType = {\n  afterVerification?: () => void;\n};\n\nexport const VerifyEmailForm: FC<VerifyEmailType> = ({ afterVerification }) => {\n  const [email, setEmail] = useState<string>('');\n  const [emailError, setEmailError] = useState<boolean>(false);\n  const [emailErrorMessage, setEmailErrorMessage] = useState<string>('');\n  const [sent, setSent] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(false);\n  const classes = useStyles();\n\n  const handleEmailChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setEmail(event.target.value);\n  };\n\n  const handleFirebaseError = (code: string, message: string) => {\n    switch (code) {\n      case 'auth/invalid-email':\n        setEmailError(true);\n        setEmailErrorMessage('Invalid email');\n        break;\n      case 'auth/user-not-found':\n        setEmailError(true);\n        setEmailErrorMessage('User does not exist');\n        break;\n      default:\n        alert(message);\n        break;\n    }\n  };\n\n  const resetErrors = () => {\n    setEmailError(false);\n    setEmailErrorMessage('');\n  };\n\n  const handleVerifyEmail = async (event: React.MouseEvent) => {\n    event.preventDefault();\n\n    resetErrors();\n\n    setLoading(true);\n    setEmail('');\n    await firebase\n      .auth()\n      .sendPasswordResetEmail(email)\n      .then(() => {\n        if (afterVerification) {\n          afterVerification();\n        }\n        setSent(true);\n        setTimeout(() => {\n          setSent(false);\n        }, 5000);\n      })\n      .catch(err => {\n        handleFirebaseError(err.code, err.message);\n      });\n    setLoading(false);\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <div>\n        <Grid container spacing={8} alignItems=\"flex-end\">\n          <Grid item md sm xs={12}>\n            <TextField\n              id=\"email\"\n              label=\"Enter your email\"\n              type=\"email\"\n              value={email}\n              onChange={handleEmailChange}\n              error={emailError}\n              helperText={emailErrorMessage}\n              fullWidth\n              required\n            />\n          </Grid>\n        </Grid>\n        <Grid\n          container\n          justify=\"center\"\n          alignItems=\"center\"\n          className={classes.marginTop}\n        >\n          <Grid item xs={12}>\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              style={{ textTransform: 'none', marginRight: '20px' }}\n              onClick={handleVerifyEmail}\n              disabled={loading}\n            >\n              Verify Email\n            </Button>\n          </Grid>\n          {loading && (\n            <Grid item xs={12}>\n              <CircularProgress />\n            </Grid>\n          )}\n        </Grid>\n        <Grid container>\n          <Grid item md sm xs={12}>\n            <Fade in={sent}>\n              <Alert severity=\"success\" className={classes.marginTop}>\n                <AlertTitle>Verification Email Sent</AlertTitle>\n                You should receive an email in a few minutes to reset your\n                password\n              </Alert>\n            </Fade>\n          </Grid>\n        </Grid>\n      </div>\n    </Paper>\n  );\n};\n","export const camelCaseToLabel = (original: string) => {\n  const result = original.replace(/([A-Z])/g, ' $1');\n  return result.charAt(0).toUpperCase() + result.slice(1);\n};\n","import React, { FC, useState, useContext } from 'react';\nimport {\n  DialogTitle,\n  DialogContent,\n  FormGroup,\n  Checkbox,\n  FormControlLabel,\n  Grid,\n  Button,\n  Typography,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport { camelCaseToLabel } from 'utils/strings';\nimport { UserContext } from 'context';\nimport { Symptoms } from 'context/types';\n// TODO: maybe fancy upgrade later:\n// https://github.com/mui-org/material-ui-pickers/releases/tag/v4.0.0-alpha.5\n\nconst useStyles = makeStyles(theme => ({\n  dialogTitle: {\n    padding: `4px ${theme.spacing(2)}px`,\n  },\n  center: {\n    paddingTop: 30,\n    paddingLeft: 10,\n  },\n  checkbox: {\n    padding: 4,\n    [theme.breakpoints.up('sm')]: {\n      padding: theme.spacing(1),\n    },\n  },\n  firstPageBtnsWrap: {\n    marginTop: 6,\n  },\n  datePicker: {\n    marginLeft: 5,\n    marginRight: 5,\n  },\n  marginTop: {\n    marginTop: 20,\n  },\n  link: {\n    color: theme.palette.grey['900'],\n  },\n}));\n\ntype SymptomStepType = {\n  setActiveStep: Function;\n};\n\nexport const SymptomStep: FC<SymptomStepType> = ({ setActiveStep }) => {\n  const classes = useStyles();\n  const { state: formState, dispatch: dispatchForm } = useContext(UserContext);\n\n  // This is to create a grid layout, split into two groups\n  const allSymptoms = Object.keys(Symptoms) as Array<keyof typeof Symptoms>;\n  const halfwayThrough = Math.floor(allSymptoms.length / 2);\n  const firstHalfSymptoms: Array<keyof typeof Symptoms> = allSymptoms.splice(\n    0,\n    halfwayThrough\n  );\n  const lastHalfSymptoms: Array<keyof typeof Symptoms> = allSymptoms;\n  const [showDates, setShowDates] = useState<boolean>(false);\n\n  const hasSymptoms = () => {\n    return getSymptoms().length > 0;\n  };\n\n  // this should not return an array of string\n  const getSymptoms = () => {\n    return Object.keys(formState.symptoms).filter(\n      // @ts-ignore\n      (symptom: any) => formState.symptoms[symptom].isPresent\n    );\n  };\n\n  const handleStartDateChange = (\n    date: Date | null,\n    symptom: keyof typeof Symptoms\n  ) => {\n    dispatchForm({\n      type: 'SET_SYMPTOM_START_DATE',\n      // @ts-ignore\n      payload: { symptom: symptom, startDate: date },\n    });\n  };\n\n  const handleEndDateChange = (\n    date: Date | null,\n    symptom: keyof typeof Symptoms\n  ) => {\n    dispatchForm({\n      type: 'SET_SYMPTOM_END_DATE',\n      // @ts-ignore\n      payload: { symptom: symptom, endDate: date },\n    });\n  };\n\n  const noSymptoms = () => {\n    dispatchForm({\n      type: 'RESET_SYMPTOMS',\n    });\n    setActiveStep(1);\n  };\n\n  return (\n    <>\n      {!showDates ? (\n        <>\n          <DialogTitle id=\"form-dialog-title\">\n            What are your symptoms?\n          </DialogTitle>\n          <DialogContent dividers>\n            <Grid container>\n              <Grid item xs={6}>\n                {firstHalfSymptoms.map((symptom, idx) => (\n                  <FormGroup key={idx}>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          size=\"small\"\n                          className={classes.checkbox}\n                          checked={formState.symptoms[symptom].isPresent}\n                          onChange={() =>\n                            dispatchForm({\n                              type: 'TOGGLE_SYMPTOM',\n                              payload: Symptoms[symptom],\n                            })\n                          }\n                          name={Symptoms[symptom]}\n                          color=\"primary\"\n                        />\n                      }\n                      label={camelCaseToLabel(Symptoms[symptom])}\n                    />\n                  </FormGroup>\n                ))}\n              </Grid>\n              <Grid item xs={6}>\n                {lastHalfSymptoms.map((symptom, idx) => (\n                  <FormGroup key={idx}>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          size=\"small\"\n                          className={classes.checkbox}\n                          checked={formState.symptoms[symptom].isPresent}\n                          onChange={() =>\n                            dispatchForm({\n                              type: 'TOGGLE_SYMPTOM',\n                              payload: Symptoms[symptom],\n                            })\n                          }\n                          name={Symptoms[symptom]}\n                          color=\"primary\"\n                        />\n                      }\n                      label={camelCaseToLabel(Symptoms[symptom])}\n                    />\n                  </FormGroup>\n                ))}\n              </Grid>\n            </Grid>\n            <Grid\n              container\n              justify=\"center\"\n              spacing={2}\n              className={classes.firstPageBtnsWrap}\n            >\n              <Grid item>\n                <Button\n                  size=\"small\"\n                  color=\"primary\"\n                  variant=\"outlined\"\n                  onClick={() => noSymptoms()}\n                >\n                  I have no symptoms\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button\n                  size=\"small\"\n                  onClick={() => setShowDates(!showDates)}\n                  color=\"secondary\"\n                  variant=\"contained\"\n                  disabled={!showDates && !hasSymptoms()}\n                >\n                  Set Symptom Dates\n                </Button>\n              </Grid>\n            </Grid>\n          </DialogContent>\n        </>\n      ) : (\n        <>\n          <DialogTitle className={classes.dialogTitle}>\n            When did you have these symptoms?\n          </DialogTitle>\n          <DialogContent dividers>\n            <Grid container>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                {getSymptoms().map((\n                  symptom: any // TODO: fix type any\n                ) => (\n                  <>\n                    <Grid item xs={4}>\n                      <Typography className={classes.center}>\n                        {camelCaseToLabel(symptom)}\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={4}>\n                      <KeyboardDatePicker\n                        className={classes.datePicker}\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"MM/dd/yyyy\"\n                        margin=\"normal\"\n                        label=\"Start Date\"\n                        maxDate={new Date()}\n                        // @ts-ignore\n                        value={formState.symptoms[symptom].startDate}\n                        onChange={date =>\n                          handleStartDateChange(date, symptom as any)\n                        }\n                        KeyboardButtonProps={{\n                          'aria-label': 'change date',\n                        }}\n                      />\n                    </Grid>\n                    <Grid item xs={4}>\n                      <KeyboardDatePicker\n                        className={classes.datePicker}\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"MM/dd/yyyy\"\n                        margin=\"normal\"\n                        label=\"End Date\"\n                        // @ts-ignore\n                        minDate={formState.symptoms[symptom].startDate}\n                        maxDate={new Date()}\n                        // @ts-ignore\n                        value={formState.symptoms[symptom].endDate}\n                        onChange={date =>\n                          handleEndDateChange(date, symptom as any)\n                        }\n                      />\n                    </Grid>\n                  </>\n                ))}\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <Grid container justify=\"center\">\n              <Grid item>\n                <Button\n                  size=\"small\"\n                  onClick={() => setShowDates(!showDates)}\n                  variant=\"outlined\"\n                >\n                  Go Back to Symptoms\n                </Button>\n              </Grid>\n            </Grid>\n          </DialogContent>\n        </>\n      )}\n    </>\n  );\n};\n","import React, { FC } from 'react';\nimport { SymptomForm, DispatchFormType } from 'context/types';\nimport {\n  FormControlLabel,\n  DialogTitle,\n  DialogContent,\n  Grid,\n  Radio,\n  RadioGroup,\n  FormControl,\n  FormLabel,\n  InputLabel,\n  Select,\n  MenuItem,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MaterialUiPickersDate } from '@material-ui/pickers/typings/date';\n\nconst useStyles = makeStyles(theme => ({\n  dialogTitle: {\n    padding: `4px ${theme.spacing(2)}px`,\n  },\n  dropdown: {\n    marginTop: 10,\n  },\n  selector: {\n    marginBottom: 10,\n  },\n  datePicker: {\n    marginBottom: 20,\n  },\n  formLabel: {\n    marginTop: theme.spacing(1),\n  },\n}));\n\ntype TestingStepType = {\n  formState: SymptomForm;\n  dispatchForm: DispatchFormType;\n};\n\nexport const TestingStep: FC<TestingStepType> = ({\n  formState,\n  dispatchForm,\n}) => {\n  const classes = useStyles();\n\n  const handlePhysicianDiagnosis = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    dispatchForm({ type: 'SET_DOCTOR_DIAGNOSIS', payload: event.target.value });\n  };\n\n  const handleBirthDate = (date: MaterialUiPickersDate) => {\n    if (date) {\n      const month = date.getMonth() + 1;\n      const year = date.getFullYear();\n      dispatchForm({\n        type: 'SET_BIRTH_DATE',\n        payload: { birthMonth: month, birthYear: year },\n      });\n    }\n  };\n\n  const getBirthMonthYear = () => {\n    const month = formState.birthMonth;\n    const year = formState.birthYear;\n    if (month && year) {\n      const date = new Date();\n      date.setFullYear(year);\n      date.setMonth(month - 1);\n      return date;\n    }\n    return null;\n  };\n\n  return (\n    <>\n      <DialogTitle id=\"form-dialog-title\" className={classes.dialogTitle}>\n        Test Results\n      </DialogTitle>\n      <DialogContent dividers>\n        <Grid container>\n          <FormControl>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <DatePicker\n                className={classes.datePicker}\n                views={['year', 'month']}\n                value={getBirthMonthYear()}\n                onChange={handleBirthDate}\n                maxDate={new Date()}\n                label=\"Birth Month/Year\"\n              />\n            </MuiPickersUtilsProvider>\n            <FormLabel className={classes.formLabel}>\n              Have you been tested for CoVID-19?\n            </FormLabel>\n            <RadioGroup\n              row\n              value={String(formState.tested)}\n              onChange={event => {\n                dispatchForm({\n                  type: 'SET_TESTED',\n                  payload: event.target.value === 'true',\n                });\n              }}\n            >\n              <FormControlLabel\n                data-cy=\"tested-covid-yes\"\n                control={<Radio value=\"true\" />}\n                label=\"Yes\"\n              />\n              <FormControlLabel\n                data-cy=\"tested-covid-no\"\n                control={<Radio value=\"false\" />}\n                label=\"No\"\n              />\n            </RadioGroup>\n          </FormControl>\n          {formState.tested && (\n            <>\n              <Grid item xs={12}>\n                <InputLabel\n                  id=\"demo-simple-select-label\"\n                  className={classes.dropdown}\n                >\n                  How many times?\n                </InputLabel>\n                <Select\n                  labelId=\"demo-simple-select-label\"\n                  id=\"demo-simple-select\"\n                  value={formState.numTimesTested}\n                  className={classes.selector}\n                  onChange={event =>\n                    dispatchForm({\n                      type: 'SET_NUM_TIMES_TESTED',\n                      payload: event.target.value as number,\n                    })\n                  }\n                >\n                  <MenuItem value={1}>One</MenuItem>\n                  <MenuItem value={2}>Two</MenuItem>\n                  <MenuItem value={3}>Three</MenuItem>\n                </Select>\n              </Grid>\n              <FormControl>\n                <FormLabel className={classes.formLabel}>\n                  Did you test positive?\n                </FormLabel>\n                <RadioGroup\n                  row\n                  value={String(formState.testedPositive)}\n                  onChange={event => {\n                    dispatchForm({\n                      type: 'SET_TESTED_POSITIVE',\n                      payload: event.target.value === 'true',\n                    });\n                  }}\n                >\n                  <FormControlLabel\n                    control={<Radio value=\"true\" />}\n                    label=\"Yes\"\n                  />\n                  <FormControlLabel\n                    control={<Radio value=\"false\" />}\n                    label=\"No\"\n                  />\n                </RadioGroup>\n              </FormControl>\n            </>\n          )}\n          {formState.tested === false && (\n            <Grid item xs={12}>\n              <FormControl>\n                <FormLabel className={classes.formLabel}>\n                  Have you seen a physician?\n                </FormLabel>\n                <RadioGroup\n                  row\n                  value={String(formState.seenPhysician)}\n                  onChange={event => {\n                    dispatchForm({\n                      type: 'SET_SEEN_PHYSICIAN',\n                      payload: event.target.value === 'true',\n                    });\n                  }}\n                >\n                  <FormControlLabel\n                    control={\n                      <Radio data-cy=\"seen-physician-yes\" value=\"true\" />\n                    }\n                    label=\"Yes\"\n                  />\n                  <FormControlLabel\n                    control={\n                      <Radio data-cy=\"seen-physician-no\" value=\"false\" />\n                    }\n                    label=\"No\"\n                  />\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n          )}\n          {formState.seenPhysician === true && (\n            <FormControl>\n              <FormLabel className={classes.formLabel}>\n                What did your physician say?\n              </FormLabel>\n              <RadioGroup\n                row\n                value={String(formState.doctorDiagnosis)}\n                onChange={handlePhysicianDiagnosis}\n              >\n                <FormControlLabel\n                  control={<Radio value=\"suspected\" />}\n                  label=\"Suspected CoVID-19\"\n                />\n                <FormControlLabel\n                  control={<Radio value=\"inconclusive\" />}\n                  label=\"Inconclusive\"\n                />\n                <FormControlLabel\n                  control={<Radio value=\"negative\" />}\n                  label=\"Definitely not CoVID-19\"\n                />\n              </RadioGroup>\n            </FormControl>\n          )}\n        </Grid>\n      </DialogContent>\n    </>\n  );\n};\n","import React, { FC, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DialogTitle, DialogContent, TextField } from '@material-ui/core';\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from 'react-places-autocomplete';\nimport { grey } from '@material-ui/core/colors';\nimport 'date-fns';\n\nimport { Location } from 'context/types';\nimport { UserContext } from 'context';\n\nconst useStyles = makeStyles(theme => ({\n  dialogTitle: {\n    padding: `4px ${theme.spacing(2)}px`,\n  },\n  dialogText: {\n    padding: `4px ${theme.spacing(2)}px`,\n  },\n}));\n\nexport const LocationDetailsStep: FC = () => {\n  const classes = useStyles();\n  const { state: formState, dispatch: dispatchForm } = useContext(UserContext);\n\n  const handleSelectAddress = (newAddress: string) => {\n    geocodeByAddress(newAddress)\n      .then((results: any) => {\n        const addressComponents: {\n          city: string | null;\n          county: string | null;\n          state: string | null;\n          country: string | null;\n        } = {\n          city: null,\n          county: null,\n          state: null,\n          country: null,\n        };\n\n        // Note that this is for STORING the location data, not fetching it. The\n        // latter is controlled by the `searchOptions` of <PlacesAutocomplete>\n        // component. So even if we want to fetch all the way down to postal\n        // code level, we still need to store the data at\n        // city/county/state/country levels. See additional in-code comments in\n        // related methods...\n        results[0].address_components.forEach((component: any) => {\n          const { types, long_name } = component;\n\n          // Docs for this mess\n          // developers.google.com/maps/documentation/geocoding/intro#Types\n          if (\n            types.includes('locality') ||\n            types.includes('neighborhood') ||\n            types.includes('colloquial_area') ||\n            types.includes('sublocality') ||\n            types.includes('sublocality_level_1') ||\n            types.includes('sublocality_level_2') ||\n            types.includes('sublocality_level_3') ||\n            types.includes('sublocality_level_4') ||\n            types.includes('sublocality_level_5')\n          ) {\n            addressComponents.city = long_name;\n          } else if (types.includes('administrative_area_level_1')) {\n            addressComponents.state = long_name;\n          } else if (types.includes('administrative_area_level_2')) {\n            addressComponents.county = long_name;\n          } else if (types.includes('country')) {\n            addressComponents.country = long_name;\n          }\n        });\n\n        dispatchForm({\n          type: 'SET_ADDRESS_COMPONENTS',\n          payload: addressComponents,\n        });\n\n        return results;\n      })\n      .then((results: any) => getLatLng(results[0]))\n      .then((latLng: Location) => {\n        dispatchForm({ type: 'SET_ADDRESS', payload: newAddress });\n        dispatchForm({ type: 'SET_LOCATION', payload: latLng });\n      })\n      .catch(alert); // better than console error for now\n  };\n\n  return (\n    <>\n      <DialogTitle className={classes.dialogTitle}>\n        Where were you when your symptoms began?\n      </DialogTitle>\n      <DialogContent dividers>\n        <PlacesAutocomplete\n          value={formState.address}\n          onChange={value =>\n            dispatchForm({\n              type: 'SET_ADDRESS',\n              payload: value,\n            })\n          }\n          onSelect={handleSelectAddress}\n          // https://developers.google.com/places/supported_types#table3\n          // `geocode` basically returns everything except businesses, so it\n          // must be filtered client-side. See related in-code comments for more\n          // details.\n          searchOptions={{ types: ['geocode'] }}\n          debounce={300}\n          shouldFetchSuggestions={\n            !!formState.address && formState.address.length > 2\n          }\n        >\n          {({\n            getInputProps,\n            suggestions,\n            getSuggestionItemProps,\n            loading,\n          }) => (\n            <>\n              <TextField\n                data-cy=\"location\"\n                {...getInputProps({\n                  helperText:\n                    'If you experienced no symptoms, use current city',\n                  placeholder: 'Enter your city ...',\n                  className: 'location-search-input',\n                })}\n              />\n              <div className=\"autocomplete-dropdown-container\">\n                {loading && <div>Loading...</div>}\n                {suggestions\n                  // Do not include overly broad or overly specific locations.\n                  // This exact set cannot be accomplished using `searchOptions`\n                  // in the Gmaps API, it must be filtered client-side. Note\n                  // that the administrative levels mean different things in\n                  // each country, but overall the below exclusions do what we\n                  // want.\n                  .filter(\n                    suggestion =>\n                      ![\n                        'administrative_area_level_1', // state\n                        'administrative_area_level_2', // county\n                        'country',\n                        'postal_code', // zip code or similar\n                        'premise', // address-ish\n                        'street_address', // address\n                        'subpremise', // address-ish\n                      ].includes(suggestion.types[0])\n                  )\n                  .map(suggestion => {\n                    const className = suggestion.active\n                      ? 'suggestion-item--active'\n                      : 'suggestion-item';\n\n                    // inline style for demonstration purpose\n                    const style = suggestion.active\n                      ? { backgroundColor: grey['600'], cursor: 'pointer' }\n                      : { backgroundColor: '#424242', cursor: 'pointer' };\n\n                    return (\n                      <div\n                        data-cy={`location-suggestion`}\n                        {...getSuggestionItemProps(suggestion, {\n                          className,\n                          style,\n                        })}\n                      >\n                        <span>{suggestion.description}</span>\n                      </div>\n                    );\n                  })}\n              </div>\n            </>\n          )}\n        </PlacesAutocomplete>\n      </DialogContent>\n    </>\n  );\n};\n","import React, { FC } from 'react';\nimport { DialogTitle, DialogContent } from '@material-ui/core';\nimport 'firebase/auth';\nimport { IfFirebaseAuthed, IfFirebaseUnAuthed } from '@react-firebase/auth';\n\nimport { SignupForm } from 'components/signup';\n\nexport const RegistrationStep: FC = () => {\n  return (\n    <>\n      <DialogTitle>Submit</DialogTitle>\n      <DialogContent dividers>\n        <IfFirebaseAuthed>\n          {({ user }) => (\n            <div className=\"simpler-font\" style={{ textAlign: 'center' }}>\n              <h4 style={{ fontWeight: 'normal' }}>\n                Almost there! Click the <b>SUBMIT</b> button below to upload\n                your case.\n              </h4>\n              <p\n                style={{ fontSize: '0.75rem', marginLeft: 20, marginRight: 20 }}\n              >\n                You are logged in as {user.email} and are ready to submit your\n                case. Just click <b>SUBMIT</b> and you are all set.\n              </p>\n            </div>\n          )}\n        </IfFirebaseAuthed>\n        <IfFirebaseUnAuthed>{() => <SignupForm />}</IfFirebaseUnAuthed>\n      </DialogContent>\n    </>\n  );\n};\n","import React, { useState, useContext, FC, useReducer } from 'react';\nimport { Link as RouteLink, useHistory } from 'react-router-dom';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport {\n  Dialog,\n  DialogActions,\n  Button,\n  Stepper,\n  Step,\n  StepLabel,\n  CircularProgress,\n  useMediaQuery,\n} from '@material-ui/core';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { IfFirebaseUnAuthed } from '@react-firebase/auth';\n\nimport firebase from 'config/firebase';\nimport { postFormData } from 'utils/api';\nimport { signUp } from 'utils/firebase';\nimport { GlobalContext } from 'components';\nimport {\n  SymptomStep,\n  TestingStep,\n  LocationDetailsStep,\n  RegistrationStep,\n} from 'components/submission/steps';\nimport { UserContext } from 'context';\nimport {\n  formReducer,\n  emailSignupFormInitialState,\n  SignInLink,\n} from 'components/signup';\n\nconst getSteps = () => {\n  return ['Symptoms', 'Tests', 'Location', 'Submit'];\n};\n\nconst useStyles = makeStyles(theme => ({\n  // TODO: allow horizontal scrolling in stepper but not in the rest of modal\n  stepper: {\n    padding: `12px 4px ${theme.spacing(1)}px`,\n  },\n}));\n\ninterface ModalTypes {\n  setSuccessConfOpen: React.Dispatch<boolean>;\n}\n\nexport const Modal: FC<ModalTypes> = ({ setSuccessConfOpen }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const history = useHistory();\n  const [user] = useAuthState(firebase.auth());\n  const [activeStep, setActiveStep] = useState<number>(0);\n  const [submitting, setSubmitting] = useState<boolean>(false);\n  const {\n    state: symptomsFormState,\n    dispatch: dispatchSymptomsForm,\n  } = useContext(UserContext);\n  const { dispatch } = useContext(GlobalContext);\n  const [signupFormState, signupFormDispatch] = useReducer(\n    formReducer,\n    emailSignupFormInitialState\n  );\n  const steps = getSteps();\n  const smallAndUp = useMediaQuery(theme.breakpoints.up('sm')); // >= 600ish px\n\n  const handleNext = () => {\n    // Next button on registration acts as signup\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  // logic for handling when you can click next, depending on the step\n  const isNextDisabled = (step: number): boolean => {\n    switch (step) {\n      case 1:\n        // All the last steps of this form\n        if (\n          symptomsFormState.seenPhysician === false ||\n          symptomsFormState.testedPositive !== undefined ||\n          symptomsFormState.doctorDiagnosis !== undefined\n        ) {\n          return false;\n        }\n\n        return true;\n      case 2:\n        return !symptomsFormState.location;\n      case 3:\n        return !signupFormState.captcha;\n      default:\n        return false;\n    }\n  };\n\n  const submitSymptomsForm = async (firebaseUser: firebase.User | null) => {\n    if (firebaseUser) {\n      try {\n        const idToken = await firebaseUser.getIdToken(true);\n        setSubmitting(true);\n        await postFormData(symptomsFormState, idToken);\n        history.push('/');\n        setSuccessConfOpen(true);\n      } catch (err) {\n        dispatch({\n          type: 'TOGGLE_UI_ALERT',\n          payload: {\n            open: true,\n            message: 'Something went wrong. Your entry was not submitted.',\n            severity: 'error',\n          },\n        });\n        setSubmitting(false);\n      }\n    }\n  };\n\n  const handleSignupError = (code: string, message: string) => {\n    switch (code) {\n      case 'auth/email-already-in-use':\n        signupFormDispatch({\n          type: 'SET_FIELD',\n          payload: {\n            field: 'emailError',\n            value: 'That email is already in use',\n          },\n        });\n        break;\n      case 'auth/invalid-email':\n        signupFormDispatch({\n          type: 'SET_FIELD',\n          payload: {\n            field: 'emailError',\n            value: 'Invalid email',\n          },\n        });\n        break;\n      // I don't know why this is an error in the first place\n      case 'auth/cancelled-popup-request':\n        break;\n      default:\n        dispatch({\n          type: 'TOGGLE_UI_ALERT',\n          payload: {\n            open: true,\n            message,\n            severity: 'error',\n            duration: 15000, // it's not actually 15 seconds, more like 6 or 7\n          },\n        });\n        break;\n    }\n  };\n\n  const handleSubmit = async () => {\n    try {\n      if (user) {\n        await submitSymptomsForm(user);\n      }\n      // hasn't registered yet\n      else {\n        await signUp(\n          signupFormState.email,\n          signupFormState.password,\n          signupFormState.password2\n        );\n\n        setSubmitting(true);\n        const { currentUser } = firebase.auth();\n        await submitSymptomsForm(currentUser);\n      }\n    } catch (err) {\n      setSubmitting(false);\n      handleSignupError(err.code, err.message);\n    }\n  };\n\n  const isLastStep = () => {\n    return (\n      user &&\n      symptomsFormState.location &&\n      symptomsFormState.hasAgreedToTerms &&\n      activeStep === steps.length - 1\n    );\n  };\n\n  const canSubmit = () => {\n    if (user) {\n      return symptomsFormState.hasAgreedToTerms;\n    }\n    return symptomsFormState.hasAgreedToTerms && signupFormState.captcha;\n  };\n\n  const displayStep = (step: number) => {\n    switch (step) {\n      case 0:\n        return <SymptomStep setActiveStep={setActiveStep} />;\n      case 1:\n        return (\n          <TestingStep\n            formState={symptomsFormState}\n            dispatchForm={dispatchSymptomsForm}\n          />\n        );\n      case 2:\n        return <LocationDetailsStep />;\n      case 3:\n        return <RegistrationStep />;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <Dialog\n      open\n      aria-labelledby=\"form-dialog-title\"\n      fullWidth\n      fullScreen={!smallAndUp}\n    >\n      <Stepper activeStep={activeStep} className={classes.stepper}>\n        {steps.map(label => {\n          const stepProps: { completed?: boolean } = {};\n          const labelProps: { optional?: React.ReactNode } = {};\n          return (\n            <Step key={label} {...stepProps}>\n              <StepLabel {...labelProps}>{label}</StepLabel>\n            </Step>\n          );\n        })}\n      </Stepper>\n      {displayStep(activeStep)}\n      <DialogActions>\n        <IfFirebaseUnAuthed>\n          {() => (\n            <div>\n              Have an account? <SignInLink />\n            </div>\n          )}\n        </IfFirebaseUnAuthed>\n        <Button size=\"small\" to=\"/\" component={RouteLink} color=\"primary\">\n          Cancel\n        </Button>\n        <Button\n          size=\"small\"\n          onClick={handleBack}\n          color=\"primary\"\n          disabled={activeStep === 0 || submitting}\n        >\n          Back\n        </Button>\n        {activeStep < steps.length - 1 && !isLastStep() ? (\n          <Button\n            size=\"small\"\n            data-cy=\"next-button\"\n            onClick={handleNext}\n            color=\"secondary\"\n            variant=\"contained\"\n            disabled={isNextDisabled(activeStep)}\n          >\n            Next\n          </Button>\n        ) : (\n          <Button\n            size=\"small\"\n            onClick={handleSubmit}\n            color=\"secondary\"\n            variant=\"contained\"\n            data-cy=\"submit-button\"\n            disabled={!canSubmit() || submitting}\n          >\n            {!submitting ? 'Submit' : <CircularProgress size={28} />}\n          </Button>\n        )}\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core';\nimport grey from '@material-ui/core/colors/grey';\n\n// Easy access to theme properties when used in `createMuiTheme` overrides\n// CRED: https://stackoverflow.com/a/57127040/1048518\nconst covidTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: grey,\n  },\n  typography: {\n    fontFamily: [\n      'Bebas Neue',\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n    ].join(','),\n    fontSize: 18,\n  },\n});\n\n// Dialogs with dividers are a separate class from those without\nconst dialogContentPadding = {\n  padding: `${covidTheme.spacing(3)}px ${covidTheme.spacing(2)}px`,\n  [covidTheme.breakpoints.up('sm')]: {\n    padding: covidTheme.spacing(3),\n  },\n};\n\n// Dialog title and actions look pretty good with similar spacing\nconst dialogHeadFootSpacing = {\n  padding: '8px 12px',\n  [covidTheme.breakpoints.up('sm')]: {\n    padding: '12px 16px',\n  },\n};\n\n// Global overrides of MUI components that need to be re-styled often\ncovidTheme.overrides = {\n  MuiInput: {\n    // Bebas is bad news for <input> since it lacks lowercase. Will also apply\n    // Roboto to textful pages like <About>.\n    root: { fontFamily: \"'Roboto', sans-serif\" },\n  },\n  MuiDialog: {\n    // Outside boundary of all dialogs\n    paper: {\n      margin: 12,\n    },\n    // e.g. splash screen\n    paperScrollPaper: {\n      maxHeight: 'calc(100% - 24px)',\n    },\n    paperFullWidth: {\n      maxHeight: 'calc(100% - 24px)',\n      width: 'calc(100% - 16px)',\n    },\n  },\n  MuiDialogTitle: {\n    root: dialogHeadFootSpacing,\n  },\n  MuiDialogActions: {\n    root: dialogHeadFootSpacing,\n  },\n  MuiDialogContent: {\n    root: {\n      ...dialogContentPadding,\n      display: 'flex',\n      justifyContent: 'center',\n      flexDirection: 'column',\n      minHeight: 225, // otherwise looks silly when there is not much content\n    },\n    dividers: {\n      ...dialogContentPadding,\n    },\n  },\n};\n\nexport const GlobalCss = withStyles({\n  // @global is handled by jss-plugin-global.\n  '@global': {\n    '.simpler-font': {\n      fontFamily: \"'Roboto', sans-serif\",\n    },\n    // Pushes it to left, but not if it's the only element in the actions\n    '.MuiDialogActions-root > *:first-child:not(:last-child)': {\n      marginRight: 'auto',\n    },\n    // Includes <a> elems styled as buttons (e.g. \"Cancel\")\n    '.MuiDialogActions-root > .MuiButtonBase-root': {\n      minWidth: 40, // override 60px default (too big for sm btns like \"Back\")\n    },\n    '.obvious-link': {\n      color: covidTheme.palette.info.main,\n      textDecoration: 'none',\n    },\n  },\n})(() => null);\n\nexport const theme = responsiveFontSizes(covidTheme);\n","import React, { FC, useState } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { CssBaseline } from '@material-ui/core';\nimport 'firebase/auth';\nimport { FirebaseAuthProvider } from '@react-firebase/auth';\n\nimport {\n  Dashboard,\n  GlobalProvider,\n  CustomSnackbar,\n  SuccessConfModal,\n} from 'components';\nimport { UserProvider } from 'context';\nimport { Modal } from 'components/submission';\nimport {\n  Home,\n  About,\n  Models,\n  List,\n  TermsOfService,\n  PrivacyPolicy,\n  SecretSnackground,\n  LoginSignup,\n} from 'views';\nimport firebase from 'config/firebase';\nimport { theme, GlobalCss } from 'theme';\n\nconst Routes: FC = () => {\n  const [successConfOpen, setSuccessConfOpen] = useState<boolean>(false);\n\n  return (\n    // @ts-ignore\n    <FirebaseAuthProvider firebase={firebase}>\n      <GlobalProvider>\n        <UserProvider>\n          <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <GlobalCss />\n            <Router basename={process.env.REACT_APP_ROUTER_BASENAME || '/'}>\n              <Dashboard>\n                <Route path=\"/models\">\n                  <Models />\n                </Route>\n                <Route path=\"/about\">\n                  <About />\n                </Route>\n                <Route path=\"/privacy-policy\">\n                  <PrivacyPolicy />\n                </Route>\n                <Route path=\"/terms-of-service\">\n                  <TermsOfService />\n                </Route>\n                <Route path=\"/list\">\n                  <List />\n                </Route>\n                <Route path=\"/secret-snackground\">\n                  <SecretSnackground />\n                </Route>\n                <Route path=\"/\" exact>\n                  <Home />\n                </Route>\n                <SuccessConfModal\n                  open={successConfOpen}\n                  setOpen={setSuccessConfOpen}\n                />\n                <CustomSnackbar />\n              </Dashboard>\n              {/* None of the modals need to be inside Dashboard */}\n              <LoginSignup />\n              <Route path=\"/self-report\">\n                <Modal setSuccessConfOpen={setSuccessConfOpen} />\n              </Route>\n            </Router>\n          </ThemeProvider>\n        </UserProvider>\n      </GlobalProvider>\n    </FirebaseAuthProvider>\n  );\n};\n\nexport default Routes;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from 'Routes';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}